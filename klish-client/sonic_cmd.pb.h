// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sonic_cmd.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_sonic_5fcmd_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_sonic_5fcmd_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_sonic_5fcmd_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_sonic_5fcmd_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_sonic_5fcmd_2eproto;
namespace cml {
class SONICCmdInputProfile;
class SONICCmdInputProfileDefaultTypeInternal;
extern SONICCmdInputProfileDefaultTypeInternal _SONICCmdInputProfile_default_instance_;
class SONICCmdRtnProfile;
class SONICCmdRtnProfileDefaultTypeInternal;
extern SONICCmdRtnProfileDefaultTypeInternal _SONICCmdRtnProfile_default_instance_;
}  // namespace cml
PROTOBUF_NAMESPACE_OPEN
template<> ::cml::SONICCmdInputProfile* Arena::CreateMaybeMessage<::cml::SONICCmdInputProfile>(Arena*);
template<> ::cml::SONICCmdRtnProfile* Arena::CreateMaybeMessage<::cml::SONICCmdRtnProfile>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace cml {

enum CMD_RTNCODE : int {
  CMD_EXEC_SUCC = 0,
  CMD_EXEC_FAILED = 1,
  CMD_EXEC_FINISHED = 2,
  CMD_EXEC_NOT_FINISH = 3,
  CMD_RTNCODE_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  CMD_RTNCODE_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool CMD_RTNCODE_IsValid(int value);
constexpr CMD_RTNCODE CMD_RTNCODE_MIN = CMD_EXEC_SUCC;
constexpr CMD_RTNCODE CMD_RTNCODE_MAX = CMD_EXEC_NOT_FINISH;
constexpr int CMD_RTNCODE_ARRAYSIZE = CMD_RTNCODE_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMD_RTNCODE_descriptor();
template<typename T>
inline const std::string& CMD_RTNCODE_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMD_RTNCODE>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMD_RTNCODE_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMD_RTNCODE_descriptor(), enum_t_value);
}
inline bool CMD_RTNCODE_Parse(
    const std::string& name, CMD_RTNCODE* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMD_RTNCODE>(
    CMD_RTNCODE_descriptor(), name, value);
}
// ===================================================================

class SONICCmdInputProfile :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cml.SONICCmdInputProfile) */ {
 public:
  SONICCmdInputProfile();
  virtual ~SONICCmdInputProfile();

  SONICCmdInputProfile(const SONICCmdInputProfile& from);
  SONICCmdInputProfile(SONICCmdInputProfile&& from) noexcept
    : SONICCmdInputProfile() {
    *this = ::std::move(from);
  }

  inline SONICCmdInputProfile& operator=(const SONICCmdInputProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline SONICCmdInputProfile& operator=(SONICCmdInputProfile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SONICCmdInputProfile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SONICCmdInputProfile* internal_default_instance() {
    return reinterpret_cast<const SONICCmdInputProfile*>(
               &_SONICCmdInputProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SONICCmdInputProfile& a, SONICCmdInputProfile& b) {
    a.Swap(&b);
  }
  inline void Swap(SONICCmdInputProfile* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SONICCmdInputProfile* New() const final {
    return CreateMaybeMessage<SONICCmdInputProfile>(nullptr);
  }

  SONICCmdInputProfile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SONICCmdInputProfile>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SONICCmdInputProfile& from);
  void MergeFrom(const SONICCmdInputProfile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SONICCmdInputProfile* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "cml.SONICCmdInputProfile";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_sonic_5fcmd_2eproto);
    return ::descriptor_table_sonic_5fcmd_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCmdinputLineFieldNumber = 2,
    kCmdviewListFieldNumber = 3,
    kCmdIdFieldNumber = 1,
    kKlishVtyNoFieldNumber = 5,
    kUpdatedAtFieldNumber = 4,
  };
  // string cmdinput_line = 2;
  void clear_cmdinput_line();
  const std::string& cmdinput_line() const;
  void set_cmdinput_line(const std::string& value);
  void set_cmdinput_line(std::string&& value);
  void set_cmdinput_line(const char* value);
  void set_cmdinput_line(const char* value, size_t size);
  std::string* mutable_cmdinput_line();
  std::string* release_cmdinput_line();
  void set_allocated_cmdinput_line(std::string* cmdinput_line);

  // string cmdview_list = 3;
  void clear_cmdview_list();
  const std::string& cmdview_list() const;
  void set_cmdview_list(const std::string& value);
  void set_cmdview_list(std::string&& value);
  void set_cmdview_list(const char* value);
  void set_cmdview_list(const char* value, size_t size);
  std::string* mutable_cmdview_list();
  std::string* release_cmdview_list();
  void set_allocated_cmdview_list(std::string* cmdview_list);

  // uint32 cmd_id = 1;
  void clear_cmd_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 cmd_id() const;
  void set_cmd_id(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 klish_vty_no = 5;
  void clear_klish_vty_no();
  ::PROTOBUF_NAMESPACE_ID::uint32 klish_vty_no() const;
  void set_klish_vty_no(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint64 updated_at = 4;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint64 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // @@protoc_insertion_point(class_scope:cml.SONICCmdInputProfile)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cmdinput_line_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cmdview_list_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cmd_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 klish_vty_no_;
  ::PROTOBUF_NAMESPACE_ID::uint64 updated_at_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_sonic_5fcmd_2eproto;
};
// -------------------------------------------------------------------

class SONICCmdRtnProfile :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:cml.SONICCmdRtnProfile) */ {
 public:
  SONICCmdRtnProfile();
  virtual ~SONICCmdRtnProfile();

  SONICCmdRtnProfile(const SONICCmdRtnProfile& from);
  SONICCmdRtnProfile(SONICCmdRtnProfile&& from) noexcept
    : SONICCmdRtnProfile() {
    *this = ::std::move(from);
  }

  inline SONICCmdRtnProfile& operator=(const SONICCmdRtnProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline SONICCmdRtnProfile& operator=(SONICCmdRtnProfile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SONICCmdRtnProfile& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SONICCmdRtnProfile* internal_default_instance() {
    return reinterpret_cast<const SONICCmdRtnProfile*>(
               &_SONICCmdRtnProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SONICCmdRtnProfile& a, SONICCmdRtnProfile& b) {
    a.Swap(&b);
  }
  inline void Swap(SONICCmdRtnProfile* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SONICCmdRtnProfile* New() const final {
    return CreateMaybeMessage<SONICCmdRtnProfile>(nullptr);
  }

  SONICCmdRtnProfile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SONICCmdRtnProfile>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SONICCmdRtnProfile& from);
  void MergeFrom(const SONICCmdRtnProfile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SONICCmdRtnProfile* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "cml.SONICCmdRtnProfile";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_sonic_5fcmd_2eproto);
    return ::descriptor_table_sonic_5fcmd_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCmdrtnStrFieldNumber = 3,
    kCmdIdFieldNumber = 1,
    kCmdRtncodeFieldNumber = 2,
    kUpdatedAtFieldNumber = 5,
    kCmdrtnSerialFieldNumber = 4,
    kKlishVtyNoFieldNumber = 6,
  };
  // string cmdrtn_str = 3;
  void clear_cmdrtn_str();
  const std::string& cmdrtn_str() const;
  void set_cmdrtn_str(const std::string& value);
  void set_cmdrtn_str(std::string&& value);
  void set_cmdrtn_str(const char* value);
  void set_cmdrtn_str(const char* value, size_t size);
  std::string* mutable_cmdrtn_str();
  std::string* release_cmdrtn_str();
  void set_allocated_cmdrtn_str(std::string* cmdrtn_str);

  // uint32 cmd_id = 1;
  void clear_cmd_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 cmd_id() const;
  void set_cmd_id(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // .cml.CMD_RTNCODE cmd_rtncode = 2;
  void clear_cmd_rtncode();
  ::cml::CMD_RTNCODE cmd_rtncode() const;
  void set_cmd_rtncode(::cml::CMD_RTNCODE value);

  // uint64 updated_at = 5;
  void clear_updated_at();
  ::PROTOBUF_NAMESPACE_ID::uint64 updated_at() const;
  void set_updated_at(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // uint32 cmdrtn_serial = 4;
  void clear_cmdrtn_serial();
  ::PROTOBUF_NAMESPACE_ID::uint32 cmdrtn_serial() const;
  void set_cmdrtn_serial(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 klish_vty_no = 6;
  void clear_klish_vty_no();
  ::PROTOBUF_NAMESPACE_ID::uint32 klish_vty_no() const;
  void set_klish_vty_no(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:cml.SONICCmdRtnProfile)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cmdrtn_str_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cmd_id_;
  int cmd_rtncode_;
  ::PROTOBUF_NAMESPACE_ID::uint64 updated_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cmdrtn_serial_;
  ::PROTOBUF_NAMESPACE_ID::uint32 klish_vty_no_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_sonic_5fcmd_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SONICCmdInputProfile

// uint32 cmd_id = 1;
inline void SONICCmdInputProfile::clear_cmd_id() {
  cmd_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SONICCmdInputProfile::cmd_id() const {
  // @@protoc_insertion_point(field_get:cml.SONICCmdInputProfile.cmd_id)
  return cmd_id_;
}
inline void SONICCmdInputProfile::set_cmd_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cmd_id_ = value;
  // @@protoc_insertion_point(field_set:cml.SONICCmdInputProfile.cmd_id)
}

// string cmdinput_line = 2;
inline void SONICCmdInputProfile::clear_cmdinput_line() {
  cmdinput_line_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SONICCmdInputProfile::cmdinput_line() const {
  // @@protoc_insertion_point(field_get:cml.SONICCmdInputProfile.cmdinput_line)
  return cmdinput_line_.GetNoArena();
}
inline void SONICCmdInputProfile::set_cmdinput_line(const std::string& value) {
  
  cmdinput_line_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cml.SONICCmdInputProfile.cmdinput_line)
}
inline void SONICCmdInputProfile::set_cmdinput_line(std::string&& value) {
  
  cmdinput_line_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cml.SONICCmdInputProfile.cmdinput_line)
}
inline void SONICCmdInputProfile::set_cmdinput_line(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cmdinput_line_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cml.SONICCmdInputProfile.cmdinput_line)
}
inline void SONICCmdInputProfile::set_cmdinput_line(const char* value, size_t size) {
  
  cmdinput_line_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cml.SONICCmdInputProfile.cmdinput_line)
}
inline std::string* SONICCmdInputProfile::mutable_cmdinput_line() {
  
  // @@protoc_insertion_point(field_mutable:cml.SONICCmdInputProfile.cmdinput_line)
  return cmdinput_line_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SONICCmdInputProfile::release_cmdinput_line() {
  // @@protoc_insertion_point(field_release:cml.SONICCmdInputProfile.cmdinput_line)
  
  return cmdinput_line_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SONICCmdInputProfile::set_allocated_cmdinput_line(std::string* cmdinput_line) {
  if (cmdinput_line != nullptr) {
    
  } else {
    
  }
  cmdinput_line_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cmdinput_line);
  // @@protoc_insertion_point(field_set_allocated:cml.SONICCmdInputProfile.cmdinput_line)
}

// string cmdview_list = 3;
inline void SONICCmdInputProfile::clear_cmdview_list() {
  cmdview_list_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SONICCmdInputProfile::cmdview_list() const {
  // @@protoc_insertion_point(field_get:cml.SONICCmdInputProfile.cmdview_list)
  return cmdview_list_.GetNoArena();
}
inline void SONICCmdInputProfile::set_cmdview_list(const std::string& value) {
  
  cmdview_list_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cml.SONICCmdInputProfile.cmdview_list)
}
inline void SONICCmdInputProfile::set_cmdview_list(std::string&& value) {
  
  cmdview_list_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cml.SONICCmdInputProfile.cmdview_list)
}
inline void SONICCmdInputProfile::set_cmdview_list(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cmdview_list_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cml.SONICCmdInputProfile.cmdview_list)
}
inline void SONICCmdInputProfile::set_cmdview_list(const char* value, size_t size) {
  
  cmdview_list_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cml.SONICCmdInputProfile.cmdview_list)
}
inline std::string* SONICCmdInputProfile::mutable_cmdview_list() {
  
  // @@protoc_insertion_point(field_mutable:cml.SONICCmdInputProfile.cmdview_list)
  return cmdview_list_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SONICCmdInputProfile::release_cmdview_list() {
  // @@protoc_insertion_point(field_release:cml.SONICCmdInputProfile.cmdview_list)
  
  return cmdview_list_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SONICCmdInputProfile::set_allocated_cmdview_list(std::string* cmdview_list) {
  if (cmdview_list != nullptr) {
    
  } else {
    
  }
  cmdview_list_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cmdview_list);
  // @@protoc_insertion_point(field_set_allocated:cml.SONICCmdInputProfile.cmdview_list)
}

// uint64 updated_at = 4;
inline void SONICCmdInputProfile::clear_updated_at() {
  updated_at_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SONICCmdInputProfile::updated_at() const {
  // @@protoc_insertion_point(field_get:cml.SONICCmdInputProfile.updated_at)
  return updated_at_;
}
inline void SONICCmdInputProfile::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  updated_at_ = value;
  // @@protoc_insertion_point(field_set:cml.SONICCmdInputProfile.updated_at)
}

// uint32 klish_vty_no = 5;
inline void SONICCmdInputProfile::clear_klish_vty_no() {
  klish_vty_no_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SONICCmdInputProfile::klish_vty_no() const {
  // @@protoc_insertion_point(field_get:cml.SONICCmdInputProfile.klish_vty_no)
  return klish_vty_no_;
}
inline void SONICCmdInputProfile::set_klish_vty_no(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  klish_vty_no_ = value;
  // @@protoc_insertion_point(field_set:cml.SONICCmdInputProfile.klish_vty_no)
}

// -------------------------------------------------------------------

// SONICCmdRtnProfile

// uint32 cmd_id = 1;
inline void SONICCmdRtnProfile::clear_cmd_id() {
  cmd_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SONICCmdRtnProfile::cmd_id() const {
  // @@protoc_insertion_point(field_get:cml.SONICCmdRtnProfile.cmd_id)
  return cmd_id_;
}
inline void SONICCmdRtnProfile::set_cmd_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cmd_id_ = value;
  // @@protoc_insertion_point(field_set:cml.SONICCmdRtnProfile.cmd_id)
}

// .cml.CMD_RTNCODE cmd_rtncode = 2;
inline void SONICCmdRtnProfile::clear_cmd_rtncode() {
  cmd_rtncode_ = 0;
}
inline ::cml::CMD_RTNCODE SONICCmdRtnProfile::cmd_rtncode() const {
  // @@protoc_insertion_point(field_get:cml.SONICCmdRtnProfile.cmd_rtncode)
  return static_cast< ::cml::CMD_RTNCODE >(cmd_rtncode_);
}
inline void SONICCmdRtnProfile::set_cmd_rtncode(::cml::CMD_RTNCODE value) {
  
  cmd_rtncode_ = value;
  // @@protoc_insertion_point(field_set:cml.SONICCmdRtnProfile.cmd_rtncode)
}

// string cmdrtn_str = 3;
inline void SONICCmdRtnProfile::clear_cmdrtn_str() {
  cmdrtn_str_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SONICCmdRtnProfile::cmdrtn_str() const {
  // @@protoc_insertion_point(field_get:cml.SONICCmdRtnProfile.cmdrtn_str)
  return cmdrtn_str_.GetNoArena();
}
inline void SONICCmdRtnProfile::set_cmdrtn_str(const std::string& value) {
  
  cmdrtn_str_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:cml.SONICCmdRtnProfile.cmdrtn_str)
}
inline void SONICCmdRtnProfile::set_cmdrtn_str(std::string&& value) {
  
  cmdrtn_str_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:cml.SONICCmdRtnProfile.cmdrtn_str)
}
inline void SONICCmdRtnProfile::set_cmdrtn_str(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cmdrtn_str_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:cml.SONICCmdRtnProfile.cmdrtn_str)
}
inline void SONICCmdRtnProfile::set_cmdrtn_str(const char* value, size_t size) {
  
  cmdrtn_str_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:cml.SONICCmdRtnProfile.cmdrtn_str)
}
inline std::string* SONICCmdRtnProfile::mutable_cmdrtn_str() {
  
  // @@protoc_insertion_point(field_mutable:cml.SONICCmdRtnProfile.cmdrtn_str)
  return cmdrtn_str_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SONICCmdRtnProfile::release_cmdrtn_str() {
  // @@protoc_insertion_point(field_release:cml.SONICCmdRtnProfile.cmdrtn_str)
  
  return cmdrtn_str_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SONICCmdRtnProfile::set_allocated_cmdrtn_str(std::string* cmdrtn_str) {
  if (cmdrtn_str != nullptr) {
    
  } else {
    
  }
  cmdrtn_str_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cmdrtn_str);
  // @@protoc_insertion_point(field_set_allocated:cml.SONICCmdRtnProfile.cmdrtn_str)
}

// uint32 cmdrtn_serial = 4;
inline void SONICCmdRtnProfile::clear_cmdrtn_serial() {
  cmdrtn_serial_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SONICCmdRtnProfile::cmdrtn_serial() const {
  // @@protoc_insertion_point(field_get:cml.SONICCmdRtnProfile.cmdrtn_serial)
  return cmdrtn_serial_;
}
inline void SONICCmdRtnProfile::set_cmdrtn_serial(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cmdrtn_serial_ = value;
  // @@protoc_insertion_point(field_set:cml.SONICCmdRtnProfile.cmdrtn_serial)
}

// uint64 updated_at = 5;
inline void SONICCmdRtnProfile::clear_updated_at() {
  updated_at_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SONICCmdRtnProfile::updated_at() const {
  // @@protoc_insertion_point(field_get:cml.SONICCmdRtnProfile.updated_at)
  return updated_at_;
}
inline void SONICCmdRtnProfile::set_updated_at(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  updated_at_ = value;
  // @@protoc_insertion_point(field_set:cml.SONICCmdRtnProfile.updated_at)
}

// uint32 klish_vty_no = 6;
inline void SONICCmdRtnProfile::clear_klish_vty_no() {
  klish_vty_no_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SONICCmdRtnProfile::klish_vty_no() const {
  // @@protoc_insertion_point(field_get:cml.SONICCmdRtnProfile.klish_vty_no)
  return klish_vty_no_;
}
inline void SONICCmdRtnProfile::set_klish_vty_no(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  klish_vty_no_ = value;
  // @@protoc_insertion_point(field_set:cml.SONICCmdRtnProfile.klish_vty_no)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace cml

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::cml::CMD_RTNCODE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::cml::CMD_RTNCODE>() {
  return ::cml::CMD_RTNCODE_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_sonic_5fcmd_2eproto
