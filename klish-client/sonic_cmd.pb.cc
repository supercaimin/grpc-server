// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sonic_cmd.proto

#include "sonic_cmd.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace cml {
class SONICCmdInputProfileDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SONICCmdInputProfile> _instance;
} _SONICCmdInputProfile_default_instance_;
class SONICCmdRtnProfileDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SONICCmdRtnProfile> _instance;
} _SONICCmdRtnProfile_default_instance_;
}  // namespace cml
static void InitDefaultsscc_info_SONICCmdInputProfile_sonic_5fcmd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cml::_SONICCmdInputProfile_default_instance_;
    new (ptr) ::cml::SONICCmdInputProfile();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cml::SONICCmdInputProfile::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SONICCmdInputProfile_sonic_5fcmd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_SONICCmdInputProfile_sonic_5fcmd_2eproto}, {}};

static void InitDefaultsscc_info_SONICCmdRtnProfile_sonic_5fcmd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cml::_SONICCmdRtnProfile_default_instance_;
    new (ptr) ::cml::SONICCmdRtnProfile();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cml::SONICCmdRtnProfile::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SONICCmdRtnProfile_sonic_5fcmd_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_SONICCmdRtnProfile_sonic_5fcmd_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_sonic_5fcmd_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_sonic_5fcmd_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_sonic_5fcmd_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_sonic_5fcmd_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cml::SONICCmdInputProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::cml::SONICCmdInputProfile, cmd_id_),
  PROTOBUF_FIELD_OFFSET(::cml::SONICCmdInputProfile, cmdinput_line_),
  PROTOBUF_FIELD_OFFSET(::cml::SONICCmdInputProfile, cmdview_list_),
  PROTOBUF_FIELD_OFFSET(::cml::SONICCmdInputProfile, updated_at_),
  PROTOBUF_FIELD_OFFSET(::cml::SONICCmdInputProfile, klish_vty_no_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cml::SONICCmdRtnProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::cml::SONICCmdRtnProfile, cmd_id_),
  PROTOBUF_FIELD_OFFSET(::cml::SONICCmdRtnProfile, cmd_rtncode_),
  PROTOBUF_FIELD_OFFSET(::cml::SONICCmdRtnProfile, cmdrtn_str_),
  PROTOBUF_FIELD_OFFSET(::cml::SONICCmdRtnProfile, cmdrtn_serial_),
  PROTOBUF_FIELD_OFFSET(::cml::SONICCmdRtnProfile, updated_at_),
  PROTOBUF_FIELD_OFFSET(::cml::SONICCmdRtnProfile, klish_vty_no_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::cml::SONICCmdInputProfile)},
  { 10, -1, sizeof(::cml::SONICCmdRtnProfile)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::cml::_SONICCmdInputProfile_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::cml::_SONICCmdRtnProfile_default_instance_),
};

const char descriptor_table_protodef_sonic_5fcmd_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017sonic_cmd.proto\022\003cml\"}\n\024SONICCmdInputP"
  "rofile\022\016\n\006cmd_id\030\001 \001(\r\022\025\n\rcmdinput_line\030"
  "\002 \001(\t\022\024\n\014cmdview_list\030\003 \001(\t\022\022\n\nupdated_a"
  "t\030\004 \001(\004\022\024\n\014klish_vty_no\030\005 \001(\r\"\240\001\n\022SONICC"
  "mdRtnProfile\022\016\n\006cmd_id\030\001 \001(\r\022%\n\013cmd_rtnc"
  "ode\030\002 \001(\0162\020.cml.CMD_RTNCODE\022\022\n\ncmdrtn_st"
  "r\030\003 \001(\t\022\025\n\rcmdrtn_serial\030\004 \001(\r\022\022\n\nupdate"
  "d_at\030\005 \001(\004\022\024\n\014klish_vty_no\030\006 \001(\r*e\n\013CMD_"
  "RTNCODE\022\021\n\rCMD_EXEC_SUCC\020\000\022\023\n\017CMD_EXEC_F"
  "AILED\020\001\022\025\n\021CMD_EXEC_FINISHED\020\002\022\027\n\023CMD_EX"
  "EC_NOT_FINISH\020\0032^\n\017SonicCmdService\022K\n\023Ex"
  "ecSonicCfgProfile\022\031.cml.SONICCmdInputPro"
  "file\032\027.cml.SONICCmdRtnProfile\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_sonic_5fcmd_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_sonic_5fcmd_2eproto_sccs[2] = {
  &scc_info_SONICCmdInputProfile_sonic_5fcmd_2eproto.base,
  &scc_info_SONICCmdRtnProfile_sonic_5fcmd_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_sonic_5fcmd_2eproto_once;
static bool descriptor_table_sonic_5fcmd_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_sonic_5fcmd_2eproto = {
  &descriptor_table_sonic_5fcmd_2eproto_initialized, descriptor_table_protodef_sonic_5fcmd_2eproto, "sonic_cmd.proto", 519,
  &descriptor_table_sonic_5fcmd_2eproto_once, descriptor_table_sonic_5fcmd_2eproto_sccs, descriptor_table_sonic_5fcmd_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_sonic_5fcmd_2eproto::offsets,
  file_level_metadata_sonic_5fcmd_2eproto, 2, file_level_enum_descriptors_sonic_5fcmd_2eproto, file_level_service_descriptors_sonic_5fcmd_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_sonic_5fcmd_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_sonic_5fcmd_2eproto), true);
namespace cml {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMD_RTNCODE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_sonic_5fcmd_2eproto);
  return file_level_enum_descriptors_sonic_5fcmd_2eproto[0];
}
bool CMD_RTNCODE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void SONICCmdInputProfile::InitAsDefaultInstance() {
}
class SONICCmdInputProfile::_Internal {
 public:
};

SONICCmdInputProfile::SONICCmdInputProfile()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cml.SONICCmdInputProfile)
}
SONICCmdInputProfile::SONICCmdInputProfile(const SONICCmdInputProfile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cmdinput_line_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.cmdinput_line().empty()) {
    cmdinput_line_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.cmdinput_line_);
  }
  cmdview_list_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.cmdview_list().empty()) {
    cmdview_list_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.cmdview_list_);
  }
  ::memcpy(&cmd_id_, &from.cmd_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&updated_at_) -
    reinterpret_cast<char*>(&cmd_id_)) + sizeof(updated_at_));
  // @@protoc_insertion_point(copy_constructor:cml.SONICCmdInputProfile)
}

void SONICCmdInputProfile::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SONICCmdInputProfile_sonic_5fcmd_2eproto.base);
  cmdinput_line_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cmdview_list_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmd_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&updated_at_) -
      reinterpret_cast<char*>(&cmd_id_)) + sizeof(updated_at_));
}

SONICCmdInputProfile::~SONICCmdInputProfile() {
  // @@protoc_insertion_point(destructor:cml.SONICCmdInputProfile)
  SharedDtor();
}

void SONICCmdInputProfile::SharedDtor() {
  cmdinput_line_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cmdview_list_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SONICCmdInputProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SONICCmdInputProfile& SONICCmdInputProfile::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SONICCmdInputProfile_sonic_5fcmd_2eproto.base);
  return *internal_default_instance();
}


void SONICCmdInputProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:cml.SONICCmdInputProfile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cmdinput_line_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cmdview_list_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmd_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&updated_at_) -
      reinterpret_cast<char*>(&cmd_id_)) + sizeof(updated_at_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SONICCmdInputProfile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 cmd_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          cmd_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string cmdinput_line = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_cmdinput_line(), ptr, ctx, "cml.SONICCmdInputProfile.cmdinput_line");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string cmdview_list = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_cmdview_list(), ptr, ctx, "cml.SONICCmdInputProfile.cmdview_list");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 updated_at = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          updated_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 klish_vty_no = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          klish_vty_no_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SONICCmdInputProfile::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:cml.SONICCmdInputProfile)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cmd_id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmd_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cmdinput_line = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_cmdinput_line()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->cmdinput_line().data(), static_cast<int>(this->cmdinput_line().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "cml.SONICCmdInputProfile.cmdinput_line"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cmdview_list = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_cmdview_list()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->cmdview_list().data(), static_cast<int>(this->cmdview_list().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "cml.SONICCmdInputProfile.cmdview_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 updated_at = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &updated_at_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 klish_vty_no = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &klish_vty_no_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cml.SONICCmdInputProfile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cml.SONICCmdInputProfile)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SONICCmdInputProfile::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cml.SONICCmdInputProfile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmd_id = 1;
  if (this->cmd_id() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(1, this->cmd_id(), output);
  }

  // string cmdinput_line = 2;
  if (this->cmdinput_line().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->cmdinput_line().data(), static_cast<int>(this->cmdinput_line().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cml.SONICCmdInputProfile.cmdinput_line");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cmdinput_line(), output);
  }

  // string cmdview_list = 3;
  if (this->cmdview_list().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->cmdview_list().data(), static_cast<int>(this->cmdview_list().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cml.SONICCmdInputProfile.cmdview_list");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cmdview_list(), output);
  }

  // uint64 updated_at = 4;
  if (this->updated_at() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(4, this->updated_at(), output);
  }

  // uint32 klish_vty_no = 5;
  if (this->klish_vty_no() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(5, this->klish_vty_no(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:cml.SONICCmdInputProfile)
}

::PROTOBUF_NAMESPACE_ID::uint8* SONICCmdInputProfile::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cml.SONICCmdInputProfile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmd_id = 1;
  if (this->cmd_id() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->cmd_id(), target);
  }

  // string cmdinput_line = 2;
  if (this->cmdinput_line().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->cmdinput_line().data(), static_cast<int>(this->cmdinput_line().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cml.SONICCmdInputProfile.cmdinput_line");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->cmdinput_line(), target);
  }

  // string cmdview_list = 3;
  if (this->cmdview_list().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->cmdview_list().data(), static_cast<int>(this->cmdview_list().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cml.SONICCmdInputProfile.cmdview_list");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->cmdview_list(), target);
  }

  // uint64 updated_at = 4;
  if (this->updated_at() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->updated_at(), target);
  }

  // uint32 klish_vty_no = 5;
  if (this->klish_vty_no() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->klish_vty_no(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cml.SONICCmdInputProfile)
  return target;
}

size_t SONICCmdInputProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cml.SONICCmdInputProfile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string cmdinput_line = 2;
  if (this->cmdinput_line().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->cmdinput_line());
  }

  // string cmdview_list = 3;
  if (this->cmdview_list().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->cmdview_list());
  }

  // uint32 cmd_id = 1;
  if (this->cmd_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->cmd_id());
  }

  // uint32 klish_vty_no = 5;
  if (this->klish_vty_no() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->klish_vty_no());
  }

  // uint64 updated_at = 4;
  if (this->updated_at() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->updated_at());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SONICCmdInputProfile::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cml.SONICCmdInputProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const SONICCmdInputProfile* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SONICCmdInputProfile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cml.SONICCmdInputProfile)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cml.SONICCmdInputProfile)
    MergeFrom(*source);
  }
}

void SONICCmdInputProfile::MergeFrom(const SONICCmdInputProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cml.SONICCmdInputProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cmdinput_line().size() > 0) {

    cmdinput_line_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.cmdinput_line_);
  }
  if (from.cmdview_list().size() > 0) {

    cmdview_list_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.cmdview_list_);
  }
  if (from.cmd_id() != 0) {
    set_cmd_id(from.cmd_id());
  }
  if (from.klish_vty_no() != 0) {
    set_klish_vty_no(from.klish_vty_no());
  }
  if (from.updated_at() != 0) {
    set_updated_at(from.updated_at());
  }
}

void SONICCmdInputProfile::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cml.SONICCmdInputProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SONICCmdInputProfile::CopyFrom(const SONICCmdInputProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cml.SONICCmdInputProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SONICCmdInputProfile::IsInitialized() const {
  return true;
}

void SONICCmdInputProfile::InternalSwap(SONICCmdInputProfile* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  cmdinput_line_.Swap(&other->cmdinput_line_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cmdview_list_.Swap(&other->cmdview_list_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cmd_id_, other->cmd_id_);
  swap(klish_vty_no_, other->klish_vty_no_);
  swap(updated_at_, other->updated_at_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SONICCmdInputProfile::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SONICCmdRtnProfile::InitAsDefaultInstance() {
}
class SONICCmdRtnProfile::_Internal {
 public:
};

SONICCmdRtnProfile::SONICCmdRtnProfile()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:cml.SONICCmdRtnProfile)
}
SONICCmdRtnProfile::SONICCmdRtnProfile(const SONICCmdRtnProfile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cmdrtn_str_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from.cmdrtn_str().empty()) {
    cmdrtn_str_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.cmdrtn_str_);
  }
  ::memcpy(&cmd_id_, &from.cmd_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&klish_vty_no_) -
    reinterpret_cast<char*>(&cmd_id_)) + sizeof(klish_vty_no_));
  // @@protoc_insertion_point(copy_constructor:cml.SONICCmdRtnProfile)
}

void SONICCmdRtnProfile::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SONICCmdRtnProfile_sonic_5fcmd_2eproto.base);
  cmdrtn_str_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmd_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&klish_vty_no_) -
      reinterpret_cast<char*>(&cmd_id_)) + sizeof(klish_vty_no_));
}

SONICCmdRtnProfile::~SONICCmdRtnProfile() {
  // @@protoc_insertion_point(destructor:cml.SONICCmdRtnProfile)
  SharedDtor();
}

void SONICCmdRtnProfile::SharedDtor() {
  cmdrtn_str_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SONICCmdRtnProfile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SONICCmdRtnProfile& SONICCmdRtnProfile::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SONICCmdRtnProfile_sonic_5fcmd_2eproto.base);
  return *internal_default_instance();
}


void SONICCmdRtnProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:cml.SONICCmdRtnProfile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cmdrtn_str_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmd_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&klish_vty_no_) -
      reinterpret_cast<char*>(&cmd_id_)) + sizeof(klish_vty_no_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SONICCmdRtnProfile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 cmd_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          cmd_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .cml.CMD_RTNCODE cmd_rtncode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_cmd_rtncode(static_cast<::cml::CMD_RTNCODE>(val));
        } else goto handle_unusual;
        continue;
      // string cmdrtn_str = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_cmdrtn_str(), ptr, ctx, "cml.SONICCmdRtnProfile.cmdrtn_str");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 cmdrtn_serial = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          cmdrtn_serial_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 updated_at = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          updated_at_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 klish_vty_no = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          klish_vty_no_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SONICCmdRtnProfile::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:cml.SONICCmdRtnProfile)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cmd_id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmd_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .cml.CMD_RTNCODE cmd_rtncode = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cmd_rtncode(static_cast< ::cml::CMD_RTNCODE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cmdrtn_str = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_cmdrtn_str()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->cmdrtn_str().data(), static_cast<int>(this->cmdrtn_str().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "cml.SONICCmdRtnProfile.cmdrtn_str"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cmdrtn_serial = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmdrtn_serial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 updated_at = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &updated_at_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 klish_vty_no = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &klish_vty_no_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cml.SONICCmdRtnProfile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cml.SONICCmdRtnProfile)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SONICCmdRtnProfile::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cml.SONICCmdRtnProfile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmd_id = 1;
  if (this->cmd_id() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(1, this->cmd_id(), output);
  }

  // .cml.CMD_RTNCODE cmd_rtncode = 2;
  if (this->cmd_rtncode() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      2, this->cmd_rtncode(), output);
  }

  // string cmdrtn_str = 3;
  if (this->cmdrtn_str().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->cmdrtn_str().data(), static_cast<int>(this->cmdrtn_str().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cml.SONICCmdRtnProfile.cmdrtn_str");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cmdrtn_str(), output);
  }

  // uint32 cmdrtn_serial = 4;
  if (this->cmdrtn_serial() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(4, this->cmdrtn_serial(), output);
  }

  // uint64 updated_at = 5;
  if (this->updated_at() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(5, this->updated_at(), output);
  }

  // uint32 klish_vty_no = 6;
  if (this->klish_vty_no() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(6, this->klish_vty_no(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:cml.SONICCmdRtnProfile)
}

::PROTOBUF_NAMESPACE_ID::uint8* SONICCmdRtnProfile::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:cml.SONICCmdRtnProfile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmd_id = 1;
  if (this->cmd_id() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->cmd_id(), target);
  }

  // .cml.CMD_RTNCODE cmd_rtncode = 2;
  if (this->cmd_rtncode() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->cmd_rtncode(), target);
  }

  // string cmdrtn_str = 3;
  if (this->cmdrtn_str().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->cmdrtn_str().data(), static_cast<int>(this->cmdrtn_str().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cml.SONICCmdRtnProfile.cmdrtn_str");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->cmdrtn_str(), target);
  }

  // uint32 cmdrtn_serial = 4;
  if (this->cmdrtn_serial() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->cmdrtn_serial(), target);
  }

  // uint64 updated_at = 5;
  if (this->updated_at() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->updated_at(), target);
  }

  // uint32 klish_vty_no = 6;
  if (this->klish_vty_no() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->klish_vty_no(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cml.SONICCmdRtnProfile)
  return target;
}

size_t SONICCmdRtnProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cml.SONICCmdRtnProfile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string cmdrtn_str = 3;
  if (this->cmdrtn_str().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->cmdrtn_str());
  }

  // uint32 cmd_id = 1;
  if (this->cmd_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->cmd_id());
  }

  // .cml.CMD_RTNCODE cmd_rtncode = 2;
  if (this->cmd_rtncode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->cmd_rtncode());
  }

  // uint64 updated_at = 5;
  if (this->updated_at() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->updated_at());
  }

  // uint32 cmdrtn_serial = 4;
  if (this->cmdrtn_serial() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->cmdrtn_serial());
  }

  // uint32 klish_vty_no = 6;
  if (this->klish_vty_no() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->klish_vty_no());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SONICCmdRtnProfile::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cml.SONICCmdRtnProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const SONICCmdRtnProfile* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SONICCmdRtnProfile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cml.SONICCmdRtnProfile)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cml.SONICCmdRtnProfile)
    MergeFrom(*source);
  }
}

void SONICCmdRtnProfile::MergeFrom(const SONICCmdRtnProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cml.SONICCmdRtnProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cmdrtn_str().size() > 0) {

    cmdrtn_str_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.cmdrtn_str_);
  }
  if (from.cmd_id() != 0) {
    set_cmd_id(from.cmd_id());
  }
  if (from.cmd_rtncode() != 0) {
    set_cmd_rtncode(from.cmd_rtncode());
  }
  if (from.updated_at() != 0) {
    set_updated_at(from.updated_at());
  }
  if (from.cmdrtn_serial() != 0) {
    set_cmdrtn_serial(from.cmdrtn_serial());
  }
  if (from.klish_vty_no() != 0) {
    set_klish_vty_no(from.klish_vty_no());
  }
}

void SONICCmdRtnProfile::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cml.SONICCmdRtnProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SONICCmdRtnProfile::CopyFrom(const SONICCmdRtnProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cml.SONICCmdRtnProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SONICCmdRtnProfile::IsInitialized() const {
  return true;
}

void SONICCmdRtnProfile::InternalSwap(SONICCmdRtnProfile* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  cmdrtn_str_.Swap(&other->cmdrtn_str_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cmd_id_, other->cmd_id_);
  swap(cmd_rtncode_, other->cmd_rtncode_);
  swap(updated_at_, other->updated_at_);
  swap(cmdrtn_serial_, other->cmdrtn_serial_);
  swap(klish_vty_no_, other->klish_vty_no_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SONICCmdRtnProfile::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace cml
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cml::SONICCmdInputProfile* Arena::CreateMaybeMessage< ::cml::SONICCmdInputProfile >(Arena* arena) {
  return Arena::CreateInternal< ::cml::SONICCmdInputProfile >(arena);
}
template<> PROTOBUF_NOINLINE ::cml::SONICCmdRtnProfile* Arena::CreateMaybeMessage< ::cml::SONICCmdRtnProfile >(Arena* arena) {
  return Arena::CreateInternal< ::cml::SONICCmdRtnProfile >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
