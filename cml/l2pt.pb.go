// Code generated by protoc-gen-go. DO NOT EDIT.
// source: l2pt.proto

package cml

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//二层协议组播mac替换
//stp 有默认组播mac 固定值是0100-0ccd-cdd0
type L2Protommac struct {
	Prototype            string   `protobuf:"bytes,1,opt,name=prototype,proto3" json:"prototype,omitempty"`
	Newmmac              string   `protobuf:"bytes,2,opt,name=newmmac,proto3" json:"newmmac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2Protommac) Reset()         { *m = L2Protommac{} }
func (m *L2Protommac) String() string { return proto.CompactTextString(m) }
func (*L2Protommac) ProtoMessage()    {}
func (*L2Protommac) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a5d9fbaa04eb86d, []int{0}
}

func (m *L2Protommac) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2Protommac.Unmarshal(m, b)
}
func (m *L2Protommac) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2Protommac.Marshal(b, m, deterministic)
}
func (m *L2Protommac) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2Protommac.Merge(m, src)
}
func (m *L2Protommac) XXX_Size() int {
	return xxx_messageInfo_L2Protommac.Size(m)
}
func (m *L2Protommac) XXX_DiscardUnknown() {
	xxx_messageInfo_L2Protommac.DiscardUnknown(m)
}

var xxx_messageInfo_L2Protommac proto.InternalMessageInfo

func (m *L2Protommac) GetPrototype() string {
	if m != nil {
		return m.Prototype
	}
	return ""
}

func (m *L2Protommac) GetNewmmac() string {
	if m != nil {
		return m.Newmmac
	}
	return ""
}

//用户定义的协议号
type Userdefineproto struct {
	Protoname            string   `protobuf:"bytes,1,opt,name=protoname,proto3" json:"protoname,omitempty"`
	Protomac             string   `protobuf:"bytes,2,opt,name=protomac,proto3" json:"protomac,omitempty"`
	Encaptype            string   `protobuf:"bytes,3,opt,name=encaptype,proto3" json:"encaptype,omitempty"`
	Dsap                 string   `protobuf:"bytes,4,opt,name=dsap,proto3" json:"dsap,omitempty"`
	Ssap                 string   `protobuf:"bytes,5,opt,name=ssap,proto3" json:"ssap,omitempty"`
	Prototypevalue       int32    `protobuf:"varint,6,opt,name=prototypevalue,proto3" json:"prototypevalue,omitempty"`
	Newmmac              string   `protobuf:"bytes,7,opt,name=newmmac,proto3" json:"newmmac,omitempty"`
	Defaulmac            string   `protobuf:"bytes,8,opt,name=defaulmac,proto3" json:"defaulmac,omitempty"`
	Updatetime           int64    `protobuf:"varint,9,opt,name=updatetime,proto3" json:"updatetime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Userdefineproto) Reset()         { *m = Userdefineproto{} }
func (m *Userdefineproto) String() string { return proto.CompactTextString(m) }
func (*Userdefineproto) ProtoMessage()    {}
func (*Userdefineproto) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a5d9fbaa04eb86d, []int{1}
}

func (m *Userdefineproto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Userdefineproto.Unmarshal(m, b)
}
func (m *Userdefineproto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Userdefineproto.Marshal(b, m, deterministic)
}
func (m *Userdefineproto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Userdefineproto.Merge(m, src)
}
func (m *Userdefineproto) XXX_Size() int {
	return xxx_messageInfo_Userdefineproto.Size(m)
}
func (m *Userdefineproto) XXX_DiscardUnknown() {
	xxx_messageInfo_Userdefineproto.DiscardUnknown(m)
}

var xxx_messageInfo_Userdefineproto proto.InternalMessageInfo

func (m *Userdefineproto) GetProtoname() string {
	if m != nil {
		return m.Protoname
	}
	return ""
}

func (m *Userdefineproto) GetProtomac() string {
	if m != nil {
		return m.Protomac
	}
	return ""
}

func (m *Userdefineproto) GetEncaptype() string {
	if m != nil {
		return m.Encaptype
	}
	return ""
}

func (m *Userdefineproto) GetDsap() string {
	if m != nil {
		return m.Dsap
	}
	return ""
}

func (m *Userdefineproto) GetSsap() string {
	if m != nil {
		return m.Ssap
	}
	return ""
}

func (m *Userdefineproto) GetPrototypevalue() int32 {
	if m != nil {
		return m.Prototypevalue
	}
	return 0
}

func (m *Userdefineproto) GetNewmmac() string {
	if m != nil {
		return m.Newmmac
	}
	return ""
}

func (m *Userdefineproto) GetDefaulmac() string {
	if m != nil {
		return m.Defaulmac
	}
	return ""
}

func (m *Userdefineproto) GetUpdatetime() int64 {
	if m != nil {
		return m.Updatetime
	}
	return 0
}

//l2 协议透明传输全局配置
type L2Ptglobalcfg struct {
	Brigetagenable       int32              `protobuf:"varint,1,opt,name=brigetagenable,proto3" json:"brigetagenable,omitempty"`
	Multimac             []*L2Protommac     `protobuf:"bytes,2,rep,name=multimac,proto3" json:"multimac,omitempty"`
	Udefineproto         []*Userdefineproto `protobuf:"bytes,3,rep,name=udefineproto,proto3" json:"udefineproto,omitempty"`
	Bpdumac              string             `protobuf:"bytes,4,opt,name=bpdumac,proto3" json:"bpdumac,omitempty"`
	Bpdumacmask          string             `protobuf:"bytes,5,opt,name=bpdumacmask,proto3" json:"bpdumacmask,omitempty"`
	Updatetime           int64              `protobuf:"varint,6,opt,name=updatetime,proto3" json:"updatetime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *L2Ptglobalcfg) Reset()         { *m = L2Ptglobalcfg{} }
func (m *L2Ptglobalcfg) String() string { return proto.CompactTextString(m) }
func (*L2Ptglobalcfg) ProtoMessage()    {}
func (*L2Ptglobalcfg) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a5d9fbaa04eb86d, []int{2}
}

func (m *L2Ptglobalcfg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2Ptglobalcfg.Unmarshal(m, b)
}
func (m *L2Ptglobalcfg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2Ptglobalcfg.Marshal(b, m, deterministic)
}
func (m *L2Ptglobalcfg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2Ptglobalcfg.Merge(m, src)
}
func (m *L2Ptglobalcfg) XXX_Size() int {
	return xxx_messageInfo_L2Ptglobalcfg.Size(m)
}
func (m *L2Ptglobalcfg) XXX_DiscardUnknown() {
	xxx_messageInfo_L2Ptglobalcfg.DiscardUnknown(m)
}

var xxx_messageInfo_L2Ptglobalcfg proto.InternalMessageInfo

func (m *L2Ptglobalcfg) GetBrigetagenable() int32 {
	if m != nil {
		return m.Brigetagenable
	}
	return 0
}

func (m *L2Ptglobalcfg) GetMultimac() []*L2Protommac {
	if m != nil {
		return m.Multimac
	}
	return nil
}

func (m *L2Ptglobalcfg) GetUdefineproto() []*Userdefineproto {
	if m != nil {
		return m.Udefineproto
	}
	return nil
}

func (m *L2Ptglobalcfg) GetBpdumac() string {
	if m != nil {
		return m.Bpdumac
	}
	return ""
}

func (m *L2Ptglobalcfg) GetBpdumacmask() string {
	if m != nil {
		return m.Bpdumacmask
	}
	return ""
}

func (m *L2Ptglobalcfg) GetUpdatetime() int64 {
	if m != nil {
		return m.Updatetime
	}
	return 0
}

//l2协议阈值配置
type L2Protothresh struct {
	Prototype            string   `protobuf:"bytes,1,opt,name=prototype,proto3" json:"prototype,omitempty"`
	Threshold            int32    `protobuf:"varint,2,opt,name=threshold,proto3" json:"threshold,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2Protothresh) Reset()         { *m = L2Protothresh{} }
func (m *L2Protothresh) String() string { return proto.CompactTextString(m) }
func (*L2Protothresh) ProtoMessage()    {}
func (*L2Protothresh) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a5d9fbaa04eb86d, []int{3}
}

func (m *L2Protothresh) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2Protothresh.Unmarshal(m, b)
}
func (m *L2Protothresh) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2Protothresh.Marshal(b, m, deterministic)
}
func (m *L2Protothresh) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2Protothresh.Merge(m, src)
}
func (m *L2Protothresh) XXX_Size() int {
	return xxx_messageInfo_L2Protothresh.Size(m)
}
func (m *L2Protothresh) XXX_DiscardUnknown() {
	xxx_messageInfo_L2Protothresh.DiscardUnknown(m)
}

var xxx_messageInfo_L2Protothresh proto.InternalMessageInfo

func (m *L2Protothresh) GetPrototype() string {
	if m != nil {
		return m.Prototype
	}
	return ""
}

func (m *L2Protothresh) GetThreshold() int32 {
	if m != nil {
		return m.Threshold
	}
	return 0
}

//vlan相关的l2pt传输
//不能把l2protocol-tunnel vlan命令和l2protocol-tunnel命令在同一个接口下配置相同协议类型，否则会提示配置冲突
type L2Ptvlancfg struct {
	Protolist            string   `protobuf:"bytes,1,opt,name=protolist,proto3" json:"protolist,omitempty"`
	Vlanlist             string   `protobuf:"bytes,2,opt,name=vlanlist,proto3" json:"vlanlist,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2Ptvlancfg) Reset()         { *m = L2Ptvlancfg{} }
func (m *L2Ptvlancfg) String() string { return proto.CompactTextString(m) }
func (*L2Ptvlancfg) ProtoMessage()    {}
func (*L2Ptvlancfg) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a5d9fbaa04eb86d, []int{4}
}

func (m *L2Ptvlancfg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2Ptvlancfg.Unmarshal(m, b)
}
func (m *L2Ptvlancfg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2Ptvlancfg.Marshal(b, m, deterministic)
}
func (m *L2Ptvlancfg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2Ptvlancfg.Merge(m, src)
}
func (m *L2Ptvlancfg) XXX_Size() int {
	return xxx_messageInfo_L2Ptvlancfg.Size(m)
}
func (m *L2Ptvlancfg) XXX_DiscardUnknown() {
	xxx_messageInfo_L2Ptvlancfg.DiscardUnknown(m)
}

var xxx_messageInfo_L2Ptvlancfg proto.InternalMessageInfo

func (m *L2Ptvlancfg) GetProtolist() string {
	if m != nil {
		return m.Protolist
	}
	return ""
}

func (m *L2Ptvlancfg) GetVlanlist() string {
	if m != nil {
		return m.Vlanlist
	}
	return ""
}

//l2协议接口下的配置
type L2Ptifcfg struct {
	Ifname               string           `protobuf:"bytes,1,opt,name=ifname,proto3" json:"ifname,omitempty"`
	Bpduenable           int32            `protobuf:"varint,2,opt,name=bpduenable,proto3" json:"bpduenable,omitempty"`
	L2Ptprotolist        string           `protobuf:"bytes,3,opt,name=l2ptprotolist,proto3" json:"l2ptprotolist,omitempty"`
	Protothresh          []*L2Protothresh `protobuf:"bytes,4,rep,name=protothresh,proto3" json:"protothresh,omitempty"`
	L2Ptvlanlist         []*L2Ptvlancfg   `protobuf:"bytes,5,rep,name=l2ptvlanlist,proto3" json:"l2ptvlanlist,omitempty"`
	Stpvlan              int32            `protobuf:"varint,6,opt,name=stpvlan,proto3" json:"stpvlan,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *L2Ptifcfg) Reset()         { *m = L2Ptifcfg{} }
func (m *L2Ptifcfg) String() string { return proto.CompactTextString(m) }
func (*L2Ptifcfg) ProtoMessage()    {}
func (*L2Ptifcfg) Descriptor() ([]byte, []int) {
	return fileDescriptor_5a5d9fbaa04eb86d, []int{5}
}

func (m *L2Ptifcfg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2Ptifcfg.Unmarshal(m, b)
}
func (m *L2Ptifcfg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2Ptifcfg.Marshal(b, m, deterministic)
}
func (m *L2Ptifcfg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2Ptifcfg.Merge(m, src)
}
func (m *L2Ptifcfg) XXX_Size() int {
	return xxx_messageInfo_L2Ptifcfg.Size(m)
}
func (m *L2Ptifcfg) XXX_DiscardUnknown() {
	xxx_messageInfo_L2Ptifcfg.DiscardUnknown(m)
}

var xxx_messageInfo_L2Ptifcfg proto.InternalMessageInfo

func (m *L2Ptifcfg) GetIfname() string {
	if m != nil {
		return m.Ifname
	}
	return ""
}

func (m *L2Ptifcfg) GetBpduenable() int32 {
	if m != nil {
		return m.Bpduenable
	}
	return 0
}

func (m *L2Ptifcfg) GetL2Ptprotolist() string {
	if m != nil {
		return m.L2Ptprotolist
	}
	return ""
}

func (m *L2Ptifcfg) GetProtothresh() []*L2Protothresh {
	if m != nil {
		return m.Protothresh
	}
	return nil
}

func (m *L2Ptifcfg) GetL2Ptvlanlist() []*L2Ptvlancfg {
	if m != nil {
		return m.L2Ptvlanlist
	}
	return nil
}

func (m *L2Ptifcfg) GetStpvlan() int32 {
	if m != nil {
		return m.Stpvlan
	}
	return 0
}

func init() {
	proto.RegisterType((*L2Protommac)(nil), "cml.l2protommac")
	proto.RegisterType((*Userdefineproto)(nil), "cml.userdefineproto")
	proto.RegisterType((*L2Ptglobalcfg)(nil), "cml.l2ptglobalcfg")
	proto.RegisterType((*L2Protothresh)(nil), "cml.l2protothresh")
	proto.RegisterType((*L2Ptvlancfg)(nil), "cml.l2ptvlancfg")
	proto.RegisterType((*L2Ptifcfg)(nil), "cml.l2ptifcfg")
}

func init() {
	proto.RegisterFile("l2pt.proto", fileDescriptor_5a5d9fbaa04eb86d)
}

var fileDescriptor_5a5d9fbaa04eb86d = []byte{
	// 571 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0xdb, 0x8e, 0xd3, 0x30,
	0x10, 0x25, 0xbd, 0x6d, 0x3b, 0xed, 0xb6, 0x8b, 0x85, 0x50, 0x54, 0xad, 0x50, 0x15, 0x21, 0xd4,
	0x07, 0x54, 0x69, 0xcb, 0x22, 0xc1, 0xf3, 0x82, 0x56, 0x08, 0x9e, 0xb2, 0x5f, 0xe0, 0x24, 0x76,
	0x1a, 0x61, 0x27, 0x51, 0xe2, 0xb4, 0xe2, 0x33, 0xf8, 0x41, 0x7e, 0x81, 0x0f, 0xe0, 0x05, 0x8d,
	0x9d, 0x8b, 0x53, 0x90, 0x58, 0xf1, 0xe6, 0x39, 0x9e, 0x33, 0x73, 0xce, 0xcc, 0x00, 0x88, 0x7d,
	0xae, 0x76, 0x79, 0x91, 0xa9, 0x8c, 0x0c, 0x43, 0x29, 0xd6, 0xab, 0x90, 0xc7, 0x61, 0x26, 0x65,
	0x96, 0x1a, 0xd4, 0xfb, 0x08, 0x73, 0xb1, 0xd7, 0x4f, 0x29, 0x69, 0x48, 0xae, 0x61, 0xa6, 0x03,
	0xf5, 0x2d, 0x67, 0xae, 0xb3, 0x71, 0xb6, 0x33, 0xbf, 0x03, 0x88, 0x0b, 0x17, 0x29, 0x3b, 0x61,
	0xa2, 0x3b, 0xd0, 0x7f, 0x4d, 0xe8, 0x7d, 0x1f, 0xc0, 0xaa, 0x2a, 0x59, 0x11, 0x31, 0x9e, 0xa4,
	0xcc, 0x34, 0x6c, 0x6a, 0xa5, 0x54, 0xf6, 0x6b, 0x21, 0x40, 0xd6, 0x30, 0x35, 0x6d, 0xdb, 0x62,
	0x6d, 0x8c, 0x4c, 0x96, 0x86, 0x34, 0xd7, 0x2a, 0x86, 0x86, 0xd9, 0x02, 0x84, 0xc0, 0x28, 0x2a,
	0x69, 0xee, 0x8e, 0xf4, 0x87, 0x7e, 0x23, 0x56, 0x22, 0x36, 0x36, 0x18, 0xbe, 0xc9, 0x2b, 0x58,
	0xb6, 0xd2, 0x8f, 0x54, 0x54, 0xcc, 0x9d, 0x6c, 0x9c, 0xed, 0xd8, 0x3f, 0x43, 0x6d, 0x57, 0x17,
	0x3d, 0x57, 0xa8, 0x23, 0x62, 0x9c, 0x56, 0x02, 0xff, 0xa6, 0x46, 0x47, 0x0b, 0x90, 0x17, 0x00,
	0x55, 0x1e, 0x51, 0xc5, 0x54, 0x22, 0x99, 0x3b, 0xdb, 0x38, 0xdb, 0xa1, 0x6f, 0x21, 0xde, 0x2f,
	0x07, 0x2e, 0x71, 0xfe, 0xb1, 0xc8, 0x02, 0x2a, 0x42, 0x1e, 0xa3, 0xa2, 0xa0, 0x48, 0x62, 0xa6,
	0x68, 0xcc, 0x52, 0x1a, 0x08, 0x33, 0x96, 0xb1, 0x7f, 0x86, 0x92, 0xd7, 0x30, 0x95, 0x95, 0x50,
	0x89, 0x99, 0xcd, 0x70, 0x3b, 0xdf, 0x5f, 0xed, 0x42, 0x29, 0x76, 0xd6, 0xa6, 0xfc, 0x36, 0x83,
	0xbc, 0x83, 0x45, 0x65, 0xcd, 0xdd, 0x1d, 0x6a, 0xc6, 0x33, 0xcd, 0x38, 0xdb, 0x89, 0xdf, 0xcb,
	0x44, 0xe7, 0x41, 0x1e, 0x55, 0xd8, 0xc6, 0x0c, 0xb3, 0x09, 0xc9, 0x06, 0xe6, 0xf5, 0x53, 0xd2,
	0xf2, 0x6b, 0x3d, 0x56, 0x1b, 0x3a, 0x73, 0x3f, 0xf9, 0xc3, 0xfd, 0x67, 0x6d, 0x5e, 0x4f, 0xfa,
	0x50, 0xb0, 0xf2, 0xf0, 0x8f, 0xd3, 0xba, 0x86, 0x99, 0xc9, 0xcb, 0x44, 0xa4, 0xef, 0x61, 0xec,
	0x77, 0x80, 0x77, 0xaf, 0xaf, 0x54, 0x1d, 0x05, 0x4d, 0x71, 0x8e, 0x4d, 0x29, 0x91, 0x94, 0xaa,
	0x57, 0x0a, 0x01, 0xbc, 0x2c, 0x4c, 0xd4, 0x9f, 0xf5, 0x65, 0x35, 0xb1, 0xf7, 0xd3, 0x81, 0x19,
	0x56, 0x4a, 0x38, 0xd6, 0x79, 0x0e, 0x93, 0x84, 0x5b, 0xe7, 0x59, 0x47, 0xe8, 0x0d, 0xad, 0xd6,
	0x3b, 0x32, 0x6a, 0x2c, 0x84, 0xbc, 0x34, 0x8b, 0xed, 0x34, 0x98, 0x1b, 0xed, 0x83, 0xe4, 0x16,
	0xe6, 0x96, 0x7f, 0x77, 0xa4, 0xd7, 0x42, 0xec, 0x45, 0x9a, 0x1f, 0xdf, 0x4e, 0x23, 0xb7, 0xb0,
	0x68, 0xac, 0xea, 0xd2, 0xe3, 0xfe, 0xfe, 0x9b, 0x19, 0xf8, 0xbd, 0x2c, 0xdc, 0x64, 0xa9, 0x72,
	0x0c, 0xeb, 0x23, 0x6f, 0xc2, 0xfd, 0x8f, 0x01, 0x2c, 0xef, 0xa4, 0xc0, 0xec, 0x92, 0x15, 0xc7,
	0x24, 0x64, 0xe4, 0x3d, 0x5c, 0x3d, 0x30, 0xf5, 0x65, 0x9f, 0xab, 0x7b, 0x7d, 0x9a, 0x77, 0x3c,
	0x26, 0xad, 0xae, 0xee, 0x5c, 0xd7, 0x2b, 0x8d, 0x85, 0x3c, 0x2e, 0x54, 0x9a, 0xa4, 0x3c, 0xf3,
	0x9e, 0x20, 0xf5, 0x03, 0x13, 0xff, 0x49, 0x7d, 0xfa, 0x70, 0xc8, 0x4e, 0x7d, 0xae, 0xf1, 0x55,
	0x1e, 0xb2, 0x53, 0xc8, 0x63, 0x4c, 0x5c, 0x77, 0x48, 0x47, 0xbd, 0x81, 0x45, 0x2d, 0xf8, 0x13,
	0x47, 0xd6, 0xb2, 0xed, 0xa8, 0xf7, 0xf8, 0xb7, 0x6e, 0x37, 0xb0, 0xa8, 0x85, 0x3e, 0x9a, 0xf2,
	0x16, 0x2e, 0x1b, 0x81, 0x86, 0xf3, 0x28, 0x71, 0xc1, 0x44, 0x6f, 0xef, 0xcd, 0xef, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x11, 0xad, 0xfe, 0x66, 0x6c, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// Cmll2PtserviceClient is the client API for Cmll2Ptservice service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Cmll2PtserviceClient interface {
	//l2pt全局配置
	SetL2PtGlobalCfg(ctx context.Context, in *L2Ptglobalcfg, opts ...grpc.CallOption) (*Cfgrtninfo, error)
	DelL2PtGlobalCfg(ctx context.Context, in *L2Ptglobalcfg, opts ...grpc.CallOption) (*Cfgrtninfo, error)
	ShowL2PtGlobalCfg(ctx context.Context, in *Showcfginfo, opts ...grpc.CallOption) (*Showrtninfo, error)
	//l2pt接口相关的配置(vlan接口,qinq接口等)
	SetL2PtIfCfg(ctx context.Context, in *L2Ptifcfg, opts ...grpc.CallOption) (*Cfgrtninfo, error)
	DelL2PtIfCfg(ctx context.Context, in *L2Ptifcfg, opts ...grpc.CallOption) (*Cfgrtninfo, error)
	ShowL2PtIfCfg(ctx context.Context, in *Showcfginfo, opts ...grpc.CallOption) (*Showrtninfo, error)
}

type cmll2PtserviceClient struct {
	cc grpc.ClientConnInterface
}

func NewCmll2PtserviceClient(cc grpc.ClientConnInterface) Cmll2PtserviceClient {
	return &cmll2PtserviceClient{cc}
}

func (c *cmll2PtserviceClient) SetL2PtGlobalCfg(ctx context.Context, in *L2Ptglobalcfg, opts ...grpc.CallOption) (*Cfgrtninfo, error) {
	out := new(Cfgrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmll2ptservice/SetL2ptGlobalCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmll2PtserviceClient) DelL2PtGlobalCfg(ctx context.Context, in *L2Ptglobalcfg, opts ...grpc.CallOption) (*Cfgrtninfo, error) {
	out := new(Cfgrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmll2ptservice/DelL2ptGlobalCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmll2PtserviceClient) ShowL2PtGlobalCfg(ctx context.Context, in *Showcfginfo, opts ...grpc.CallOption) (*Showrtninfo, error) {
	out := new(Showrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmll2ptservice/ShowL2ptGlobalCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmll2PtserviceClient) SetL2PtIfCfg(ctx context.Context, in *L2Ptifcfg, opts ...grpc.CallOption) (*Cfgrtninfo, error) {
	out := new(Cfgrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmll2ptservice/SetL2ptIfCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmll2PtserviceClient) DelL2PtIfCfg(ctx context.Context, in *L2Ptifcfg, opts ...grpc.CallOption) (*Cfgrtninfo, error) {
	out := new(Cfgrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmll2ptservice/DelL2ptIfCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmll2PtserviceClient) ShowL2PtIfCfg(ctx context.Context, in *Showcfginfo, opts ...grpc.CallOption) (*Showrtninfo, error) {
	out := new(Showrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmll2ptservice/ShowL2ptIfCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Cmll2PtserviceServer is the server API for Cmll2Ptservice service.
type Cmll2PtserviceServer interface {
	//l2pt全局配置
	SetL2PtGlobalCfg(context.Context, *L2Ptglobalcfg) (*Cfgrtninfo, error)
	DelL2PtGlobalCfg(context.Context, *L2Ptglobalcfg) (*Cfgrtninfo, error)
	ShowL2PtGlobalCfg(context.Context, *Showcfginfo) (*Showrtninfo, error)
	//l2pt接口相关的配置(vlan接口,qinq接口等)
	SetL2PtIfCfg(context.Context, *L2Ptifcfg) (*Cfgrtninfo, error)
	DelL2PtIfCfg(context.Context, *L2Ptifcfg) (*Cfgrtninfo, error)
	ShowL2PtIfCfg(context.Context, *Showcfginfo) (*Showrtninfo, error)
}

// UnimplementedCmll2PtserviceServer can be embedded to have forward compatible implementations.
type UnimplementedCmll2PtserviceServer struct {
}

func (*UnimplementedCmll2PtserviceServer) SetL2PtGlobalCfg(ctx context.Context, req *L2Ptglobalcfg) (*Cfgrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetL2PtGlobalCfg not implemented")
}
func (*UnimplementedCmll2PtserviceServer) DelL2PtGlobalCfg(ctx context.Context, req *L2Ptglobalcfg) (*Cfgrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelL2PtGlobalCfg not implemented")
}
func (*UnimplementedCmll2PtserviceServer) ShowL2PtGlobalCfg(ctx context.Context, req *Showcfginfo) (*Showrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowL2PtGlobalCfg not implemented")
}
func (*UnimplementedCmll2PtserviceServer) SetL2PtIfCfg(ctx context.Context, req *L2Ptifcfg) (*Cfgrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetL2PtIfCfg not implemented")
}
func (*UnimplementedCmll2PtserviceServer) DelL2PtIfCfg(ctx context.Context, req *L2Ptifcfg) (*Cfgrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelL2PtIfCfg not implemented")
}
func (*UnimplementedCmll2PtserviceServer) ShowL2PtIfCfg(ctx context.Context, req *Showcfginfo) (*Showrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowL2PtIfCfg not implemented")
}

func RegisterCmll2PtserviceServer(s *grpc.Server, srv Cmll2PtserviceServer) {
	s.RegisterService(&_Cmll2Ptservice_serviceDesc, srv)
}

func _Cmll2Ptservice_SetL2PtGlobalCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(L2Ptglobalcfg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Cmll2PtserviceServer).SetL2PtGlobalCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmll2ptservice/SetL2PtGlobalCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Cmll2PtserviceServer).SetL2PtGlobalCfg(ctx, req.(*L2Ptglobalcfg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmll2Ptservice_DelL2PtGlobalCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(L2Ptglobalcfg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Cmll2PtserviceServer).DelL2PtGlobalCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmll2ptservice/DelL2PtGlobalCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Cmll2PtserviceServer).DelL2PtGlobalCfg(ctx, req.(*L2Ptglobalcfg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmll2Ptservice_ShowL2PtGlobalCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Showcfginfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Cmll2PtserviceServer).ShowL2PtGlobalCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmll2ptservice/ShowL2PtGlobalCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Cmll2PtserviceServer).ShowL2PtGlobalCfg(ctx, req.(*Showcfginfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmll2Ptservice_SetL2PtIfCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(L2Ptifcfg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Cmll2PtserviceServer).SetL2PtIfCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmll2ptservice/SetL2PtIfCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Cmll2PtserviceServer).SetL2PtIfCfg(ctx, req.(*L2Ptifcfg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmll2Ptservice_DelL2PtIfCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(L2Ptifcfg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Cmll2PtserviceServer).DelL2PtIfCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmll2ptservice/DelL2PtIfCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Cmll2PtserviceServer).DelL2PtIfCfg(ctx, req.(*L2Ptifcfg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmll2Ptservice_ShowL2PtIfCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Showcfginfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Cmll2PtserviceServer).ShowL2PtIfCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmll2ptservice/ShowL2PtIfCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Cmll2PtserviceServer).ShowL2PtIfCfg(ctx, req.(*Showcfginfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cmll2Ptservice_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cml.Cmll2ptservice",
	HandlerType: (*Cmll2PtserviceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetL2ptGlobalCfg",
			Handler:    _Cmll2Ptservice_SetL2PtGlobalCfg_Handler,
		},
		{
			MethodName: "DelL2ptGlobalCfg",
			Handler:    _Cmll2Ptservice_DelL2PtGlobalCfg_Handler,
		},
		{
			MethodName: "ShowL2ptGlobalCfg",
			Handler:    _Cmll2Ptservice_ShowL2PtGlobalCfg_Handler,
		},
		{
			MethodName: "SetL2ptIfCfg",
			Handler:    _Cmll2Ptservice_SetL2PtIfCfg_Handler,
		},
		{
			MethodName: "DelL2ptIfCfg",
			Handler:    _Cmll2Ptservice_DelL2PtIfCfg_Handler,
		},
		{
			MethodName: "ShowL2ptIfCfg",
			Handler:    _Cmll2Ptservice_ShowL2PtIfCfg_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "l2pt.proto",
}
