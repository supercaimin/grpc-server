// Code generated by protoc-gen-go. DO NOT EDIT.
// source: e-trunk-config.proto

package cml

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//接口加入trunk相关配置
type Iftrunkcfg struct {
	Ifname               string   `protobuf:"bytes,1,opt,name=ifname,proto3" json:"ifname,omitempty"`
	Trunkid              int32    `protobuf:"varint,2,opt,name=trunkid,proto3" json:"trunkid,omitempty"`
	Updatetime           int64    `protobuf:"varint,3,opt,name=updatetime,proto3" json:"updatetime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Iftrunkcfg) Reset()         { *m = Iftrunkcfg{} }
func (m *Iftrunkcfg) String() string { return proto.CompactTextString(m) }
func (*Iftrunkcfg) ProtoMessage()    {}
func (*Iftrunkcfg) Descriptor() ([]byte, []int) {
	return fileDescriptor_4659e6ef35b2a5a8, []int{0}
}

func (m *Iftrunkcfg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Iftrunkcfg.Unmarshal(m, b)
}
func (m *Iftrunkcfg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Iftrunkcfg.Marshal(b, m, deterministic)
}
func (m *Iftrunkcfg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Iftrunkcfg.Merge(m, src)
}
func (m *Iftrunkcfg) XXX_Size() int {
	return xxx_messageInfo_Iftrunkcfg.Size(m)
}
func (m *Iftrunkcfg) XXX_DiscardUnknown() {
	xxx_messageInfo_Iftrunkcfg.DiscardUnknown(m)
}

var xxx_messageInfo_Iftrunkcfg proto.InternalMessageInfo

func (m *Iftrunkcfg) GetIfname() string {
	if m != nil {
		return m.Ifname
	}
	return ""
}

func (m *Iftrunkcfg) GetTrunkid() int32 {
	if m != nil {
		return m.Trunkid
	}
	return 0
}

func (m *Iftrunkcfg) GetUpdatetime() int64 {
	if m != nil {
		return m.Updatetime
	}
	return 0
}

//全局未知单播配置
type Lbununicast struct {
	Lbtype               int32    `protobuf:"varint,1,opt,name=lbtype,proto3" json:"lbtype,omitempty"`
	Updatetime           int64    `protobuf:"varint,2,opt,name=updatetime,proto3" json:"updatetime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Lbununicast) Reset()         { *m = Lbununicast{} }
func (m *Lbununicast) String() string { return proto.CompactTextString(m) }
func (*Lbununicast) ProtoMessage()    {}
func (*Lbununicast) Descriptor() ([]byte, []int) {
	return fileDescriptor_4659e6ef35b2a5a8, []int{1}
}

func (m *Lbununicast) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lbununicast.Unmarshal(m, b)
}
func (m *Lbununicast) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lbununicast.Marshal(b, m, deterministic)
}
func (m *Lbununicast) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lbununicast.Merge(m, src)
}
func (m *Lbununicast) XXX_Size() int {
	return xxx_messageInfo_Lbununicast.Size(m)
}
func (m *Lbununicast) XXX_DiscardUnknown() {
	xxx_messageInfo_Lbununicast.DiscardUnknown(m)
}

var xxx_messageInfo_Lbununicast proto.InternalMessageInfo

func (m *Lbununicast) GetLbtype() int32 {
	if m != nil {
		return m.Lbtype
	}
	return 0
}

func (m *Lbununicast) GetUpdatetime() int64 {
	if m != nil {
		return m.Updatetime
	}
	return 0
}

//负载分担模板配置lb-profile
//按位表示,可配置多个选项
type Etrunklbcfg struct {
	Lbname               string   `protobuf:"bytes,1,opt,name=lbname,proto3" json:"lbname,omitempty"`
	Ipv4Lbtype           int32    `protobuf:"varint,2,opt,name=ipv4lbtype,proto3" json:"ipv4lbtype,omitempty"`
	Ipv6Lbtype           int32    `protobuf:"varint,3,opt,name=ipv6lbtype,proto3" json:"ipv6lbtype,omitempty"`
	L2Lbtype             int32    `protobuf:"varint,4,opt,name=l2lbtype,proto3" json:"l2lbtype,omitempty"`
	Mplslbtype           int32    `protobuf:"varint,5,opt,name=mplslbtype,proto3" json:"mplslbtype,omitempty"`
	Vxlanlbtype          int32    `protobuf:"varint,6,opt,name=vxlanlbtype,proto3" json:"vxlanlbtype,omitempty"`
	Updatetime           int64    `protobuf:"varint,7,opt,name=updatetime,proto3" json:"updatetime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Etrunklbcfg) Reset()         { *m = Etrunklbcfg{} }
func (m *Etrunklbcfg) String() string { return proto.CompactTextString(m) }
func (*Etrunklbcfg) ProtoMessage()    {}
func (*Etrunklbcfg) Descriptor() ([]byte, []int) {
	return fileDescriptor_4659e6ef35b2a5a8, []int{2}
}

func (m *Etrunklbcfg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Etrunklbcfg.Unmarshal(m, b)
}
func (m *Etrunklbcfg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Etrunklbcfg.Marshal(b, m, deterministic)
}
func (m *Etrunklbcfg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Etrunklbcfg.Merge(m, src)
}
func (m *Etrunklbcfg) XXX_Size() int {
	return xxx_messageInfo_Etrunklbcfg.Size(m)
}
func (m *Etrunklbcfg) XXX_DiscardUnknown() {
	xxx_messageInfo_Etrunklbcfg.DiscardUnknown(m)
}

var xxx_messageInfo_Etrunklbcfg proto.InternalMessageInfo

func (m *Etrunklbcfg) GetLbname() string {
	if m != nil {
		return m.Lbname
	}
	return ""
}

func (m *Etrunklbcfg) GetIpv4Lbtype() int32 {
	if m != nil {
		return m.Ipv4Lbtype
	}
	return 0
}

func (m *Etrunklbcfg) GetIpv6Lbtype() int32 {
	if m != nil {
		return m.Ipv6Lbtype
	}
	return 0
}

func (m *Etrunklbcfg) GetL2Lbtype() int32 {
	if m != nil {
		return m.L2Lbtype
	}
	return 0
}

func (m *Etrunklbcfg) GetMplslbtype() int32 {
	if m != nil {
		return m.Mplslbtype
	}
	return 0
}

func (m *Etrunklbcfg) GetVxlanlbtype() int32 {
	if m != nil {
		return m.Vxlanlbtype
	}
	return 0
}

func (m *Etrunklbcfg) GetUpdatetime() int64 {
	if m != nil {
		return m.Updatetime
	}
	return 0
}

//etrunk接口的符合分担配置
type Lbinfocfg struct {
	Lbcfgtype            int32    `protobuf:"varint,1,opt,name=lbcfgtype,proto3" json:"lbcfgtype,omitempty"`
	Lbname               string   `protobuf:"bytes,2,opt,name=lbname,proto3" json:"lbname,omitempty"`
	Lboption             int32    `protobuf:"varint,3,opt,name=lboption,proto3" json:"lboption,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Lbinfocfg) Reset()         { *m = Lbinfocfg{} }
func (m *Lbinfocfg) String() string { return proto.CompactTextString(m) }
func (*Lbinfocfg) ProtoMessage()    {}
func (*Lbinfocfg) Descriptor() ([]byte, []int) {
	return fileDescriptor_4659e6ef35b2a5a8, []int{3}
}

func (m *Lbinfocfg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lbinfocfg.Unmarshal(m, b)
}
func (m *Lbinfocfg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lbinfocfg.Marshal(b, m, deterministic)
}
func (m *Lbinfocfg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lbinfocfg.Merge(m, src)
}
func (m *Lbinfocfg) XXX_Size() int {
	return xxx_messageInfo_Lbinfocfg.Size(m)
}
func (m *Lbinfocfg) XXX_DiscardUnknown() {
	xxx_messageInfo_Lbinfocfg.DiscardUnknown(m)
}

var xxx_messageInfo_Lbinfocfg proto.InternalMessageInfo

func (m *Lbinfocfg) GetLbcfgtype() int32 {
	if m != nil {
		return m.Lbcfgtype
	}
	return 0
}

func (m *Lbinfocfg) GetLbname() string {
	if m != nil {
		return m.Lbname
	}
	return ""
}

func (m *Lbinfocfg) GetLboption() int32 {
	if m != nil {
		return m.Lboption
	}
	return 0
}

//etrunk接口成员配置,e-trunk接口下进行
type Trunkmember struct {
	Iftype               string   `protobuf:"bytes,1,opt,name=iftype,proto3" json:"iftype,omitempty"`
	Startnum             int32    `protobuf:"varint,2,opt,name=startnum,proto3" json:"startnum,omitempty"`
	Endnum               int32    `protobuf:"varint,3,opt,name=endnum,proto3" json:"endnum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trunkmember) Reset()         { *m = Trunkmember{} }
func (m *Trunkmember) String() string { return proto.CompactTextString(m) }
func (*Trunkmember) ProtoMessage()    {}
func (*Trunkmember) Descriptor() ([]byte, []int) {
	return fileDescriptor_4659e6ef35b2a5a8, []int{4}
}

func (m *Trunkmember) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trunkmember.Unmarshal(m, b)
}
func (m *Trunkmember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trunkmember.Marshal(b, m, deterministic)
}
func (m *Trunkmember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trunkmember.Merge(m, src)
}
func (m *Trunkmember) XXX_Size() int {
	return xxx_messageInfo_Trunkmember.Size(m)
}
func (m *Trunkmember) XXX_DiscardUnknown() {
	xxx_messageInfo_Trunkmember.DiscardUnknown(m)
}

var xxx_messageInfo_Trunkmember proto.InternalMessageInfo

func (m *Trunkmember) GetIftype() string {
	if m != nil {
		return m.Iftype
	}
	return ""
}

func (m *Trunkmember) GetStartnum() int32 {
	if m != nil {
		return m.Startnum
	}
	return 0
}

func (m *Trunkmember) GetEndnum() int32 {
	if m != nil {
		return m.Endnum
	}
	return 0
}

//e trunk 接口(或子接口配置)
type Etrunkinfocfg struct {
	Trunkid              int32          `protobuf:"varint,1,opt,name=trunkid,proto3" json:"trunkid,omitempty"`
	Subid                int32          `protobuf:"varint,2,opt,name=subid,proto3" json:"subid,omitempty"`
	Lacptime             int32          `protobuf:"varint,3,opt,name=lacptime,proto3" json:"lacptime,omitempty"`
	Activenum            int32          `protobuf:"varint,4,opt,name=activenum,proto3" json:"activenum,omitempty"`
	Lbinfo               *Lbinfocfg     `protobuf:"bytes,5,opt,name=lbinfo,proto3" json:"lbinfo,omitempty"`
	Mac                  string         `protobuf:"bytes,6,opt,name=mac,proto3" json:"mac,omitempty"`
	Workmode             int32          `protobuf:"varint,7,opt,name=workmode,proto3" json:"workmode,omitempty"`
	Ifmember             []*Trunkmember `protobuf:"bytes,8,rep,name=ifmember,proto3" json:"ifmember,omitempty"`
	Updatetime           int64          `protobuf:"varint,9,opt,name=updatetime,proto3" json:"updatetime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Etrunkinfocfg) Reset()         { *m = Etrunkinfocfg{} }
func (m *Etrunkinfocfg) String() string { return proto.CompactTextString(m) }
func (*Etrunkinfocfg) ProtoMessage()    {}
func (*Etrunkinfocfg) Descriptor() ([]byte, []int) {
	return fileDescriptor_4659e6ef35b2a5a8, []int{5}
}

func (m *Etrunkinfocfg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Etrunkinfocfg.Unmarshal(m, b)
}
func (m *Etrunkinfocfg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Etrunkinfocfg.Marshal(b, m, deterministic)
}
func (m *Etrunkinfocfg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Etrunkinfocfg.Merge(m, src)
}
func (m *Etrunkinfocfg) XXX_Size() int {
	return xxx_messageInfo_Etrunkinfocfg.Size(m)
}
func (m *Etrunkinfocfg) XXX_DiscardUnknown() {
	xxx_messageInfo_Etrunkinfocfg.DiscardUnknown(m)
}

var xxx_messageInfo_Etrunkinfocfg proto.InternalMessageInfo

func (m *Etrunkinfocfg) GetTrunkid() int32 {
	if m != nil {
		return m.Trunkid
	}
	return 0
}

func (m *Etrunkinfocfg) GetSubid() int32 {
	if m != nil {
		return m.Subid
	}
	return 0
}

func (m *Etrunkinfocfg) GetLacptime() int32 {
	if m != nil {
		return m.Lacptime
	}
	return 0
}

func (m *Etrunkinfocfg) GetActivenum() int32 {
	if m != nil {
		return m.Activenum
	}
	return 0
}

func (m *Etrunkinfocfg) GetLbinfo() *Lbinfocfg {
	if m != nil {
		return m.Lbinfo
	}
	return nil
}

func (m *Etrunkinfocfg) GetMac() string {
	if m != nil {
		return m.Mac
	}
	return ""
}

func (m *Etrunkinfocfg) GetWorkmode() int32 {
	if m != nil {
		return m.Workmode
	}
	return 0
}

func (m *Etrunkinfocfg) GetIfmember() []*Trunkmember {
	if m != nil {
		return m.Ifmember
	}
	return nil
}

func (m *Etrunkinfocfg) GetUpdatetime() int64 {
	if m != nil {
		return m.Updatetime
	}
	return 0
}

func init() {
	proto.RegisterType((*Iftrunkcfg)(nil), "cml.iftrunkcfg")
	proto.RegisterType((*Lbununicast)(nil), "cml.lbununicast")
	proto.RegisterType((*Etrunklbcfg)(nil), "cml.etrunklbcfg")
	proto.RegisterType((*Lbinfocfg)(nil), "cml.lbinfocfg")
	proto.RegisterType((*Trunkmember)(nil), "cml.trunkmember")
	proto.RegisterType((*Etrunkinfocfg)(nil), "cml.etrunkinfocfg")
}

func init() {
	proto.RegisterFile("e-trunk-config.proto", fileDescriptor_4659e6ef35b2a5a8)
}

var fileDescriptor_4659e6ef35b2a5a8 = []byte{
	// 600 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x31, 0x6e, 0x9b, 0xb5, 0x68, 0xcd, 0x52, 0xa1, 0x28, 0x42, 0x28, 0xca, 0x01, 0xe5,
	0x40, 0x7b, 0x08, 0x15, 0x08, 0x71, 0xa3, 0xad, 0x50, 0x25, 0x4e, 0xee, 0x89, 0x03, 0x48, 0xf6,
	0x66, 0xd7, 0x5d, 0x75, 0x7f, 0x2c, 0x7b, 0x9d, 0xc2, 0xc3, 0xf0, 0x4a, 0xbc, 0x04, 0x2f, 0x82,
	0xf6, 0x27, 0xeb, 0x4d, 0x1a, 0xa9, 0x0d, 0xb7, 0x7e, 0x33, 0xf3, 0xcd, 0x7c, 0xf3, 0xcd, 0xd6,
	0x01, 0xc7, 0xf8, 0x44, 0x35, 0x9d, 0xb8, 0x3d, 0x41, 0x52, 0x10, 0x5a, 0x9d, 0xd6, 0x8d, 0x54,
	0x12, 0xc6, 0x88, 0xb3, 0xf1, 0x11, 0x22, 0x15, 0x92, 0x9c, 0x4b, 0x61, 0xa3, 0xd3, 0x1f, 0x00,
	0x50, 0x62, 0xaa, 0x11, 0xa9, 0xe0, 0x4b, 0xb0, 0x47, 0x89, 0x28, 0x38, 0x1e, 0x45, 0x93, 0x68,
	0x36, 0xcc, 0x1d, 0x82, 0x23, 0xb0, 0x6f, 0x6a, 0xe8, 0x62, 0x34, 0x98, 0x44, 0xb3, 0x24, 0x5f,
	0x41, 0xf8, 0x1a, 0x80, 0xae, 0x5e, 0x14, 0x0a, 0x2b, 0xca, 0xf1, 0x28, 0x9e, 0x44, 0xb3, 0x38,
	0x0f, 0x22, 0xd3, 0x4b, 0x90, 0xb2, 0xb2, 0x13, 0x9d, 0xa0, 0xa8, 0x68, 0x95, 0x1e, 0xc0, 0x4a,
	0xf5, 0xab, 0xb6, 0x03, 0x92, 0xdc, 0xa1, 0x8d, 0x36, 0x83, 0x7b, 0x6d, 0xfe, 0x46, 0x20, 0xc5,
	0x66, 0x26, 0x2b, 0x9d, 0x50, 0x56, 0x86, 0x42, 0x2d, 0xd2, 0x7d, 0x68, 0xbd, 0x3c, 0x73, 0x33,
	0xac, 0xd6, 0x20, 0xe2, 0xf2, 0xef, 0x5d, 0x3e, 0xf6, 0x79, 0x17, 0x81, 0x63, 0x70, 0xc0, 0xe6,
	0x2e, 0xfb, 0xd4, 0x64, 0x3d, 0xd6, 0x5c, 0x5e, 0xb3, 0xd6, 0x65, 0x13, 0xcb, 0xed, 0x23, 0x70,
	0x02, 0xd2, 0xe5, 0x4f, 0x56, 0x08, 0x57, 0xb0, 0x67, 0x0a, 0xc2, 0xd0, 0xc6, 0x96, 0xfb, 0xf7,
	0xb6, 0xfc, 0x0e, 0x86, 0xac, 0xa4, 0x82, 0x48, 0xbd, 0xe2, 0x2b, 0x0d, 0x10, 0xa9, 0x02, 0xb7,
	0xfa, 0x40, 0x60, 0xc0, 0x60, 0xcd, 0x00, 0xbd, 0x40, 0x29, 0x6b, 0x45, 0xa5, 0x70, 0xeb, 0x79,
	0x3c, 0xfd, 0x06, 0x52, 0x63, 0x21, 0xc7, 0xbc, 0xc4, 0x8d, 0x3d, 0xb6, 0xef, 0x6e, 0x8e, 0xbd,
	0xf2, 0xa0, 0x55, 0x45, 0xa3, 0x44, 0xc7, 0x9d, 0x83, 0x1e, 0x6b, 0x0e, 0x16, 0x0b, 0x9d, 0xb1,
	0xcd, 0x1d, 0x9a, 0xfe, 0x1e, 0x80, 0x67, 0xf6, 0x3e, 0x2b, 0xf9, 0xc1, 0x93, 0x89, 0xd6, 0x9f,
	0xcc, 0x31, 0x48, 0xda, 0xae, 0xf4, 0x4f, 0xc9, 0x02, 0x23, 0xbc, 0x40, 0xb5, 0x7f, 0x46, 0x5a,
	0xb8, 0xc3, 0xda, 0x8a, 0x02, 0x29, 0xba, 0xc4, 0x7a, 0xb0, 0x3d, 0x4b, 0x1f, 0x80, 0x6f, 0xb4,
	0x15, 0x7a, 0xac, 0xb9, 0x49, 0x3a, 0x3f, 0x3c, 0x45, 0x9c, 0x9d, 0x7a, 0x23, 0x73, 0x97, 0x85,
	0x19, 0x88, 0x79, 0x81, 0xcc, 0x5d, 0x86, 0xb9, 0xfe, 0x53, 0xcf, 0xbc, 0x93, 0xcd, 0x2d, 0x97,
	0x0b, 0x7b, 0x8d, 0x24, 0xf7, 0x18, 0xbe, 0x05, 0x07, 0x94, 0x58, 0xa7, 0x46, 0x07, 0x93, 0x78,
	0x96, 0xce, 0x33, 0xd3, 0x37, 0x70, 0x30, 0xf7, 0x15, 0x1b, 0x97, 0x1d, 0x6e, 0x5e, 0x76, 0xfe,
	0x27, 0x01, 0xd9, 0x39, 0x67, 0xd6, 0xa2, 0x16, 0x37, 0x4b, 0x8a, 0x30, 0xfc, 0x08, 0xe0, 0x35,
	0x56, 0x97, 0x26, 0xf6, 0x85, 0xc9, 0xb2, 0x60, 0xe7, 0xa4, 0x82, 0x99, 0x93, 0xef, 0xff, 0x69,
	0xc6, 0x47, 0x26, 0x82, 0x48, 0xd5, 0x28, 0xa1, 0x37, 0x99, 0x3e, 0xd1, 0xd4, 0x0b, 0xcc, 0xfe,
	0x8b, 0xfa, 0x09, 0xbc, 0xb8, 0xbe, 0x91, 0x77, 0xdb, 0xb9, 0xed, 0x8d, 0xbc, 0x43, 0xa4, 0xd2,
	0xa5, 0xe3, 0x3e, 0xd2, 0x93, 0xcf, 0xc0, 0xe1, 0x35, 0x56, 0x57, 0xc4, 0xb2, 0x35, 0xcf, 0x4e,
	0xe8, 0xbf, 0x21, 0xdb, 0x46, 0x9e, 0x81, 0xc3, 0x0b, 0xcc, 0x76, 0x65, 0x7d, 0x00, 0x47, 0x5a,
	0x68, 0x48, 0x7b, 0x9c, 0xc8, 0xd0, 0xd7, 0xaf, 0x9f, 0x09, 0x65, 0xb8, 0xe7, 0x06, 0x1f, 0x91,
	0x87, 0x7c, 0xdd, 0x91, 0xba, 0xe6, 0xeb, 0x26, 0xf7, 0x61, 0xc9, 0x99, 0x97, 0x7c, 0x25, 0x88,
	0xd4, 0x4c, 0x18, 0x4c, 0x75, 0x6f, 0x79, 0xbb, 0xe4, 0xcc, 0x4b, 0xde, 0x99, 0xfa, 0xbc, 0x97,
	0xbc, 0xe2, 0x3e, 0x4a, 0x70, 0xb9, 0x67, 0x7e, 0x3e, 0xde, 0xfd, 0x0b, 0x00, 0x00, 0xff, 0xff,
	0xeb, 0x8a, 0x31, 0x1c, 0x6c, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CmletrunkserviceClient is the client API for Cmletrunkservice service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CmletrunkserviceClient interface {
	//etrunk相关全局配置
	SetEtrunkGlobalCfg(ctx context.Context, in *Lbununicast, opts ...grpc.CallOption) (*Cfgrtninfo, error)
	DelEtrunkGlobalCfg(ctx context.Context, in *Lbununicast, opts ...grpc.CallOption) (*Cfgrtninfo, error)
	ShowEtrunkGlobalCfg(ctx context.Context, in *Showcfginfo, opts ...grpc.CallOption) (*Showrtninfo, error)
	//接口下e-trunk相关配置(接口模式)
	SetIfEtrunkCfg(ctx context.Context, in *Iftrunkcfg, opts ...grpc.CallOption) (*Cfgrtninfo, error)
	DelIfEtrunkCfg(ctx context.Context, in *Iftrunkcfg, opts ...grpc.CallOption) (*Cfgrtninfo, error)
	ShowIfEtrunkCfg(ctx context.Context, in *Showcfginfo, opts ...grpc.CallOption) (*Showrtninfo, error)
	//etrunk相关负荷分担模板配置配置
	SetEtrunkLBfileCfg(ctx context.Context, in *Etrunklbcfg, opts ...grpc.CallOption) (*Cfgrtninfo, error)
	DelEtrunkLBfileCfg(ctx context.Context, in *Etrunklbcfg, opts ...grpc.CallOption) (*Cfgrtninfo, error)
	ShowEtrunkLBfileCfg(ctx context.Context, in *Showcfginfo, opts ...grpc.CallOption) (*Showrtninfo, error)
	//e-trunk接口自身属性配置
	SetEtrunkInfoCfg(ctx context.Context, in *Etrunkinfocfg, opts ...grpc.CallOption) (*Cfgrtninfo, error)
	DelEtrunkInfoCfg(ctx context.Context, in *Etrunkinfocfg, opts ...grpc.CallOption) (*Cfgrtninfo, error)
	ShowEtrunkInfoCfg(ctx context.Context, in *Showcfginfo, opts ...grpc.CallOption) (*Showrtninfo, error)
}

type cmletrunkserviceClient struct {
	cc grpc.ClientConnInterface
}

func NewCmletrunkserviceClient(cc grpc.ClientConnInterface) CmletrunkserviceClient {
	return &cmletrunkserviceClient{cc}
}

func (c *cmletrunkserviceClient) SetEtrunkGlobalCfg(ctx context.Context, in *Lbununicast, opts ...grpc.CallOption) (*Cfgrtninfo, error) {
	out := new(Cfgrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmletrunkservice/SetEtrunkGlobalCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmletrunkserviceClient) DelEtrunkGlobalCfg(ctx context.Context, in *Lbununicast, opts ...grpc.CallOption) (*Cfgrtninfo, error) {
	out := new(Cfgrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmletrunkservice/DelEtrunkGlobalCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmletrunkserviceClient) ShowEtrunkGlobalCfg(ctx context.Context, in *Showcfginfo, opts ...grpc.CallOption) (*Showrtninfo, error) {
	out := new(Showrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmletrunkservice/ShowEtrunkGlobalCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmletrunkserviceClient) SetIfEtrunkCfg(ctx context.Context, in *Iftrunkcfg, opts ...grpc.CallOption) (*Cfgrtninfo, error) {
	out := new(Cfgrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmletrunkservice/SetIfEtrunkCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmletrunkserviceClient) DelIfEtrunkCfg(ctx context.Context, in *Iftrunkcfg, opts ...grpc.CallOption) (*Cfgrtninfo, error) {
	out := new(Cfgrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmletrunkservice/DelIfEtrunkCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmletrunkserviceClient) ShowIfEtrunkCfg(ctx context.Context, in *Showcfginfo, opts ...grpc.CallOption) (*Showrtninfo, error) {
	out := new(Showrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmletrunkservice/ShowIfEtrunkCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmletrunkserviceClient) SetEtrunkLBfileCfg(ctx context.Context, in *Etrunklbcfg, opts ...grpc.CallOption) (*Cfgrtninfo, error) {
	out := new(Cfgrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmletrunkservice/SetEtrunkLBfileCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmletrunkserviceClient) DelEtrunkLBfileCfg(ctx context.Context, in *Etrunklbcfg, opts ...grpc.CallOption) (*Cfgrtninfo, error) {
	out := new(Cfgrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmletrunkservice/DelEtrunkLBfileCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmletrunkserviceClient) ShowEtrunkLBfileCfg(ctx context.Context, in *Showcfginfo, opts ...grpc.CallOption) (*Showrtninfo, error) {
	out := new(Showrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmletrunkservice/ShowEtrunkLBfileCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmletrunkserviceClient) SetEtrunkInfoCfg(ctx context.Context, in *Etrunkinfocfg, opts ...grpc.CallOption) (*Cfgrtninfo, error) {
	out := new(Cfgrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmletrunkservice/SetEtrunkInfoCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmletrunkserviceClient) DelEtrunkInfoCfg(ctx context.Context, in *Etrunkinfocfg, opts ...grpc.CallOption) (*Cfgrtninfo, error) {
	out := new(Cfgrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmletrunkservice/DelEtrunkInfoCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmletrunkserviceClient) ShowEtrunkInfoCfg(ctx context.Context, in *Showcfginfo, opts ...grpc.CallOption) (*Showrtninfo, error) {
	out := new(Showrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmletrunkservice/ShowEtrunkInfoCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CmletrunkserviceServer is the server API for Cmletrunkservice service.
type CmletrunkserviceServer interface {
	//etrunk相关全局配置
	SetEtrunkGlobalCfg(context.Context, *Lbununicast) (*Cfgrtninfo, error)
	DelEtrunkGlobalCfg(context.Context, *Lbununicast) (*Cfgrtninfo, error)
	ShowEtrunkGlobalCfg(context.Context, *Showcfginfo) (*Showrtninfo, error)
	//接口下e-trunk相关配置(接口模式)
	SetIfEtrunkCfg(context.Context, *Iftrunkcfg) (*Cfgrtninfo, error)
	DelIfEtrunkCfg(context.Context, *Iftrunkcfg) (*Cfgrtninfo, error)
	ShowIfEtrunkCfg(context.Context, *Showcfginfo) (*Showrtninfo, error)
	//etrunk相关负荷分担模板配置配置
	SetEtrunkLBfileCfg(context.Context, *Etrunklbcfg) (*Cfgrtninfo, error)
	DelEtrunkLBfileCfg(context.Context, *Etrunklbcfg) (*Cfgrtninfo, error)
	ShowEtrunkLBfileCfg(context.Context, *Showcfginfo) (*Showrtninfo, error)
	//e-trunk接口自身属性配置
	SetEtrunkInfoCfg(context.Context, *Etrunkinfocfg) (*Cfgrtninfo, error)
	DelEtrunkInfoCfg(context.Context, *Etrunkinfocfg) (*Cfgrtninfo, error)
	ShowEtrunkInfoCfg(context.Context, *Showcfginfo) (*Showrtninfo, error)
}

// UnimplementedCmletrunkserviceServer can be embedded to have forward compatible implementations.
type UnimplementedCmletrunkserviceServer struct {
}

func (*UnimplementedCmletrunkserviceServer) SetEtrunkGlobalCfg(ctx context.Context, req *Lbununicast) (*Cfgrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetEtrunkGlobalCfg not implemented")
}
func (*UnimplementedCmletrunkserviceServer) DelEtrunkGlobalCfg(ctx context.Context, req *Lbununicast) (*Cfgrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelEtrunkGlobalCfg not implemented")
}
func (*UnimplementedCmletrunkserviceServer) ShowEtrunkGlobalCfg(ctx context.Context, req *Showcfginfo) (*Showrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowEtrunkGlobalCfg not implemented")
}
func (*UnimplementedCmletrunkserviceServer) SetIfEtrunkCfg(ctx context.Context, req *Iftrunkcfg) (*Cfgrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetIfEtrunkCfg not implemented")
}
func (*UnimplementedCmletrunkserviceServer) DelIfEtrunkCfg(ctx context.Context, req *Iftrunkcfg) (*Cfgrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelIfEtrunkCfg not implemented")
}
func (*UnimplementedCmletrunkserviceServer) ShowIfEtrunkCfg(ctx context.Context, req *Showcfginfo) (*Showrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowIfEtrunkCfg not implemented")
}
func (*UnimplementedCmletrunkserviceServer) SetEtrunkLBfileCfg(ctx context.Context, req *Etrunklbcfg) (*Cfgrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetEtrunkLBfileCfg not implemented")
}
func (*UnimplementedCmletrunkserviceServer) DelEtrunkLBfileCfg(ctx context.Context, req *Etrunklbcfg) (*Cfgrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelEtrunkLBfileCfg not implemented")
}
func (*UnimplementedCmletrunkserviceServer) ShowEtrunkLBfileCfg(ctx context.Context, req *Showcfginfo) (*Showrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowEtrunkLBfileCfg not implemented")
}
func (*UnimplementedCmletrunkserviceServer) SetEtrunkInfoCfg(ctx context.Context, req *Etrunkinfocfg) (*Cfgrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetEtrunkInfoCfg not implemented")
}
func (*UnimplementedCmletrunkserviceServer) DelEtrunkInfoCfg(ctx context.Context, req *Etrunkinfocfg) (*Cfgrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelEtrunkInfoCfg not implemented")
}
func (*UnimplementedCmletrunkserviceServer) ShowEtrunkInfoCfg(ctx context.Context, req *Showcfginfo) (*Showrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowEtrunkInfoCfg not implemented")
}

func RegisterCmletrunkserviceServer(s *grpc.Server, srv CmletrunkserviceServer) {
	s.RegisterService(&_Cmletrunkservice_serviceDesc, srv)
}

func _Cmletrunkservice_SetEtrunkGlobalCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Lbununicast)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmletrunkserviceServer).SetEtrunkGlobalCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmletrunkservice/SetEtrunkGlobalCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmletrunkserviceServer).SetEtrunkGlobalCfg(ctx, req.(*Lbununicast))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmletrunkservice_DelEtrunkGlobalCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Lbununicast)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmletrunkserviceServer).DelEtrunkGlobalCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmletrunkservice/DelEtrunkGlobalCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmletrunkserviceServer).DelEtrunkGlobalCfg(ctx, req.(*Lbununicast))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmletrunkservice_ShowEtrunkGlobalCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Showcfginfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmletrunkserviceServer).ShowEtrunkGlobalCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmletrunkservice/ShowEtrunkGlobalCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmletrunkserviceServer).ShowEtrunkGlobalCfg(ctx, req.(*Showcfginfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmletrunkservice_SetIfEtrunkCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Iftrunkcfg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmletrunkserviceServer).SetIfEtrunkCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmletrunkservice/SetIfEtrunkCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmletrunkserviceServer).SetIfEtrunkCfg(ctx, req.(*Iftrunkcfg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmletrunkservice_DelIfEtrunkCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Iftrunkcfg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmletrunkserviceServer).DelIfEtrunkCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmletrunkservice/DelIfEtrunkCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmletrunkserviceServer).DelIfEtrunkCfg(ctx, req.(*Iftrunkcfg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmletrunkservice_ShowIfEtrunkCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Showcfginfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmletrunkserviceServer).ShowIfEtrunkCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmletrunkservice/ShowIfEtrunkCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmletrunkserviceServer).ShowIfEtrunkCfg(ctx, req.(*Showcfginfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmletrunkservice_SetEtrunkLBfileCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Etrunklbcfg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmletrunkserviceServer).SetEtrunkLBfileCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmletrunkservice/SetEtrunkLBfileCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmletrunkserviceServer).SetEtrunkLBfileCfg(ctx, req.(*Etrunklbcfg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmletrunkservice_DelEtrunkLBfileCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Etrunklbcfg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmletrunkserviceServer).DelEtrunkLBfileCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmletrunkservice/DelEtrunkLBfileCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmletrunkserviceServer).DelEtrunkLBfileCfg(ctx, req.(*Etrunklbcfg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmletrunkservice_ShowEtrunkLBfileCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Showcfginfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmletrunkserviceServer).ShowEtrunkLBfileCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmletrunkservice/ShowEtrunkLBfileCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmletrunkserviceServer).ShowEtrunkLBfileCfg(ctx, req.(*Showcfginfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmletrunkservice_SetEtrunkInfoCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Etrunkinfocfg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmletrunkserviceServer).SetEtrunkInfoCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmletrunkservice/SetEtrunkInfoCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmletrunkserviceServer).SetEtrunkInfoCfg(ctx, req.(*Etrunkinfocfg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmletrunkservice_DelEtrunkInfoCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Etrunkinfocfg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmletrunkserviceServer).DelEtrunkInfoCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmletrunkservice/DelEtrunkInfoCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmletrunkserviceServer).DelEtrunkInfoCfg(ctx, req.(*Etrunkinfocfg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmletrunkservice_ShowEtrunkInfoCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Showcfginfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmletrunkserviceServer).ShowEtrunkInfoCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmletrunkservice/ShowEtrunkInfoCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmletrunkserviceServer).ShowEtrunkInfoCfg(ctx, req.(*Showcfginfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cmletrunkservice_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cml.Cmletrunkservice",
	HandlerType: (*CmletrunkserviceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetEtrunkGlobalCfg",
			Handler:    _Cmletrunkservice_SetEtrunkGlobalCfg_Handler,
		},
		{
			MethodName: "DelEtrunkGlobalCfg",
			Handler:    _Cmletrunkservice_DelEtrunkGlobalCfg_Handler,
		},
		{
			MethodName: "ShowEtrunkGlobalCfg",
			Handler:    _Cmletrunkservice_ShowEtrunkGlobalCfg_Handler,
		},
		{
			MethodName: "SetIfEtrunkCfg",
			Handler:    _Cmletrunkservice_SetIfEtrunkCfg_Handler,
		},
		{
			MethodName: "DelIfEtrunkCfg",
			Handler:    _Cmletrunkservice_DelIfEtrunkCfg_Handler,
		},
		{
			MethodName: "ShowIfEtrunkCfg",
			Handler:    _Cmletrunkservice_ShowIfEtrunkCfg_Handler,
		},
		{
			MethodName: "SetEtrunkLBfileCfg",
			Handler:    _Cmletrunkservice_SetEtrunkLBfileCfg_Handler,
		},
		{
			MethodName: "DelEtrunkLBfileCfg",
			Handler:    _Cmletrunkservice_DelEtrunkLBfileCfg_Handler,
		},
		{
			MethodName: "ShowEtrunkLBfileCfg",
			Handler:    _Cmletrunkservice_ShowEtrunkLBfileCfg_Handler,
		},
		{
			MethodName: "SetEtrunkInfoCfg",
			Handler:    _Cmletrunkservice_SetEtrunkInfoCfg_Handler,
		},
		{
			MethodName: "DelEtrunkInfoCfg",
			Handler:    _Cmletrunkservice_DelEtrunkInfoCfg_Handler,
		},
		{
			MethodName: "ShowEtrunkInfoCfg",
			Handler:    _Cmletrunkservice_ShowEtrunkInfoCfg_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "e-trunk-config.proto",
}
