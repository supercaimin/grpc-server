// Code generated by protoc-gen-go. DO NOT EDIT.
// source: qos.proto

package cml

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Qos8021Pmap struct {
	Qos8021Pvalue        int32    `protobuf:"varint,1,opt,name=qos8021pvalue,proto3" json:"qos8021pvalue,omitempty"`
	Servclass            string   `protobuf:"bytes,2,opt,name=servclass,proto3" json:"servclass,omitempty"`
	Color                string   `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Qos8021Pmap) Reset()         { *m = Qos8021Pmap{} }
func (m *Qos8021Pmap) String() string { return proto.CompactTextString(m) }
func (*Qos8021Pmap) ProtoMessage()    {}
func (*Qos8021Pmap) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{0}
}

func (m *Qos8021Pmap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Qos8021Pmap.Unmarshal(m, b)
}
func (m *Qos8021Pmap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Qos8021Pmap.Marshal(b, m, deterministic)
}
func (m *Qos8021Pmap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Qos8021Pmap.Merge(m, src)
}
func (m *Qos8021Pmap) XXX_Size() int {
	return xxx_messageInfo_Qos8021Pmap.Size(m)
}
func (m *Qos8021Pmap) XXX_DiscardUnknown() {
	xxx_messageInfo_Qos8021Pmap.DiscardUnknown(m)
}

var xxx_messageInfo_Qos8021Pmap proto.InternalMessageInfo

func (m *Qos8021Pmap) GetQos8021Pvalue() int32 {
	if m != nil {
		return m.Qos8021Pvalue
	}
	return 0
}

func (m *Qos8021Pmap) GetServclass() string {
	if m != nil {
		return m.Servclass
	}
	return ""
}

func (m *Qos8021Pmap) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

type Dscpmap struct {
	Dscpvalue            int32    `protobuf:"varint,1,opt,name=dscpvalue,proto3" json:"dscpvalue,omitempty"`
	Servclass            string   `protobuf:"bytes,2,opt,name=servclass,proto3" json:"servclass,omitempty"`
	Color                string   `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Dscpmap) Reset()         { *m = Dscpmap{} }
func (m *Dscpmap) String() string { return proto.CompactTextString(m) }
func (*Dscpmap) ProtoMessage()    {}
func (*Dscpmap) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{1}
}

func (m *Dscpmap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dscpmap.Unmarshal(m, b)
}
func (m *Dscpmap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dscpmap.Marshal(b, m, deterministic)
}
func (m *Dscpmap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dscpmap.Merge(m, src)
}
func (m *Dscpmap) XXX_Size() int {
	return xxx_messageInfo_Dscpmap.Size(m)
}
func (m *Dscpmap) XXX_DiscardUnknown() {
	xxx_messageInfo_Dscpmap.DiscardUnknown(m)
}

var xxx_messageInfo_Dscpmap proto.InternalMessageInfo

func (m *Dscpmap) GetDscpvalue() int32 {
	if m != nil {
		return m.Dscpvalue
	}
	return 0
}

func (m *Dscpmap) GetServclass() string {
	if m != nil {
		return m.Servclass
	}
	return ""
}

func (m *Dscpmap) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

type Dscp2Dscpmap struct {
	Indscpvalue          int32    `protobuf:"varint,1,opt,name=indscpvalue,proto3" json:"indscpvalue,omitempty"`
	Mapdscpvalue         int32    `protobuf:"varint,2,opt,name=mapdscpvalue,proto3" json:"mapdscpvalue,omitempty"`
	Color                string   `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Dscp2Dscpmap) Reset()         { *m = Dscp2Dscpmap{} }
func (m *Dscp2Dscpmap) String() string { return proto.CompactTextString(m) }
func (*Dscp2Dscpmap) ProtoMessage()    {}
func (*Dscp2Dscpmap) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{2}
}

func (m *Dscp2Dscpmap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dscp2Dscpmap.Unmarshal(m, b)
}
func (m *Dscp2Dscpmap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dscp2Dscpmap.Marshal(b, m, deterministic)
}
func (m *Dscp2Dscpmap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dscp2Dscpmap.Merge(m, src)
}
func (m *Dscp2Dscpmap) XXX_Size() int {
	return xxx_messageInfo_Dscp2Dscpmap.Size(m)
}
func (m *Dscp2Dscpmap) XXX_DiscardUnknown() {
	xxx_messageInfo_Dscp2Dscpmap.DiscardUnknown(m)
}

var xxx_messageInfo_Dscp2Dscpmap proto.InternalMessageInfo

func (m *Dscp2Dscpmap) GetIndscpvalue() int32 {
	if m != nil {
		return m.Indscpvalue
	}
	return 0
}

func (m *Dscp2Dscpmap) GetMapdscpvalue() int32 {
	if m != nil {
		return m.Mapdscpvalue
	}
	return 0
}

func (m *Dscp2Dscpmap) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

type Expmap struct {
	Expvalue             int32    `protobuf:"varint,1,opt,name=expvalue,proto3" json:"expvalue,omitempty"`
	Servclass            string   `protobuf:"bytes,2,opt,name=servclass,proto3" json:"servclass,omitempty"`
	Color                string   `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Expmap) Reset()         { *m = Expmap{} }
func (m *Expmap) String() string { return proto.CompactTextString(m) }
func (*Expmap) ProtoMessage()    {}
func (*Expmap) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{3}
}

func (m *Expmap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Expmap.Unmarshal(m, b)
}
func (m *Expmap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Expmap.Marshal(b, m, deterministic)
}
func (m *Expmap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Expmap.Merge(m, src)
}
func (m *Expmap) XXX_Size() int {
	return xxx_messageInfo_Expmap.Size(m)
}
func (m *Expmap) XXX_DiscardUnknown() {
	xxx_messageInfo_Expmap.DiscardUnknown(m)
}

var xxx_messageInfo_Expmap proto.InternalMessageInfo

func (m *Expmap) GetExpvalue() int32 {
	if m != nil {
		return m.Expvalue
	}
	return 0
}

func (m *Expmap) GetServclass() string {
	if m != nil {
		return m.Servclass
	}
	return ""
}

func (m *Expmap) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

type Mplsmap struct {
	Dscpvalue            int32    `protobuf:"varint,1,opt,name=dscpvalue,proto3" json:"dscpvalue,omitempty"`
	Expvalue             int32    `protobuf:"varint,2,opt,name=expvalue,proto3" json:"expvalue,omitempty"`
	Servclass            string   `protobuf:"bytes,3,opt,name=servclass,proto3" json:"servclass,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Mplsmap) Reset()         { *m = Mplsmap{} }
func (m *Mplsmap) String() string { return proto.CompactTextString(m) }
func (*Mplsmap) ProtoMessage()    {}
func (*Mplsmap) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{4}
}

func (m *Mplsmap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mplsmap.Unmarshal(m, b)
}
func (m *Mplsmap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mplsmap.Marshal(b, m, deterministic)
}
func (m *Mplsmap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mplsmap.Merge(m, src)
}
func (m *Mplsmap) XXX_Size() int {
	return xxx_messageInfo_Mplsmap.Size(m)
}
func (m *Mplsmap) XXX_DiscardUnknown() {
	xxx_messageInfo_Mplsmap.DiscardUnknown(m)
}

var xxx_messageInfo_Mplsmap proto.InternalMessageInfo

func (m *Mplsmap) GetDscpvalue() int32 {
	if m != nil {
		return m.Dscpvalue
	}
	return 0
}

func (m *Mplsmap) GetExpvalue() int32 {
	if m != nil {
		return m.Expvalue
	}
	return 0
}

func (m *Mplsmap) GetServclass() string {
	if m != nil {
		return m.Servclass
	}
	return ""
}

type Localpremap struct {
	LocalPre             int32    `protobuf:"varint,1,opt,name=localPre,proto3" json:"localPre,omitempty"`
	Queueindex           int32    `protobuf:"varint,2,opt,name=queueindex,proto3" json:"queueindex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Localpremap) Reset()         { *m = Localpremap{} }
func (m *Localpremap) String() string { return proto.CompactTextString(m) }
func (*Localpremap) ProtoMessage()    {}
func (*Localpremap) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{5}
}

func (m *Localpremap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Localpremap.Unmarshal(m, b)
}
func (m *Localpremap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Localpremap.Marshal(b, m, deterministic)
}
func (m *Localpremap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Localpremap.Merge(m, src)
}
func (m *Localpremap) XXX_Size() int {
	return xxx_messageInfo_Localpremap.Size(m)
}
func (m *Localpremap) XXX_DiscardUnknown() {
	xxx_messageInfo_Localpremap.DiscardUnknown(m)
}

var xxx_messageInfo_Localpremap proto.InternalMessageInfo

func (m *Localpremap) GetLocalPre() int32 {
	if m != nil {
		return m.LocalPre
	}
	return 0
}

func (m *Localpremap) GetQueueindex() int32 {
	if m != nil {
		return m.Queueindex
	}
	return 0
}

//qos 流映射配置数据
type Qosdiffservmap struct {
	DiffservName         string          `protobuf:"bytes,1,opt,name=diffserv_name,json=diffservName,proto3" json:"diffserv_name,omitempty"`
	In8021Pmap           []*Qos8021Pmap  `protobuf:"bytes,2,rep,name=in8021pmap,proto3" json:"in8021pmap,omitempty"`
	Out8021Pmap          []*Qos8021Pmap  `protobuf:"bytes,3,rep,name=out8021pmap,proto3" json:"out8021pmap,omitempty"`
	Indscpmap            []*Dscpmap      `protobuf:"bytes,4,rep,name=indscpmap,proto3" json:"indscpmap,omitempty"`
	Outdscpmap           []*Dscpmap      `protobuf:"bytes,5,rep,name=outdscpmap,proto3" json:"outdscpmap,omitempty"`
	Invplsexpmap         []*Expmap       `protobuf:"bytes,6,rep,name=invplsexpmap,proto3" json:"invplsexpmap,omitempty"`
	Outvplsexpmap        []*Expmap       `protobuf:"bytes,7,rep,name=outvplsexpmap,proto3" json:"outvplsexpmap,omitempty"`
	Inmplsmap            []*Mplsmap      `protobuf:"bytes,8,rep,name=inmplsmap,proto3" json:"inmplsmap,omitempty"`
	Outmplsmap           []*Mplsmap      `protobuf:"bytes,9,rep,name=outmplsmap,proto3" json:"outmplsmap,omitempty"`
	Indscp2Dscpmap       []*Dscp2Dscpmap `protobuf:"bytes,10,rep,name=indscp2dscpmap,proto3" json:"indscp2dscpmap,omitempty"`
	Outdscp2Dscpmap      []*Dscp2Dscpmap `protobuf:"bytes,11,rep,name=outdscp2dscpmap,proto3" json:"outdscp2dscpmap,omitempty"`
	Updatetime           int64           `protobuf:"varint,12,opt,name=updatetime,proto3" json:"updatetime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Qosdiffservmap) Reset()         { *m = Qosdiffservmap{} }
func (m *Qosdiffservmap) String() string { return proto.CompactTextString(m) }
func (*Qosdiffservmap) ProtoMessage()    {}
func (*Qosdiffservmap) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{6}
}

func (m *Qosdiffservmap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Qosdiffservmap.Unmarshal(m, b)
}
func (m *Qosdiffservmap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Qosdiffservmap.Marshal(b, m, deterministic)
}
func (m *Qosdiffservmap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Qosdiffservmap.Merge(m, src)
}
func (m *Qosdiffservmap) XXX_Size() int {
	return xxx_messageInfo_Qosdiffservmap.Size(m)
}
func (m *Qosdiffservmap) XXX_DiscardUnknown() {
	xxx_messageInfo_Qosdiffservmap.DiscardUnknown(m)
}

var xxx_messageInfo_Qosdiffservmap proto.InternalMessageInfo

func (m *Qosdiffservmap) GetDiffservName() string {
	if m != nil {
		return m.DiffservName
	}
	return ""
}

func (m *Qosdiffservmap) GetIn8021Pmap() []*Qos8021Pmap {
	if m != nil {
		return m.In8021Pmap
	}
	return nil
}

func (m *Qosdiffservmap) GetOut8021Pmap() []*Qos8021Pmap {
	if m != nil {
		return m.Out8021Pmap
	}
	return nil
}

func (m *Qosdiffservmap) GetIndscpmap() []*Dscpmap {
	if m != nil {
		return m.Indscpmap
	}
	return nil
}

func (m *Qosdiffservmap) GetOutdscpmap() []*Dscpmap {
	if m != nil {
		return m.Outdscpmap
	}
	return nil
}

func (m *Qosdiffservmap) GetInvplsexpmap() []*Expmap {
	if m != nil {
		return m.Invplsexpmap
	}
	return nil
}

func (m *Qosdiffservmap) GetOutvplsexpmap() []*Expmap {
	if m != nil {
		return m.Outvplsexpmap
	}
	return nil
}

func (m *Qosdiffservmap) GetInmplsmap() []*Mplsmap {
	if m != nil {
		return m.Inmplsmap
	}
	return nil
}

func (m *Qosdiffservmap) GetOutmplsmap() []*Mplsmap {
	if m != nil {
		return m.Outmplsmap
	}
	return nil
}

func (m *Qosdiffservmap) GetIndscp2Dscpmap() []*Dscp2Dscpmap {
	if m != nil {
		return m.Indscp2Dscpmap
	}
	return nil
}

func (m *Qosdiffservmap) GetOutdscp2Dscpmap() []*Dscp2Dscpmap {
	if m != nil {
		return m.Outdscp2Dscpmap
	}
	return nil
}

func (m *Qosdiffservmap) GetUpdatetime() int64 {
	if m != nil {
		return m.Updatetime
	}
	return 0
}

//diffserv配置在接口上的应用
type Qosdiffservapply struct {
	Iflist               string         `protobuf:"bytes,1,opt,name=iflist,proto3" json:"iflist,omitempty"`
	Portpri              int32          `protobuf:"varint,2,opt,name=portpri,proto3" json:"portpri,omitempty"`
	Localprecfg          []*Localpremap `protobuf:"bytes,3,rep,name=localprecfg,proto3" json:"localprecfg,omitempty"`
	Phb8021Pdisable      int32          `protobuf:"varint,4,opt,name=phb8021pdisable,proto3" json:"phb8021pdisable,omitempty"`
	Phbdscpenable        int32          `protobuf:"varint,5,opt,name=phbdscpenable,proto3" json:"phbdscpenable,omitempty"`
	Trusttype            string         `protobuf:"bytes,6,opt,name=trusttype,proto3" json:"trusttype,omitempty"`
	Trustlayer           string         `protobuf:"bytes,7,opt,name=trustlayer,proto3" json:"trustlayer,omitempty"`
	Trustdiffserv        string         `protobuf:"bytes,8,opt,name=trustdiffserv,proto3" json:"trustdiffserv,omitempty"`
	Updatetime           int64          `protobuf:"varint,9,opt,name=updatetime,proto3" json:"updatetime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Qosdiffservapply) Reset()         { *m = Qosdiffservapply{} }
func (m *Qosdiffservapply) String() string { return proto.CompactTextString(m) }
func (*Qosdiffservapply) ProtoMessage()    {}
func (*Qosdiffservapply) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{7}
}

func (m *Qosdiffservapply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Qosdiffservapply.Unmarshal(m, b)
}
func (m *Qosdiffservapply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Qosdiffservapply.Marshal(b, m, deterministic)
}
func (m *Qosdiffservapply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Qosdiffservapply.Merge(m, src)
}
func (m *Qosdiffservapply) XXX_Size() int {
	return xxx_messageInfo_Qosdiffservapply.Size(m)
}
func (m *Qosdiffservapply) XXX_DiscardUnknown() {
	xxx_messageInfo_Qosdiffservapply.DiscardUnknown(m)
}

var xxx_messageInfo_Qosdiffservapply proto.InternalMessageInfo

func (m *Qosdiffservapply) GetIflist() string {
	if m != nil {
		return m.Iflist
	}
	return ""
}

func (m *Qosdiffservapply) GetPortpri() int32 {
	if m != nil {
		return m.Portpri
	}
	return 0
}

func (m *Qosdiffservapply) GetLocalprecfg() []*Localpremap {
	if m != nil {
		return m.Localprecfg
	}
	return nil
}

func (m *Qosdiffservapply) GetPhb8021Pdisable() int32 {
	if m != nil {
		return m.Phb8021Pdisable
	}
	return 0
}

func (m *Qosdiffservapply) GetPhbdscpenable() int32 {
	if m != nil {
		return m.Phbdscpenable
	}
	return 0
}

func (m *Qosdiffservapply) GetTrusttype() string {
	if m != nil {
		return m.Trusttype
	}
	return ""
}

func (m *Qosdiffservapply) GetTrustlayer() string {
	if m != nil {
		return m.Trustlayer
	}
	return ""
}

func (m *Qosdiffservapply) GetTrustdiffserv() string {
	if m != nil {
		return m.Trustdiffserv
	}
	return ""
}

func (m *Qosdiffservapply) GetUpdatetime() int64 {
	if m != nil {
		return m.Updatetime
	}
	return 0
}

//MPLS (L2VPN) 配置
type L2Vpnmode struct {
	Modetype             string   `protobuf:"bytes,1,opt,name=modetype,proto3" json:"modetype,omitempty"`
	Diffname             string   `protobuf:"bytes,2,opt,name=diffname,proto3" json:"diffname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L2Vpnmode) Reset()         { *m = L2Vpnmode{} }
func (m *L2Vpnmode) String() string { return proto.CompactTextString(m) }
func (*L2Vpnmode) ProtoMessage()    {}
func (*L2Vpnmode) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{8}
}

func (m *L2Vpnmode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L2Vpnmode.Unmarshal(m, b)
}
func (m *L2Vpnmode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L2Vpnmode.Marshal(b, m, deterministic)
}
func (m *L2Vpnmode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L2Vpnmode.Merge(m, src)
}
func (m *L2Vpnmode) XXX_Size() int {
	return xxx_messageInfo_L2Vpnmode.Size(m)
}
func (m *L2Vpnmode) XXX_DiscardUnknown() {
	xxx_messageInfo_L2Vpnmode.DiscardUnknown(m)
}

var xxx_messageInfo_L2Vpnmode proto.InternalMessageInfo

func (m *L2Vpnmode) GetModetype() string {
	if m != nil {
		return m.Modetype
	}
	return ""
}

func (m *L2Vpnmode) GetDiffname() string {
	if m != nil {
		return m.Diffname
	}
	return ""
}

type Mplsmode struct {
	Modetype             string   `protobuf:"bytes,1,opt,name=modetype,proto3" json:"modetype,omitempty"`
	Diffname             string   `protobuf:"bytes,2,opt,name=diffname,proto3" json:"diffname,omitempty"`
	Ttlvalue             int32    `protobuf:"varint,3,opt,name=ttlvalue,proto3" json:"ttlvalue,omitempty"`
	Expvalue             int32    `protobuf:"varint,4,opt,name=expvalue,proto3" json:"expvalue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Mplsmode) Reset()         { *m = Mplsmode{} }
func (m *Mplsmode) String() string { return proto.CompactTextString(m) }
func (*Mplsmode) ProtoMessage()    {}
func (*Mplsmode) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{9}
}

func (m *Mplsmode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mplsmode.Unmarshal(m, b)
}
func (m *Mplsmode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mplsmode.Marshal(b, m, deterministic)
}
func (m *Mplsmode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mplsmode.Merge(m, src)
}
func (m *Mplsmode) XXX_Size() int {
	return xxx_messageInfo_Mplsmode.Size(m)
}
func (m *Mplsmode) XXX_DiscardUnknown() {
	xxx_messageInfo_Mplsmode.DiscardUnknown(m)
}

var xxx_messageInfo_Mplsmode proto.InternalMessageInfo

func (m *Mplsmode) GetModetype() string {
	if m != nil {
		return m.Modetype
	}
	return ""
}

func (m *Mplsmode) GetDiffname() string {
	if m != nil {
		return m.Diffname
	}
	return ""
}

func (m *Mplsmode) GetTtlvalue() int32 {
	if m != nil {
		return m.Ttlvalue
	}
	return 0
}

func (m *Mplsmode) GetExpvalue() int32 {
	if m != nil {
		return m.Expvalue
	}
	return 0
}

//标签相关的qos配置
type Labelqosmode struct {
	Qosl2Vpnmode         *L2Vpnmode `protobuf:"bytes,1,opt,name=qosl2vpnmode,proto3" json:"qosl2vpnmode,omitempty"`
	Qosmplsmode          *Mplsmode  `protobuf:"bytes,2,opt,name=qosmplsmode,proto3" json:"qosmplsmode,omitempty"`
	Updatetime           int64      `protobuf:"varint,3,opt,name=updatetime,proto3" json:"updatetime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Labelqosmode) Reset()         { *m = Labelqosmode{} }
func (m *Labelqosmode) String() string { return proto.CompactTextString(m) }
func (*Labelqosmode) ProtoMessage()    {}
func (*Labelqosmode) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{10}
}

func (m *Labelqosmode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Labelqosmode.Unmarshal(m, b)
}
func (m *Labelqosmode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Labelqosmode.Marshal(b, m, deterministic)
}
func (m *Labelqosmode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Labelqosmode.Merge(m, src)
}
func (m *Labelqosmode) XXX_Size() int {
	return xxx_messageInfo_Labelqosmode.Size(m)
}
func (m *Labelqosmode) XXX_DiscardUnknown() {
	xxx_messageInfo_Labelqosmode.DiscardUnknown(m)
}

var xxx_messageInfo_Labelqosmode proto.InternalMessageInfo

func (m *Labelqosmode) GetQosl2Vpnmode() *L2Vpnmode {
	if m != nil {
		return m.Qosl2Vpnmode
	}
	return nil
}

func (m *Labelqosmode) GetQosmplsmode() *Mplsmode {
	if m != nil {
		return m.Qosmplsmode
	}
	return nil
}

func (m *Labelqosmode) GetUpdatetime() int64 {
	if m != nil {
		return m.Updatetime
	}
	return 0
}

//理(根据配置以及报文中的优先级进行匹配处理)PHB行为
type Phblocalmap struct {
	Localprecvalue       string   `protobuf:"bytes,1,opt,name=localprecvalue,proto3" json:"localprecvalue,omitempty"`
	Queueindex           int32    `protobuf:"varint,2,opt,name=queueindex,proto3" json:"queueindex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Phblocalmap) Reset()         { *m = Phblocalmap{} }
func (m *Phblocalmap) String() string { return proto.CompactTextString(m) }
func (*Phblocalmap) ProtoMessage()    {}
func (*Phblocalmap) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{11}
}

func (m *Phblocalmap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Phblocalmap.Unmarshal(m, b)
}
func (m *Phblocalmap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Phblocalmap.Marshal(b, m, deterministic)
}
func (m *Phblocalmap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Phblocalmap.Merge(m, src)
}
func (m *Phblocalmap) XXX_Size() int {
	return xxx_messageInfo_Phblocalmap.Size(m)
}
func (m *Phblocalmap) XXX_DiscardUnknown() {
	xxx_messageInfo_Phblocalmap.DiscardUnknown(m)
}

var xxx_messageInfo_Phblocalmap proto.InternalMessageInfo

func (m *Phblocalmap) GetLocalprecvalue() string {
	if m != nil {
		return m.Localprecvalue
	}
	return ""
}

func (m *Phblocalmap) GetQueueindex() int32 {
	if m != nil {
		return m.Queueindex
	}
	return 0
}

//可能在全局配置,也可能在接口下配置,与芯片有关
type Phboutpriset struct {
	Enable8021P          int32    `protobuf:"varint,1,opt,name=enable8021p,proto3" json:"enable8021p,omitempty"`
	Enabledscp           int32    `protobuf:"varint,2,opt,name=enabledscp,proto3" json:"enabledscp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Phboutpriset) Reset()         { *m = Phboutpriset{} }
func (m *Phboutpriset) String() string { return proto.CompactTextString(m) }
func (*Phboutpriset) ProtoMessage()    {}
func (*Phboutpriset) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{12}
}

func (m *Phboutpriset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Phboutpriset.Unmarshal(m, b)
}
func (m *Phboutpriset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Phboutpriset.Marshal(b, m, deterministic)
}
func (m *Phboutpriset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Phboutpriset.Merge(m, src)
}
func (m *Phboutpriset) XXX_Size() int {
	return xxx_messageInfo_Phboutpriset.Size(m)
}
func (m *Phboutpriset) XXX_DiscardUnknown() {
	xxx_messageInfo_Phboutpriset.DiscardUnknown(m)
}

var xxx_messageInfo_Phboutpriset proto.InternalMessageInfo

func (m *Phboutpriset) GetEnable8021P() int32 {
	if m != nil {
		return m.Enable8021P
	}
	return 0
}

func (m *Phboutpriset) GetEnabledscp() int32 {
	if m != nil {
		return m.Enabledscp
	}
	return 0
}

//设备本节点的Phb配置
type Qosphbcfg struct {
	Phblocalqueuemap     []*Phblocalmap  `protobuf:"bytes,1,rep,name=phblocalqueuemap,proto3" json:"phblocalqueuemap,omitempty"`
	Phboutpricfg         []*Phboutpriset `protobuf:"bytes,2,rep,name=phboutpricfg,proto3" json:"phboutpricfg,omitempty"`
	Updatetime           int64           `protobuf:"varint,3,opt,name=updatetime,proto3" json:"updatetime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Qosphbcfg) Reset()         { *m = Qosphbcfg{} }
func (m *Qosphbcfg) String() string { return proto.CompactTextString(m) }
func (*Qosphbcfg) ProtoMessage()    {}
func (*Qosphbcfg) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{13}
}

func (m *Qosphbcfg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Qosphbcfg.Unmarshal(m, b)
}
func (m *Qosphbcfg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Qosphbcfg.Marshal(b, m, deterministic)
}
func (m *Qosphbcfg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Qosphbcfg.Merge(m, src)
}
func (m *Qosphbcfg) XXX_Size() int {
	return xxx_messageInfo_Qosphbcfg.Size(m)
}
func (m *Qosphbcfg) XXX_DiscardUnknown() {
	xxx_messageInfo_Qosphbcfg.DiscardUnknown(m)
}

var xxx_messageInfo_Qosphbcfg proto.InternalMessageInfo

func (m *Qosphbcfg) GetPhblocalqueuemap() []*Phblocalmap {
	if m != nil {
		return m.Phblocalqueuemap
	}
	return nil
}

func (m *Qosphbcfg) GetPhboutpricfg() []*Phboutpriset {
	if m != nil {
		return m.Phboutpricfg
	}
	return nil
}

func (m *Qosphbcfg) GetUpdatetime() int64 {
	if m != nil {
		return m.Updatetime
	}
	return 0
}

//qos global car
type Qoscar struct {
	Carname              string   `protobuf:"bytes,1,opt,name=carname,proto3" json:"carname,omitempty"`
	Percentvalue         int32    `protobuf:"varint,2,opt,name=percentvalue,proto3" json:"percentvalue,omitempty"`
	Cirunit              int32    `protobuf:"varint,3,opt,name=cirunit,proto3" json:"cirunit,omitempty"`
	Cirvalue             int32    `protobuf:"varint,4,opt,name=cirvalue,proto3" json:"cirvalue,omitempty"`
	Ccbsunit             int32    `protobuf:"varint,5,opt,name=ccbsunit,proto3" json:"ccbsunit,omitempty"`
	CirCbs               int32    `protobuf:"varint,6,opt,name=cir_cbs,json=cirCbs,proto3" json:"cir_cbs,omitempty"`
	Cpbsunit             int32    `protobuf:"varint,7,opt,name=cpbsunit,proto3" json:"cpbsunit,omitempty"`
	CirPbs               int32    `protobuf:"varint,8,opt,name=cir_pbs,json=cirPbs,proto3" json:"cir_pbs,omitempty"`
	Pirunit              int32    `protobuf:"varint,9,opt,name=pirunit,proto3" json:"pirunit,omitempty"`
	Pirvalue             int32    `protobuf:"varint,10,opt,name=pirvalue,proto3" json:"pirvalue,omitempty"`
	Pcbsunit             int32    `protobuf:"varint,11,opt,name=pcbsunit,proto3" json:"pcbsunit,omitempty"`
	PirCbs               int32    `protobuf:"varint,12,opt,name=pir_cbs,json=pirCbs,proto3" json:"pir_cbs,omitempty"`
	Ppbsunit             int32    `protobuf:"varint,13,opt,name=ppbsunit,proto3" json:"ppbsunit,omitempty"`
	PirPbs               int32    `protobuf:"varint,14,opt,name=pir_pbs,json=pirPbs,proto3" json:"pir_pbs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Qoscar) Reset()         { *m = Qoscar{} }
func (m *Qoscar) String() string { return proto.CompactTextString(m) }
func (*Qoscar) ProtoMessage()    {}
func (*Qoscar) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{14}
}

func (m *Qoscar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Qoscar.Unmarshal(m, b)
}
func (m *Qoscar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Qoscar.Marshal(b, m, deterministic)
}
func (m *Qoscar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Qoscar.Merge(m, src)
}
func (m *Qoscar) XXX_Size() int {
	return xxx_messageInfo_Qoscar.Size(m)
}
func (m *Qoscar) XXX_DiscardUnknown() {
	xxx_messageInfo_Qoscar.DiscardUnknown(m)
}

var xxx_messageInfo_Qoscar proto.InternalMessageInfo

func (m *Qoscar) GetCarname() string {
	if m != nil {
		return m.Carname
	}
	return ""
}

func (m *Qoscar) GetPercentvalue() int32 {
	if m != nil {
		return m.Percentvalue
	}
	return 0
}

func (m *Qoscar) GetCirunit() int32 {
	if m != nil {
		return m.Cirunit
	}
	return 0
}

func (m *Qoscar) GetCirvalue() int32 {
	if m != nil {
		return m.Cirvalue
	}
	return 0
}

func (m *Qoscar) GetCcbsunit() int32 {
	if m != nil {
		return m.Ccbsunit
	}
	return 0
}

func (m *Qoscar) GetCirCbs() int32 {
	if m != nil {
		return m.CirCbs
	}
	return 0
}

func (m *Qoscar) GetCpbsunit() int32 {
	if m != nil {
		return m.Cpbsunit
	}
	return 0
}

func (m *Qoscar) GetCirPbs() int32 {
	if m != nil {
		return m.CirPbs
	}
	return 0
}

func (m *Qoscar) GetPirunit() int32 {
	if m != nil {
		return m.Pirunit
	}
	return 0
}

func (m *Qoscar) GetPirvalue() int32 {
	if m != nil {
		return m.Pirvalue
	}
	return 0
}

func (m *Qoscar) GetPcbsunit() int32 {
	if m != nil {
		return m.Pcbsunit
	}
	return 0
}

func (m *Qoscar) GetPirCbs() int32 {
	if m != nil {
		return m.PirCbs
	}
	return 0
}

func (m *Qoscar) GetPpbsunit() int32 {
	if m != nil {
		return m.Ppbsunit
	}
	return 0
}

func (m *Qoscar) GetPirPbs() int32 {
	if m != nil {
		return m.PirPbs
	}
	return 0
}

//意见qos car模板的配置（全局可配置多个）
type Qoscarglobalcfg struct {
	Yellowaction         string    `protobuf:"bytes,1,opt,name=yellowaction,proto3" json:"yellowaction,omitempty"`
	Redaction            string    `protobuf:"bytes,2,opt,name=redaction,proto3" json:"redaction,omitempty"`
	Ifgdisable           int32     `protobuf:"varint,3,opt,name=ifgdisable,proto3" json:"ifgdisable,omitempty"`
	Carmodedoublesingle  int32     `protobuf:"varint,4,opt,name=carmodedoublesingle,proto3" json:"carmodedoublesingle,omitempty"`
	Qoscarcfg            []*Qoscar `protobuf:"bytes,5,rep,name=qoscarcfg,proto3" json:"qoscarcfg,omitempty"`
	Updatetime           int64     `protobuf:"varint,6,opt,name=updatetime,proto3" json:"updatetime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Qoscarglobalcfg) Reset()         { *m = Qoscarglobalcfg{} }
func (m *Qoscarglobalcfg) String() string { return proto.CompactTextString(m) }
func (*Qoscarglobalcfg) ProtoMessage()    {}
func (*Qoscarglobalcfg) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{15}
}

func (m *Qoscarglobalcfg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Qoscarglobalcfg.Unmarshal(m, b)
}
func (m *Qoscarglobalcfg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Qoscarglobalcfg.Marshal(b, m, deterministic)
}
func (m *Qoscarglobalcfg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Qoscarglobalcfg.Merge(m, src)
}
func (m *Qoscarglobalcfg) XXX_Size() int {
	return xxx_messageInfo_Qoscarglobalcfg.Size(m)
}
func (m *Qoscarglobalcfg) XXX_DiscardUnknown() {
	xxx_messageInfo_Qoscarglobalcfg.DiscardUnknown(m)
}

var xxx_messageInfo_Qoscarglobalcfg proto.InternalMessageInfo

func (m *Qoscarglobalcfg) GetYellowaction() string {
	if m != nil {
		return m.Yellowaction
	}
	return ""
}

func (m *Qoscarglobalcfg) GetRedaction() string {
	if m != nil {
		return m.Redaction
	}
	return ""
}

func (m *Qoscarglobalcfg) GetIfgdisable() int32 {
	if m != nil {
		return m.Ifgdisable
	}
	return 0
}

func (m *Qoscarglobalcfg) GetCarmodedoublesingle() int32 {
	if m != nil {
		return m.Carmodedoublesingle
	}
	return 0
}

func (m *Qoscarglobalcfg) GetQoscarcfg() []*Qoscar {
	if m != nil {
		return m.Qoscarcfg
	}
	return nil
}

func (m *Qoscarglobalcfg) GetUpdatetime() int64 {
	if m != nil {
		return m.Updatetime
	}
	return 0
}

type Qosqueueshap struct {
	Queueindex           int32    `protobuf:"varint,1,opt,name=queueindex,proto3" json:"queueindex,omitempty"`
	Cirpercent           int32    `protobuf:"varint,2,opt,name=cirpercent,proto3" json:"cirpercent,omitempty"`
	Pirpercent           int32    `protobuf:"varint,3,opt,name=pirpercent,proto3" json:"pirpercent,omitempty"`
	Cirunit              int32    `protobuf:"varint,4,opt,name=cirunit,proto3" json:"cirunit,omitempty"`
	Cirvalue             int32    `protobuf:"varint,5,opt,name=cirvalue,proto3" json:"cirvalue,omitempty"`
	Pirunit              int32    `protobuf:"varint,6,opt,name=pirunit,proto3" json:"pirunit,omitempty"`
	Pirvalue             int32    `protobuf:"varint,7,opt,name=pirvalue,proto3" json:"pirvalue,omitempty"`
	Cbsunit              int32    `protobuf:"varint,8,opt,name=cbsunit,proto3" json:"cbsunit,omitempty"`
	Cbsvalue             int32    `protobuf:"varint,9,opt,name=cbsvalue,proto3" json:"cbsvalue,omitempty"`
	Pbsunit              int32    `protobuf:"varint,10,opt,name=pbsunit,proto3" json:"pbsunit,omitempty"`
	Pbsvalue             int32    `protobuf:"varint,11,opt,name=pbsvalue,proto3" json:"pbsvalue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Qosqueueshap) Reset()         { *m = Qosqueueshap{} }
func (m *Qosqueueshap) String() string { return proto.CompactTextString(m) }
func (*Qosqueueshap) ProtoMessage()    {}
func (*Qosqueueshap) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{16}
}

func (m *Qosqueueshap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Qosqueueshap.Unmarshal(m, b)
}
func (m *Qosqueueshap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Qosqueueshap.Marshal(b, m, deterministic)
}
func (m *Qosqueueshap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Qosqueueshap.Merge(m, src)
}
func (m *Qosqueueshap) XXX_Size() int {
	return xxx_messageInfo_Qosqueueshap.Size(m)
}
func (m *Qosqueueshap) XXX_DiscardUnknown() {
	xxx_messageInfo_Qosqueueshap.DiscardUnknown(m)
}

var xxx_messageInfo_Qosqueueshap proto.InternalMessageInfo

func (m *Qosqueueshap) GetQueueindex() int32 {
	if m != nil {
		return m.Queueindex
	}
	return 0
}

func (m *Qosqueueshap) GetCirpercent() int32 {
	if m != nil {
		return m.Cirpercent
	}
	return 0
}

func (m *Qosqueueshap) GetPirpercent() int32 {
	if m != nil {
		return m.Pirpercent
	}
	return 0
}

func (m *Qosqueueshap) GetCirunit() int32 {
	if m != nil {
		return m.Cirunit
	}
	return 0
}

func (m *Qosqueueshap) GetCirvalue() int32 {
	if m != nil {
		return m.Cirvalue
	}
	return 0
}

func (m *Qosqueueshap) GetPirunit() int32 {
	if m != nil {
		return m.Pirunit
	}
	return 0
}

func (m *Qosqueueshap) GetPirvalue() int32 {
	if m != nil {
		return m.Pirvalue
	}
	return 0
}

func (m *Qosqueueshap) GetCbsunit() int32 {
	if m != nil {
		return m.Cbsunit
	}
	return 0
}

func (m *Qosqueueshap) GetCbsvalue() int32 {
	if m != nil {
		return m.Cbsvalue
	}
	return 0
}

func (m *Qosqueueshap) GetPbsunit() int32 {
	if m != nil {
		return m.Pbsunit
	}
	return 0
}

func (m *Qosqueueshap) GetPbsvalue() int32 {
	if m != nil {
		return m.Pbsvalue
	}
	return 0
}

//流行为模式下的car配置,在流行为视图下配置
type Flowcar struct {
	Cirunit              int32    `protobuf:"varint,1,opt,name=cirunit,proto3" json:"cirunit,omitempty"`
	Cirvalue             int32    `protobuf:"varint,2,opt,name=cirvalue,proto3" json:"cirvalue,omitempty"`
	Pirunit              int32    `protobuf:"varint,3,opt,name=pirunit,proto3" json:"pirunit,omitempty"`
	Pirvalue             int32    `protobuf:"varint,4,opt,name=pirvalue,proto3" json:"pirvalue,omitempty"`
	Cbsunit              int32    `protobuf:"varint,5,opt,name=cbsunit,proto3" json:"cbsunit,omitempty"`
	Cbsvalue             int32    `protobuf:"varint,6,opt,name=cbsvalue,proto3" json:"cbsvalue,omitempty"`
	Pbsunit              int32    `protobuf:"varint,7,opt,name=pbsunit,proto3" json:"pbsunit,omitempty"`
	Pbsvalue             int32    `protobuf:"varint,8,opt,name=pbsvalue,proto3" json:"pbsvalue,omitempty"`
	Isshare              int32    `protobuf:"varint,9,opt,name=isshare,proto3" json:"isshare,omitempty"`
	Colormode            string   `protobuf:"bytes,10,opt,name=colormode,proto3" json:"colormode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Flowcar) Reset()         { *m = Flowcar{} }
func (m *Flowcar) String() string { return proto.CompactTextString(m) }
func (*Flowcar) ProtoMessage()    {}
func (*Flowcar) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{17}
}

func (m *Flowcar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Flowcar.Unmarshal(m, b)
}
func (m *Flowcar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Flowcar.Marshal(b, m, deterministic)
}
func (m *Flowcar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Flowcar.Merge(m, src)
}
func (m *Flowcar) XXX_Size() int {
	return xxx_messageInfo_Flowcar.Size(m)
}
func (m *Flowcar) XXX_DiscardUnknown() {
	xxx_messageInfo_Flowcar.DiscardUnknown(m)
}

var xxx_messageInfo_Flowcar proto.InternalMessageInfo

func (m *Flowcar) GetCirunit() int32 {
	if m != nil {
		return m.Cirunit
	}
	return 0
}

func (m *Flowcar) GetCirvalue() int32 {
	if m != nil {
		return m.Cirvalue
	}
	return 0
}

func (m *Flowcar) GetPirunit() int32 {
	if m != nil {
		return m.Pirunit
	}
	return 0
}

func (m *Flowcar) GetPirvalue() int32 {
	if m != nil {
		return m.Pirvalue
	}
	return 0
}

func (m *Flowcar) GetCbsunit() int32 {
	if m != nil {
		return m.Cbsunit
	}
	return 0
}

func (m *Flowcar) GetCbsvalue() int32 {
	if m != nil {
		return m.Cbsvalue
	}
	return 0
}

func (m *Flowcar) GetPbsunit() int32 {
	if m != nil {
		return m.Pbsunit
	}
	return 0
}

func (m *Flowcar) GetPbsvalue() int32 {
	if m != nil {
		return m.Pbsvalue
	}
	return 0
}

func (m *Flowcar) GetIsshare() int32 {
	if m != nil {
		return m.Isshare
	}
	return 0
}

func (m *Flowcar) GetColormode() string {
	if m != nil {
		return m.Colormode
	}
	return ""
}

type Queueweight struct {
	Scheduletype         string   `protobuf:"bytes,1,opt,name=scheduletype,proto3" json:"scheduletype,omitempty"`
	Queueindex           int32    `protobuf:"varint,2,opt,name=queueindex,proto3" json:"queueindex,omitempty"`
	Weight               int32    `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Queueweight) Reset()         { *m = Queueweight{} }
func (m *Queueweight) String() string { return proto.CompactTextString(m) }
func (*Queueweight) ProtoMessage()    {}
func (*Queueweight) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{18}
}

func (m *Queueweight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Queueweight.Unmarshal(m, b)
}
func (m *Queueweight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Queueweight.Marshal(b, m, deterministic)
}
func (m *Queueweight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Queueweight.Merge(m, src)
}
func (m *Queueweight) XXX_Size() int {
	return xxx_messageInfo_Queueweight.Size(m)
}
func (m *Queueweight) XXX_DiscardUnknown() {
	xxx_messageInfo_Queueweight.DiscardUnknown(m)
}

var xxx_messageInfo_Queueweight proto.InternalMessageInfo

func (m *Queueweight) GetScheduletype() string {
	if m != nil {
		return m.Scheduletype
	}
	return ""
}

func (m *Queueweight) GetQueueindex() int32 {
	if m != nil {
		return m.Queueindex
	}
	return 0
}

func (m *Queueweight) GetWeight() int32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

type Queuelength struct {
	Queueindex           int32    `protobuf:"varint,1,opt,name=queueindex,proto3" json:"queueindex,omitempty"`
	Queuelen             int32    `protobuf:"varint,2,opt,name=queuelen,proto3" json:"queuelen,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Queuelength) Reset()         { *m = Queuelength{} }
func (m *Queuelength) String() string { return proto.CompactTextString(m) }
func (*Queuelength) ProtoMessage()    {}
func (*Queuelength) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{19}
}

func (m *Queuelength) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Queuelength.Unmarshal(m, b)
}
func (m *Queuelength) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Queuelength.Marshal(b, m, deterministic)
}
func (m *Queuelength) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Queuelength.Merge(m, src)
}
func (m *Queuelength) XXX_Size() int {
	return xxx_messageInfo_Queuelength.Size(m)
}
func (m *Queuelength) XXX_DiscardUnknown() {
	xxx_messageInfo_Queuelength.DiscardUnknown(m)
}

var xxx_messageInfo_Queuelength proto.InternalMessageInfo

func (m *Queuelength) GetQueueindex() int32 {
	if m != nil {
		return m.Queueindex
	}
	return 0
}

func (m *Queuelength) GetQueuelen() int32 {
	if m != nil {
		return m.Queuelen
	}
	return 0
}

type Wreddropname struct {
	Queueindex           int32    `protobuf:"varint,1,opt,name=queueindex,proto3" json:"queueindex,omitempty"`
	Dropprofile          string   `protobuf:"bytes,2,opt,name=dropprofile,proto3" json:"dropprofile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Wreddropname) Reset()         { *m = Wreddropname{} }
func (m *Wreddropname) String() string { return proto.CompactTextString(m) }
func (*Wreddropname) ProtoMessage()    {}
func (*Wreddropname) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{20}
}

func (m *Wreddropname) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Wreddropname.Unmarshal(m, b)
}
func (m *Wreddropname) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Wreddropname.Marshal(b, m, deterministic)
}
func (m *Wreddropname) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Wreddropname.Merge(m, src)
}
func (m *Wreddropname) XXX_Size() int {
	return xxx_messageInfo_Wreddropname.Size(m)
}
func (m *Wreddropname) XXX_DiscardUnknown() {
	xxx_messageInfo_Wreddropname.DiscardUnknown(m)
}

var xxx_messageInfo_Wreddropname proto.InternalMessageInfo

func (m *Wreddropname) GetQueueindex() int32 {
	if m != nil {
		return m.Queueindex
	}
	return 0
}

func (m *Wreddropname) GetDropprofile() string {
	if m != nil {
		return m.Dropprofile
	}
	return ""
}

type Queueschedule struct {
	Schmode              string   `protobuf:"bytes,1,opt,name=schmode,proto3" json:"schmode,omitempty"`
	Startindex           int32    `protobuf:"varint,2,opt,name=startindex,proto3" json:"startindex,omitempty"`
	Endindex             int32    `protobuf:"varint,3,opt,name=endindex,proto3" json:"endindex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Queueschedule) Reset()         { *m = Queueschedule{} }
func (m *Queueschedule) String() string { return proto.CompactTextString(m) }
func (*Queueschedule) ProtoMessage()    {}
func (*Queueschedule) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{21}
}

func (m *Queueschedule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Queueschedule.Unmarshal(m, b)
}
func (m *Queueschedule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Queueschedule.Marshal(b, m, deterministic)
}
func (m *Queueschedule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Queueschedule.Merge(m, src)
}
func (m *Queueschedule) XXX_Size() int {
	return xxx_messageInfo_Queueschedule.Size(m)
}
func (m *Queueschedule) XXX_DiscardUnknown() {
	xxx_messageInfo_Queueschedule.DiscardUnknown(m)
}

var xxx_messageInfo_Queueschedule proto.InternalMessageInfo

func (m *Queueschedule) GetSchmode() string {
	if m != nil {
		return m.Schmode
	}
	return ""
}

func (m *Queueschedule) GetStartindex() int32 {
	if m != nil {
		return m.Startindex
	}
	return 0
}

func (m *Queueschedule) GetEndindex() int32 {
	if m != nil {
		return m.Endindex
	}
	return 0
}

//应用场景
//
//为了防止下游网络因相邻的上游网络发送数据流量过大，造成拥塞或大量报文的直接丢弃，可以通过执行qos lr命令在当前网络设备的出接口上配置流量整形功能，限制流出某一连接的流量与突发，使报文均匀地向外发送。
//
//与流量监管相同，流量整形也是对流量进行限速。但是利用流量监管进行限速时，系统会直接丢弃不符合速率要求的报文，而流量整形则将不符合速率要求的报文先送入队列进行缓存，当令牌桶有足够的令牌时，再均匀的向外发送这些被缓存的报文。流量整形会增加延迟，而流量监管几乎不引入额外的延迟。
//
//注意事项
//
//本命令只能用在接口出方向上。
//
//当接口出方向的流量速率大于该接口配置的出方向的信息承诺速率的告警阈值时会产生告警。
//
//如果多个接口需要配置相同的流量整形速率，可通过接口组进行配置，以减少重复配置工作。
//
//如果同一接口下既配置了接口队列整形（执行命令qos queue shaping），又配置了接口整形，则接口整形的CIR必须大于等于接口队列整形的CIR之和；否则，流量整形会出现异常现象，如低优先级队列抢占高优先级队列的带宽等。
//
//由于流量整形采用了缓存机制，所以会增加网络传输延迟。
//
//qos lr命令为覆盖式命令，即在同一接口多次配置流量整形参数后，按最后一次配置生效。
type Linerate struct {
	Isnocfg              int32    `protobuf:"varint,1,opt,name=isnocfg,proto3" json:"isnocfg,omitempty"`
	Cirvalue             int32    `protobuf:"varint,2,opt,name=cirvalue,proto3" json:"cirvalue,omitempty"`
	Cirunit              int32    `protobuf:"varint,3,opt,name=cirunit,proto3" json:"cirunit,omitempty"`
	Cbsvalue             int32    `protobuf:"varint,4,opt,name=cbsvalue,proto3" json:"cbsvalue,omitempty"`
	Cbsunit              int32    `protobuf:"varint,5,opt,name=cbsunit,proto3" json:"cbsunit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Linerate) Reset()         { *m = Linerate{} }
func (m *Linerate) String() string { return proto.CompactTextString(m) }
func (*Linerate) ProtoMessage()    {}
func (*Linerate) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{22}
}

func (m *Linerate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Linerate.Unmarshal(m, b)
}
func (m *Linerate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Linerate.Marshal(b, m, deterministic)
}
func (m *Linerate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Linerate.Merge(m, src)
}
func (m *Linerate) XXX_Size() int {
	return xxx_messageInfo_Linerate.Size(m)
}
func (m *Linerate) XXX_DiscardUnknown() {
	xxx_messageInfo_Linerate.DiscardUnknown(m)
}

var xxx_messageInfo_Linerate proto.InternalMessageInfo

func (m *Linerate) GetIsnocfg() int32 {
	if m != nil {
		return m.Isnocfg
	}
	return 0
}

func (m *Linerate) GetCirvalue() int32 {
	if m != nil {
		return m.Cirvalue
	}
	return 0
}

func (m *Linerate) GetCirunit() int32 {
	if m != nil {
		return m.Cirunit
	}
	return 0
}

func (m *Linerate) GetCbsvalue() int32 {
	if m != nil {
		return m.Cbsvalue
	}
	return 0
}

func (m *Linerate) GetCbsunit() int32 {
	if m != nil {
		return m.Cbsunit
	}
	return 0
}

type Trustinfo struct {
	Pritype              string   `protobuf:"bytes,1,opt,name=pritype,proto3" json:"pritype,omitempty"`
	Uselayer             string   `protobuf:"bytes,2,opt,name=uselayer,proto3" json:"uselayer,omitempty"`
	Upstreamdomain       string   `protobuf:"bytes,3,opt,name=upstreamdomain,proto3" json:"upstreamdomain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trustinfo) Reset()         { *m = Trustinfo{} }
func (m *Trustinfo) String() string { return proto.CompactTextString(m) }
func (*Trustinfo) ProtoMessage()    {}
func (*Trustinfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{23}
}

func (m *Trustinfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trustinfo.Unmarshal(m, b)
}
func (m *Trustinfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trustinfo.Marshal(b, m, deterministic)
}
func (m *Trustinfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trustinfo.Merge(m, src)
}
func (m *Trustinfo) XXX_Size() int {
	return xxx_messageInfo_Trustinfo.Size(m)
}
func (m *Trustinfo) XXX_DiscardUnknown() {
	xxx_messageInfo_Trustinfo.DiscardUnknown(m)
}

var xxx_messageInfo_Trustinfo proto.InternalMessageInfo

func (m *Trustinfo) GetPritype() string {
	if m != nil {
		return m.Pritype
	}
	return ""
}

func (m *Trustinfo) GetUselayer() string {
	if m != nil {
		return m.Uselayer
	}
	return ""
}

func (m *Trustinfo) GetUpstreamdomain() string {
	if m != nil {
		return m.Upstreamdomain
	}
	return ""
}

//普通qos 在接口上的应用配置,包含car,lr,接口上qos各队列的限速配置等
type Qoscommifcfg struct {
	Iflist               string           `protobuf:"bytes,1,opt,name=iflist,proto3" json:"iflist,omitempty"`
	Qoscarname           string           `protobuf:"bytes,2,opt,name=qoscarname,proto3" json:"qoscarname,omitempty"`
	Lrcfg                *Linerate        `protobuf:"bytes,3,opt,name=lrcfg,proto3" json:"lrcfg,omitempty"`
	Phboutpricfg         *Phboutpriset    `protobuf:"bytes,4,opt,name=phboutpricfg,proto3" json:"phboutpricfg,omitempty"`
	Trustcfg             *Trustinfo       `protobuf:"bytes,5,opt,name=trustcfg,proto3" json:"trustcfg,omitempty"`
	Queschemode          []*Queueschedule `protobuf:"bytes,6,rep,name=queschemode,proto3" json:"queschemode,omitempty"`
	Queuescheweight      []*Queueweight   `protobuf:"bytes,7,rep,name=queuescheweight,proto3" json:"queuescheweight,omitempty"`
	Wredprofile          []*Wreddropname  `protobuf:"bytes,8,rep,name=wredprofile,proto3" json:"wredprofile,omitempty"`
	Queuelen             []*Queuelength   `protobuf:"bytes,9,rep,name=queuelen,proto3" json:"queuelen,omitempty"`
	Queueshaping         []*Qosqueueshap  `protobuf:"bytes,10,rep,name=queueshaping,proto3" json:"queueshaping,omitempty"`
	Updatetime           int64            `protobuf:"varint,11,opt,name=updatetime,proto3" json:"updatetime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Qoscommifcfg) Reset()         { *m = Qoscommifcfg{} }
func (m *Qoscommifcfg) String() string { return proto.CompactTextString(m) }
func (*Qoscommifcfg) ProtoMessage()    {}
func (*Qoscommifcfg) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{24}
}

func (m *Qoscommifcfg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Qoscommifcfg.Unmarshal(m, b)
}
func (m *Qoscommifcfg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Qoscommifcfg.Marshal(b, m, deterministic)
}
func (m *Qoscommifcfg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Qoscommifcfg.Merge(m, src)
}
func (m *Qoscommifcfg) XXX_Size() int {
	return xxx_messageInfo_Qoscommifcfg.Size(m)
}
func (m *Qoscommifcfg) XXX_DiscardUnknown() {
	xxx_messageInfo_Qoscommifcfg.DiscardUnknown(m)
}

var xxx_messageInfo_Qoscommifcfg proto.InternalMessageInfo

func (m *Qoscommifcfg) GetIflist() string {
	if m != nil {
		return m.Iflist
	}
	return ""
}

func (m *Qoscommifcfg) GetQoscarname() string {
	if m != nil {
		return m.Qoscarname
	}
	return ""
}

func (m *Qoscommifcfg) GetLrcfg() *Linerate {
	if m != nil {
		return m.Lrcfg
	}
	return nil
}

func (m *Qoscommifcfg) GetPhboutpricfg() *Phboutpriset {
	if m != nil {
		return m.Phboutpricfg
	}
	return nil
}

func (m *Qoscommifcfg) GetTrustcfg() *Trustinfo {
	if m != nil {
		return m.Trustcfg
	}
	return nil
}

func (m *Qoscommifcfg) GetQueschemode() []*Queueschedule {
	if m != nil {
		return m.Queschemode
	}
	return nil
}

func (m *Qoscommifcfg) GetQueuescheweight() []*Queueweight {
	if m != nil {
		return m.Queuescheweight
	}
	return nil
}

func (m *Qoscommifcfg) GetWredprofile() []*Wreddropname {
	if m != nil {
		return m.Wredprofile
	}
	return nil
}

func (m *Qoscommifcfg) GetQueuelen() []*Queuelength {
	if m != nil {
		return m.Queuelen
	}
	return nil
}

func (m *Qoscommifcfg) GetQueueshaping() []*Qosqueueshap {
	if m != nil {
		return m.Queueshaping
	}
	return nil
}

func (m *Qoscommifcfg) GetUpdatetime() int64 {
	if m != nil {
		return m.Updatetime
	}
	return 0
}

//qos 接口配置显示
type Qosshowifcfg struct {
	Showcmd              int32    `protobuf:"varint,1,opt,name=showcmd,proto3" json:"showcmd,omitempty"`
	Rtncode              int32    `protobuf:"varint,2,opt,name=rtncode,proto3" json:"rtncode,omitempty"`
	Iflist               string   `protobuf:"bytes,3,opt,name=iflist,proto3" json:"iflist,omitempty"`
	Rtninfo              string   `protobuf:"bytes,4,opt,name=rtninfo,proto3" json:"rtninfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Qosshowifcfg) Reset()         { *m = Qosshowifcfg{} }
func (m *Qosshowifcfg) String() string { return proto.CompactTextString(m) }
func (*Qosshowifcfg) ProtoMessage()    {}
func (*Qosshowifcfg) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{25}
}

func (m *Qosshowifcfg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Qosshowifcfg.Unmarshal(m, b)
}
func (m *Qosshowifcfg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Qosshowifcfg.Marshal(b, m, deterministic)
}
func (m *Qosshowifcfg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Qosshowifcfg.Merge(m, src)
}
func (m *Qosshowifcfg) XXX_Size() int {
	return xxx_messageInfo_Qosshowifcfg.Size(m)
}
func (m *Qosshowifcfg) XXX_DiscardUnknown() {
	xxx_messageInfo_Qosshowifcfg.DiscardUnknown(m)
}

var xxx_messageInfo_Qosshowifcfg proto.InternalMessageInfo

func (m *Qosshowifcfg) GetShowcmd() int32 {
	if m != nil {
		return m.Showcmd
	}
	return 0
}

func (m *Qosshowifcfg) GetRtncode() int32 {
	if m != nil {
		return m.Rtncode
	}
	return 0
}

func (m *Qosshowifcfg) GetIflist() string {
	if m != nil {
		return m.Iflist
	}
	return ""
}

func (m *Qosshowifcfg) GetRtninfo() string {
	if m != nil {
		return m.Rtninfo
	}
	return ""
}

type Qoscfgrtninfo struct {
	Cmdcode              int32    `protobuf:"varint,1,opt,name=cmdcode,proto3" json:"cmdcode,omitempty"`
	Rtncode              int32    `protobuf:"varint,2,opt,name=rtncode,proto3" json:"rtncode,omitempty"`
	Rtnstr               string   `protobuf:"bytes,3,opt,name=rtnstr,proto3" json:"rtnstr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Qoscfgrtninfo) Reset()         { *m = Qoscfgrtninfo{} }
func (m *Qoscfgrtninfo) String() string { return proto.CompactTextString(m) }
func (*Qoscfgrtninfo) ProtoMessage()    {}
func (*Qoscfgrtninfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{26}
}

func (m *Qoscfgrtninfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Qoscfgrtninfo.Unmarshal(m, b)
}
func (m *Qoscfgrtninfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Qoscfgrtninfo.Marshal(b, m, deterministic)
}
func (m *Qoscfgrtninfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Qoscfgrtninfo.Merge(m, src)
}
func (m *Qoscfgrtninfo) XXX_Size() int {
	return xxx_messageInfo_Qoscfgrtninfo.Size(m)
}
func (m *Qoscfgrtninfo) XXX_DiscardUnknown() {
	xxx_messageInfo_Qoscfgrtninfo.DiscardUnknown(m)
}

var xxx_messageInfo_Qoscfgrtninfo proto.InternalMessageInfo

func (m *Qoscfgrtninfo) GetCmdcode() int32 {
	if m != nil {
		return m.Cmdcode
	}
	return 0
}

func (m *Qoscfgrtninfo) GetRtncode() int32 {
	if m != nil {
		return m.Rtncode
	}
	return 0
}

func (m *Qoscfgrtninfo) GetRtnstr() string {
	if m != nil {
		return m.Rtnstr
	}
	return ""
}

type Qosservershowinput struct {
	Cmdid                int32    `protobuf:"varint,1,opt,name=cmdid,proto3" json:"cmdid,omitempty"`
	Showoption           int32    `protobuf:"varint,2,opt,name=showoption,proto3" json:"showoption,omitempty"`
	Inputstr             string   `protobuf:"bytes,3,opt,name=inputstr,proto3" json:"inputstr,omitempty"`
	Regstr               string   `protobuf:"bytes,4,opt,name=regstr,proto3" json:"regstr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Qosservershowinput) Reset()         { *m = Qosservershowinput{} }
func (m *Qosservershowinput) String() string { return proto.CompactTextString(m) }
func (*Qosservershowinput) ProtoMessage()    {}
func (*Qosservershowinput) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{27}
}

func (m *Qosservershowinput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Qosservershowinput.Unmarshal(m, b)
}
func (m *Qosservershowinput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Qosservershowinput.Marshal(b, m, deterministic)
}
func (m *Qosservershowinput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Qosservershowinput.Merge(m, src)
}
func (m *Qosservershowinput) XXX_Size() int {
	return xxx_messageInfo_Qosservershowinput.Size(m)
}
func (m *Qosservershowinput) XXX_DiscardUnknown() {
	xxx_messageInfo_Qosservershowinput.DiscardUnknown(m)
}

var xxx_messageInfo_Qosservershowinput proto.InternalMessageInfo

func (m *Qosservershowinput) GetCmdid() int32 {
	if m != nil {
		return m.Cmdid
	}
	return 0
}

func (m *Qosservershowinput) GetShowoption() int32 {
	if m != nil {
		return m.Showoption
	}
	return 0
}

func (m *Qosservershowinput) GetInputstr() string {
	if m != nil {
		return m.Inputstr
	}
	return ""
}

func (m *Qosservershowinput) GetRegstr() string {
	if m != nil {
		return m.Regstr
	}
	return ""
}

type Qosservershowrtn struct {
	Cmdid                int32    `protobuf:"varint,1,opt,name=cmdid,proto3" json:"cmdid,omitempty"`
	Rtncode              int32    `protobuf:"varint,2,opt,name=rtncode,proto3" json:"rtncode,omitempty"`
	Inputstr             string   `protobuf:"bytes,3,opt,name=inputstr,proto3" json:"inputstr,omitempty"`
	Regstr               string   `protobuf:"bytes,4,opt,name=regstr,proto3" json:"regstr,omitempty"`
	Rtnstr               string   `protobuf:"bytes,5,opt,name=rtnstr,proto3" json:"rtnstr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Qosservershowrtn) Reset()         { *m = Qosservershowrtn{} }
func (m *Qosservershowrtn) String() string { return proto.CompactTextString(m) }
func (*Qosservershowrtn) ProtoMessage()    {}
func (*Qosservershowrtn) Descriptor() ([]byte, []int) {
	return fileDescriptor_acb97775b1858998, []int{28}
}

func (m *Qosservershowrtn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Qosservershowrtn.Unmarshal(m, b)
}
func (m *Qosservershowrtn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Qosservershowrtn.Marshal(b, m, deterministic)
}
func (m *Qosservershowrtn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Qosservershowrtn.Merge(m, src)
}
func (m *Qosservershowrtn) XXX_Size() int {
	return xxx_messageInfo_Qosservershowrtn.Size(m)
}
func (m *Qosservershowrtn) XXX_DiscardUnknown() {
	xxx_messageInfo_Qosservershowrtn.DiscardUnknown(m)
}

var xxx_messageInfo_Qosservershowrtn proto.InternalMessageInfo

func (m *Qosservershowrtn) GetCmdid() int32 {
	if m != nil {
		return m.Cmdid
	}
	return 0
}

func (m *Qosservershowrtn) GetRtncode() int32 {
	if m != nil {
		return m.Rtncode
	}
	return 0
}

func (m *Qosservershowrtn) GetInputstr() string {
	if m != nil {
		return m.Inputstr
	}
	return ""
}

func (m *Qosservershowrtn) GetRegstr() string {
	if m != nil {
		return m.Regstr
	}
	return ""
}

func (m *Qosservershowrtn) GetRtnstr() string {
	if m != nil {
		return m.Rtnstr
	}
	return ""
}

func init() {
	proto.RegisterType((*Qos8021Pmap)(nil), "cml.qos8021pmap")
	proto.RegisterType((*Dscpmap)(nil), "cml.dscpmap")
	proto.RegisterType((*Dscp2Dscpmap)(nil), "cml.dscp2dscpmap")
	proto.RegisterType((*Expmap)(nil), "cml.expmap")
	proto.RegisterType((*Mplsmap)(nil), "cml.mplsmap")
	proto.RegisterType((*Localpremap)(nil), "cml.localpremap")
	proto.RegisterType((*Qosdiffservmap)(nil), "cml.qosdiffservmap")
	proto.RegisterType((*Qosdiffservapply)(nil), "cml.qosdiffservapply")
	proto.RegisterType((*L2Vpnmode)(nil), "cml.l2vpnmode")
	proto.RegisterType((*Mplsmode)(nil), "cml.mplsmode")
	proto.RegisterType((*Labelqosmode)(nil), "cml.labelqosmode")
	proto.RegisterType((*Phblocalmap)(nil), "cml.phblocalmap")
	proto.RegisterType((*Phboutpriset)(nil), "cml.phboutpriset")
	proto.RegisterType((*Qosphbcfg)(nil), "cml.qosphbcfg")
	proto.RegisterType((*Qoscar)(nil), "cml.qoscar")
	proto.RegisterType((*Qoscarglobalcfg)(nil), "cml.qoscarglobalcfg")
	proto.RegisterType((*Qosqueueshap)(nil), "cml.qosqueueshap")
	proto.RegisterType((*Flowcar)(nil), "cml.flowcar")
	proto.RegisterType((*Queueweight)(nil), "cml.queueweight")
	proto.RegisterType((*Queuelength)(nil), "cml.queuelength")
	proto.RegisterType((*Wreddropname)(nil), "cml.wreddropname")
	proto.RegisterType((*Queueschedule)(nil), "cml.queueschedule")
	proto.RegisterType((*Linerate)(nil), "cml.linerate")
	proto.RegisterType((*Trustinfo)(nil), "cml.trustinfo")
	proto.RegisterType((*Qoscommifcfg)(nil), "cml.qoscommifcfg")
	proto.RegisterType((*Qosshowifcfg)(nil), "cml.qosshowifcfg")
	proto.RegisterType((*Qoscfgrtninfo)(nil), "cml.qoscfgrtninfo")
	proto.RegisterType((*Qosservershowinput)(nil), "cml.qosservershowinput")
	proto.RegisterType((*Qosservershowrtn)(nil), "cml.qosservershowrtn")
}

func init() {
	proto.RegisterFile("qos.proto", fileDescriptor_acb97775b1858998)
}

var fileDescriptor_acb97775b1858998 = []byte{
	// 1855 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x59, 0xcd, 0x8f, 0x1c, 0x47,
	0x15, 0xcf, 0x7c, 0xcf, 0xbc, 0x99, 0xfd, 0x48, 0x39, 0x21, 0x23, 0x2b, 0x42, 0xab, 0x0e, 0x42,
	0x4b, 0x14, 0x39, 0xce, 0x04, 0x24, 0xdb, 0x10, 0x21, 0xb4, 0x46, 0x91, 0x25, 0x82, 0x36, 0x6d,
	0x21, 0x21, 0xe5, 0x10, 0x75, 0xf7, 0xd4, 0xcc, 0x34, 0xea, 0xee, 0xaa, 0xad, 0xea, 0xd9, 0xb5,
	0x39, 0x70, 0xe4, 0x88, 0x90, 0x10, 0x07, 0x6e, 0xfc, 0x35, 0x5c, 0xe0, 0x8f, 0xe1, 0xcc, 0x09,
	0xbd, 0x57, 0x55, 0xdd, 0xd5, 0x3d, 0x6e, 0xaf, 0x76, 0x7d, 0xb2, 0xdf, 0x57, 0xbd, 0xf7, 0xaa,
	0x7e, 0xef, 0xa3, 0x67, 0x61, 0x76, 0x25, 0xf4, 0x23, 0xa9, 0x44, 0x29, 0xd8, 0x20, 0xc9, 0xb3,
	0x60, 0x0b, 0xf3, 0x2b, 0xa1, 0x9f, 0x3c, 0x5e, 0x7d, 0x21, 0xf3, 0x48, 0xb2, 0x1f, 0xc1, 0x91,
	0x23, 0xaf, 0xa3, 0x6c, 0xcf, 0x97, 0xbd, 0xb3, 0xde, 0xf9, 0x28, 0x6c, 0x32, 0xd9, 0xc7, 0x30,
	0xd3, 0x5c, 0x5d, 0x27, 0x59, 0xa4, 0xf5, 0xb2, 0x7f, 0xd6, 0x3b, 0x9f, 0x85, 0x35, 0x83, 0x7d,
	0x00, 0xa3, 0x44, 0x64, 0x42, 0x2d, 0x07, 0x24, 0x31, 0x44, 0xf0, 0x1d, 0x4c, 0xd6, 0x3a, 0x21,
	0x27, 0x1f, 0xc3, 0x0c, 0xff, 0xeb, 0x3b, 0xa8, 0x19, 0xf7, 0x3a, 0xfc, 0x0f, 0xb0, 0xc0, 0x03,
	0x56, 0xce, 0xc3, 0x19, 0xcc, 0xd3, 0xa2, 0xed, 0xc3, 0x67, 0xb1, 0x00, 0x16, 0x79, 0x24, 0x6b,
	0x95, 0x3e, 0xa9, 0x34, 0x78, 0x1d, 0xbe, 0x7e, 0x0f, 0x63, 0xfe, 0x8a, 0xbc, 0x3c, 0x84, 0x29,
	0x7f, 0xd5, 0x70, 0x51, 0xd1, 0xf7, 0xca, 0x22, 0x82, 0x49, 0x2e, 0x33, 0x7d, 0xfb, 0x15, 0xf9,
	0x8e, 0xfb, 0x6f, 0x73, 0x3c, 0x68, 0x39, 0x0e, 0x5e, 0xc0, 0x3c, 0x13, 0x49, 0x94, 0x49, 0xc5,
	0x6d, 0x06, 0x44, 0x5e, 0xaa, 0x2a, 0x03, 0x47, 0xb3, 0x1f, 0x02, 0x5c, 0xed, 0xf9, 0x9e, 0xa7,
	0xc5, 0x9a, 0xbf, 0xb2, 0x6e, 0x3c, 0x4e, 0xf0, 0xef, 0x21, 0x1c, 0x5f, 0x09, 0xbd, 0x4e, 0x37,
	0x1b, 0x3c, 0x1f, 0x8f, 0xfb, 0x04, 0x8e, 0x1c, 0xf9, 0x7d, 0x11, 0xe5, 0xe6, 0xcc, 0x59, 0xb8,
	0x70, 0xcc, 0xdf, 0x46, 0x39, 0x67, 0x8f, 0x01, 0xd2, 0xc2, 0x01, 0x6e, 0xd9, 0x3f, 0x1b, 0x9c,
	0xcf, 0x57, 0xa7, 0x8f, 0x92, 0x3c, 0x7b, 0xe4, 0x01, 0x31, 0xf4, 0x74, 0xd8, 0x0a, 0xe6, 0x62,
	0x5f, 0x56, 0x26, 0x83, 0x0e, 0x13, 0x5f, 0x89, 0x7d, 0x0a, 0x33, 0xf3, 0xdc, 0x68, 0x31, 0x24,
	0x8b, 0x05, 0x59, 0x58, 0x5e, 0x58, 0x8b, 0xd9, 0x67, 0x00, 0x62, 0x5f, 0x3a, 0xe5, 0xd1, 0x1b,
	0x94, 0x3d, 0x39, 0xfb, 0x1c, 0x16, 0x69, 0x71, 0x2d, 0x33, 0x6d, 0x50, 0xb0, 0x1c, 0x93, 0xfe,
	0x9c, 0xf4, 0x0d, 0x2b, 0x6c, 0x28, 0xb0, 0x2f, 0xe0, 0x48, 0xec, 0x4b, 0xcf, 0x62, 0x72, 0x68,
	0xd1, 0xd4, 0x30, 0xd1, 0x5b, 0x2c, 0x2c, 0xa7, 0x5e, 0x40, 0x96, 0x17, 0xd6, 0x62, 0x1b, 0xbd,
	0x53, 0x9e, 0xbd, 0x41, 0xd9, 0x93, 0xb3, 0xa7, 0x70, 0x6c, 0x12, 0x77, 0xb5, 0xb2, 0x04, 0xb2,
	0x78, 0xbf, 0xca, 0xd7, 0x09, 0xc2, 0x96, 0x22, 0xfb, 0x39, 0x9c, 0xd8, 0x6b, 0xa8, 0x6c, 0xe7,
	0x5d, 0xb6, 0x6d, 0x4d, 0x44, 0xd3, 0x5e, 0xae, 0xa3, 0x92, 0x97, 0x69, 0xce, 0x97, 0x8b, 0xb3,
	0xde, 0xf9, 0x20, 0xf4, 0x38, 0xc1, 0x7f, 0xfa, 0x70, 0xea, 0xa1, 0x29, 0x92, 0x32, 0x7b, 0xcd,
	0x7e, 0x00, 0xe3, 0x74, 0x93, 0xa5, 0xba, 0xb4, 0x40, 0xb2, 0x14, 0x5b, 0xc2, 0x44, 0x0a, 0x55,
	0x4a, 0x95, 0x5a, 0x5c, 0x3a, 0x12, 0xa1, 0xe2, 0xf0, 0x9d, 0x6c, 0xb6, 0x0d, 0xa8, 0x78, 0xb8,
	0x0f, 0x7d, 0x25, 0x76, 0x0e, 0x27, 0x72, 0x17, 0x13, 0x72, 0xd6, 0xa9, 0x8e, 0xe2, 0x8c, 0x2f,
	0x87, 0x74, 0x6a, 0x9b, 0x8d, 0xdd, 0x51, 0xee, 0x62, 0x4c, 0x89, 0x17, 0xa4, 0x37, 0x32, 0xdd,
	0xb1, 0xc1, 0xc4, 0x0a, 0x2c, 0xd5, 0x5e, 0x97, 0xe5, 0x6b, 0xc9, 0x97, 0x63, 0x53, 0x81, 0x15,
	0x03, 0x2f, 0x82, 0x88, 0x2c, 0x7a, 0xcd, 0xd5, 0x72, 0x42, 0x62, 0x8f, 0x83, 0x3e, 0x88, 0x72,
	0x37, 0xb1, 0x9c, 0x92, 0x4a, 0x93, 0xd9, 0xba, 0xce, 0xd9, 0xc1, 0x75, 0x5e, 0xc0, 0x2c, 0x5b,
	0x5d, 0xcb, 0x22, 0x17, 0x6b, 0x6a, 0x17, 0xf8, 0x2f, 0xc5, 0x63, 0x2e, 0xb2, 0xa2, 0x51, 0x86,
	0x87, 0x52, 0xb5, 0x9a, 0x36, 0x55, 0xd1, 0xc1, 0x1f, 0x61, 0x4a, 0xb0, 0x79, 0x87, 0x33, 0x50,
	0x56, 0x96, 0x99, 0x69, 0x55, 0x03, 0xd3, 0x61, 0x1c, 0xdd, 0x68, 0x63, 0xc3, 0x66, 0x1b, 0x0b,
	0xfe, 0xd6, 0x83, 0x45, 0x16, 0xc5, 0x3c, 0xbb, 0x12, 0x26, 0x80, 0x15, 0x2c, 0xae, 0x84, 0xae,
	0x92, 0xa2, 0x20, 0xe6, 0xab, 0x63, 0xf3, 0xb4, 0x8e, 0x1b, 0x36, 0x74, 0xd8, 0xe7, 0x34, 0xdc,
	0x5c, 0x0e, 0x14, 0xdb, 0x7c, 0x75, 0x54, 0xd7, 0x06, 0x5a, 0xf8, 0x1a, 0xad, 0x6b, 0x1d, 0x1c,
	0x5c, 0xeb, 0xef, 0x60, 0x2e, 0x77, 0x31, 0x81, 0x07, 0x41, 0xfd, 0x63, 0x38, 0xae, 0x80, 0x54,
	0xb7, 0xea, 0x59, 0xd8, 0xe2, 0xde, 0xda, 0x4a, 0x2f, 0x61, 0x21, 0x77, 0xb1, 0xd8, 0x23, 0x84,
	0x35, 0x2f, 0x71, 0x7c, 0x19, 0x2c, 0x11, 0xfa, 0xdc, 0xf8, 0xf2, 0x58, 0x78, 0xa2, 0x21, 0x11,
	0x77, 0xee, 0xc4, 0x9a, 0x13, 0xfc, 0xb3, 0x47, 0x93, 0x5e, 0xee, 0x62, 0x44, 0xf8, 0x2f, 0xe0,
	0xd4, 0x85, 0x4d, 0x5e, 0xb1, 0x74, 0x7b, 0x5e, 0x69, 0x78, 0x39, 0x85, 0x07, 0x9a, 0xec, 0x67,
	0x5e, 0x74, 0x58, 0x54, 0x7d, 0xaf, 0xe8, 0xfd, 0xb0, 0xc3, 0x86, 0xda, 0xad, 0x77, 0xf9, 0xe7,
	0x01, 0x8c, 0xaf, 0x84, 0x4e, 0x22, 0x85, 0xf5, 0x9c, 0x44, 0xca, 0x9b, 0x18, 0x8e, 0xc4, 0x31,
	0x2d, 0xb9, 0x4a, 0x78, 0x51, 0x36, 0xc6, 0xb4, 0xcf, 0x23, 0xeb, 0x54, 0xed, 0x8b, 0xb4, 0xb4,
	0x08, 0x73, 0x24, 0x02, 0x2c, 0x49, 0x55, 0x03, 0x60, 0x8e, 0x26, 0x59, 0x12, 0x6b, 0x32, 0x1b,
	0x59, 0x99, 0xa5, 0xd9, 0x47, 0x74, 0xe2, 0xf7, 0x49, 0xac, 0xa9, 0x7e, 0x47, 0xe1, 0x38, 0x49,
	0xd5, 0x45, 0xac, 0xc9, 0x48, 0x5a, 0xa3, 0x89, 0x35, 0x92, 0x4d, 0x23, 0x19, 0x6b, 0x2a, 0x59,
	0x63, 0x74, 0x19, 0x6b, 0xea, 0x56, 0x36, 0xbe, 0x99, 0xed, 0x56, 0x75, 0x7c, 0xd2, 0xc5, 0x07,
	0xe6, 0x38, 0xe9, 0xc5, 0x27, 0x5d, 0x7c, 0x73, 0x2b, 0xf3, 0xe2, 0x93, 0x36, 0xbe, 0x85, 0x71,
	0x25, 0xab, 0xf8, 0xa4, 0x8b, 0xef, 0xc8, 0x1a, 0xc9, 0xa6, 0x11, 0xc6, 0x77, 0x5c, 0x19, 0x5d,
	0xc6, 0x3a, 0xf8, 0x6f, 0x0f, 0x4e, 0xcc, 0x43, 0x6c, 0x33, 0x11, 0x47, 0x19, 0x3e, 0x5e, 0x00,
	0x8b, 0xd7, 0x3c, 0xcb, 0xc4, 0x4d, 0x94, 0x94, 0xa9, 0x28, 0xdc, 0x20, 0xf7, 0x79, 0xd8, 0xe7,
	0x14, 0x5f, 0x5b, 0x05, 0xbb, 0xe2, 0x54, 0x0c, 0x7c, 0xfe, 0x74, 0xb3, 0x75, 0x0d, 0xd5, 0x3c,
	0x8c, 0xc7, 0x61, 0x8f, 0xe1, 0x41, 0x12, 0x29, 0xac, 0xba, 0xb5, 0xd8, 0xc7, 0x19, 0xd7, 0x69,
	0xb1, 0xad, 0x3a, 0xef, 0x9b, 0x44, 0xec, 0x27, 0x04, 0xe9, 0x24, 0x52, 0x08, 0xc2, 0x91, 0x37,
	0x43, 0x0d, 0x37, 0xac, 0xa5, 0x2d, 0xec, 0x8d, 0x0f, 0xb0, 0xf7, 0xaf, 0x3e, 0x75, 0x13, 0x82,
	0xb8, 0xde, 0x99, 0xf1, 0xe4, 0x55, 0x68, 0xaf, 0x5d, 0xa1, 0x28, 0x4f, 0x52, 0x65, 0x61, 0xe7,
	0xea, 0xad, 0xe6, 0xa0, 0x5c, 0xd6, 0x72, 0x9b, 0x6d, 0xcd, 0xf1, 0x31, 0x3a, 0xec, 0xc6, 0xe8,
	0xa8, 0x85, 0x51, 0x0f, 0x39, 0xe3, 0x6e, 0xe4, 0x4c, 0x5a, 0xc8, 0x41, 0x5f, 0x16, 0x03, 0x53,
	0xeb, 0xcb, 0x42, 0x00, 0x7d, 0xc5, 0xda, 0x58, 0xcd, 0xac, 0x2f, 0x4b, 0x93, 0x2f, 0x6b, 0x05,
	0xd6, 0x57, 0x6d, 0x25, 0x9d, 0x95, 0x43, 0xa2, 0xa5, 0x83, 0x7f, 0xf4, 0x61, 0xb2, 0xc9, 0xc4,
	0x8d, 0xab, 0x62, 0x1b, 0x6d, 0xaf, 0x3b, 0xc7, 0x7e, 0x77, 0x8e, 0x83, 0xee, 0x1c, 0x87, 0xdd,
	0x39, 0x8e, 0xba, 0x73, 0x1c, 0x77, 0xe7, 0x38, 0xe9, 0xce, 0x71, 0xda, 0xcc, 0x11, 0xad, 0x52,
	0xad, 0x77, 0x91, 0x72, 0x97, 0xe6, 0x48, 0xac, 0x00, 0xda, 0xdc, 0x69, 0xba, 0x80, 0xa9, 0x80,
	0x8a, 0x11, 0xa4, 0x30, 0x27, 0x04, 0xdd, 0xf0, 0x74, 0xbb, 0x2b, 0xb1, 0xa4, 0x74, 0xb2, 0xe3,
	0xeb, 0x7d, 0xe6, 0x4f, 0xd1, 0x06, 0xef, 0xb6, 0x41, 0x81, 0x0b, 0x91, 0x39, 0xcd, 0xde, 0x95,
	0xa5, 0x70, 0xad, 0x27, 0xad, 0x8c, 0x17, 0xdb, 0x72, 0x77, 0x2b, 0x9a, 0x1f, 0xc2, 0xd4, 0xa9,
	0xbb, 0xf7, 0x70, 0x34, 0xce, 0xa2, 0x1b, 0xc5, 0xd7, 0x6b, 0x25, 0x24, 0x75, 0xe0, 0xdb, 0xce,
	0x3a, 0x83, 0x39, 0xea, 0x4a, 0x25, 0x36, 0x69, 0xe6, 0xe6, 0xbf, 0xcf, 0x0a, 0x38, 0x1c, 0x99,
	0x42, 0xb3, 0x99, 0xe2, 0x85, 0xea, 0x64, 0x57, 0x4d, 0xf1, 0x59, 0xe8, 0x48, 0x74, 0xa6, 0xcb,
	0x48, 0x95, 0x8d, 0xfc, 0x6b, 0x0e, 0x6d, 0x0c, 0xc5, 0xda, 0x48, 0xed, 0x36, 0xe1, 0xe8, 0xe0,
	0xaf, 0x3d, 0x98, 0x66, 0x69, 0xc1, 0x55, 0x54, 0xda, 0x37, 0x2b, 0x04, 0x76, 0x8a, 0x9e, 0x7b,
	0x33, 0x22, 0x6f, 0xc3, 0xe2, 0x5b, 0x26, 0x89, 0xc3, 0xc7, 0xf0, 0x10, 0x55, 0x6f, 0xc6, 0x62,
	0x90, 0xda, 0x4d, 0x30, 0x2d, 0x36, 0x82, 0xc0, 0xa7, 0x52, 0xef, 0xe9, 0x1d, 0x89, 0x87, 0xef,
	0x35, 0x37, 0x0b, 0xa1, 0xdd, 0x9f, 0x1c, 0x8d, 0x2b, 0xc6, 0x5e, 0xea, 0x52, 0xf1, 0x28, 0x5f,
	0x8b, 0x3c, 0x4a, 0x0b, 0xfb, 0x4d, 0xd7, 0xe2, 0x06, 0xff, 0x1b, 0x50, 0x47, 0x4b, 0x44, 0x9e,
	0xa7, 0x1b, 0xcc, 0xb3, 0x6b, 0x77, 0xc6, 0xf7, 0xa4, 0x3e, 0xe9, 0xad, 0x6b, 0x1e, 0x87, 0x7d,
	0x02, 0xa3, 0x4c, 0x99, 0xdd, 0xb9, 0xde, 0x96, 0xdc, 0xbd, 0x86, 0x46, 0x76, 0xb0, 0x12, 0x0c,
	0x49, 0xf7, 0xd6, 0x95, 0xe0, 0x53, 0x98, 0xd2, 0x7d, 0x98, 0x06, 0x5e, 0xef, 0x6f, 0xd5, 0x25,
	0x85, 0x95, 0x9c, 0xfd, 0x94, 0x20, 0x8d, 0x98, 0x21, 0xa0, 0x98, 0xaf, 0x2c, 0x66, 0xfa, 0xbd,
	0x8f, 0xa6, 0xd0, 0x57, 0x63, 0xcf, 0xe0, 0xa4, 0x92, 0xda, 0x4a, 0x99, 0xf8, 0x9f, 0x8b, 0x75,
	0x3d, 0x86, 0x6d, 0x45, 0xf6, 0x25, 0xcc, 0x11, 0xf9, 0x0e, 0xc9, 0x53, 0x6f, 0xcd, 0xf1, 0x2b,
	0x22, 0xf4, 0xb5, 0xd8, 0x67, 0x5e, 0x29, 0xcd, 0xda, 0x9e, 0x4c, 0x39, 0xd6, 0xc5, 0x85, 0xf7,
	0x56, 0xcd, 0x9c, 0xb4, 0xd8, 0x36, 0xbe, 0xbd, 0xfc, 0x79, 0x14, 0x36, 0xd4, 0x5a, 0xe3, 0x6c,
	0x7e, 0x30, 0xce, 0x4a, 0x7a, 0x7b, 0xbd, 0x13, 0x37, 0xe6, 0xed, 0xb1, 0xc0, 0x76, 0xe2, 0x26,
	0xc9, 0xd7, 0x0e, 0xfd, 0x96, 0x44, 0x89, 0x2a, 0x8b, 0xc4, 0x6d, 0xc3, 0xa3, 0xd0, 0x91, 0x1e,
	0x5e, 0x06, 0xed, 0x6f, 0x2d, 0x55, 0x16, 0xf8, 0x38, 0xf4, 0xca, 0xb3, 0xd0, 0x91, 0xc1, 0x77,
	0xf4, 0x5b, 0x51, 0xb2, 0xd9, 0x5a, 0x06, 0x15, 0x42, 0xbe, 0x4e, 0x5c, 0x5d, 0x63, 0x21, 0x18,
	0xf2, 0xed, 0x6e, 0x55, 0x59, 0xe8, 0xd2, 0xfd, 0x14, 0x62, 0xa9, 0xe0, 0x4f, 0xc0, 0x30, 0x25,
	0xae, 0xae, 0xb9, 0xa2, 0xc4, 0x0a, 0xb9, 0x2f, 0xe9, 0x77, 0x93, 0x7c, 0x9d, 0xba, 0xb4, 0x0c,
	0x41, 0x5d, 0x63, 0x27, 0x6e, 0x84, 0xac, 0x36, 0x11, 0xec, 0x1a, 0x15, 0x07, 0xeb, 0x8b, 0xcc,
	0x6b, 0x2f, 0x15, 0x4d, 0xfe, 0xf9, 0x16, 0x25, 0x43, 0xeb, 0x9f, 0xa8, 0xe0, 0x2f, 0x3d, 0xfa,
	0x1e, 0xad, 0x03, 0x50, 0x65, 0xd1, 0xe1, 0xbe, 0x3b, 0xb9, 0x7b, 0x38, 0xf6, 0x2e, 0x64, 0xe4,
	0x5f, 0xc8, 0xea, 0xef, 0x33, 0x38, 0xba, 0xc8, 0x33, 0x1b, 0x53, 0x9a, 0x70, 0xf6, 0x4b, 0x38,
	0x7d, 0xc9, 0xcb, 0xe7, 0xf6, 0x93, 0x30, 0xdd, 0x5c, 0x6c, 0xb6, 0xec, 0x43, 0x07, 0xa5, 0xc6,
	0x87, 0xf4, 0x43, 0x56, 0xed, 0x49, 0xd5, 0x6b, 0x05, 0xef, 0xe1, 0x01, 0xcf, 0x79, 0xf6, 0x0e,
	0x07, 0xfc, 0x1a, 0xde, 0x7f, 0xb9, 0x13, 0x37, 0xcd, 0x13, 0x3e, 0x72, 0xaa, 0xad, 0xc7, 0x7b,
	0xf8, 0xe1, 0xa1, 0x40, 0x95, 0x45, 0xf0, 0x1e, 0xfb, 0x0a, 0xd8, 0x4b, 0x5e, 0x7e, 0x2b, 0xf4,
	0x6f, 0x70, 0x33, 0xfc, 0x46, 0xac, 0x39, 0x9e, 0x63, 0xaa, 0xc2, 0xff, 0x06, 0xec, 0x88, 0xe2,
	0x2b, 0x60, 0xcf, 0x79, 0x76, 0x6f, 0xf3, 0xaf, 0xe1, 0x01, 0x26, 0xd1, 0xb6, 0xbf, 0x7b, 0x1a,
	0x4f, 0xe8, 0x3d, 0xbe, 0x15, 0xfa, 0x72, 0x17, 0xbf, 0x28, 0x36, 0x02, 0x4f, 0x39, 0x76, 0xca,
	0xe6, 0x4b, 0xac, 0x23, 0x84, 0x27, 0xf4, 0x10, 0xf7, 0xb1, 0xb4, 0x2f, 0xd0, 0x34, 0xbd, 0x7b,
	0xe8, 0x4f, 0x61, 0x61, 0x42, 0xff, 0x26, 0x92, 0x78, 0xc2, 0x83, 0x36, 0x0a, 0xf2, 0x48, 0x76,
	0x44, 0xf0, 0x14, 0x16, 0x26, 0xf6, 0xbb, 0x9b, 0xfe, 0x0a, 0x8e, 0x6c, 0xf0, 0xd6, 0xf6, 0x3e,
	0xd0, 0x39, 0x31, 0x81, 0x5f, 0x44, 0xea, 0xeb, 0x8c, 0xb2, 0xff, 0xc0, 0xfb, 0x26, 0xa8, 0x3e,
	0x68, 0x3a, 0xa1, 0x73, 0x62, 0x82, 0xbf, 0x9f, 0xf9, 0x73, 0x38, 0xb5, 0x09, 0xd4, 0xf6, 0x77,
	0xcf, 0xe1, 0x59, 0x95, 0x83, 0xc8, 0xf3, 0x17, 0x9b, 0x1a, 0xbc, 0xfe, 0x3c, 0xef, 0x88, 0xe0,
	0x59, 0x95, 0xc0, 0xdd, 0x6d, 0xbd, 0xe8, 0x2b, 0xe3, 0x3b, 0x47, 0x1f, 0x8f, 0xe9, 0x8f, 0x09,
	0x5f, 0xfe, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x35, 0xe9, 0xb0, 0xd6, 0x59, 0x18, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CmlqosserviceClient is the client API for Cmlqosservice service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CmlqosserviceClient interface {
	//diffserv 映射在接口上的配置
	SetDiffservifCfg(ctx context.Context, in *Qosdiffservapply, opts ...grpc.CallOption) (*Qoscfgrtninfo, error)
	DelDiffservifCfg(ctx context.Context, in *Qosdiffservapply, opts ...grpc.CallOption) (*Qoscfgrtninfo, error)
	ShowDiffservifCfg(ctx context.Context, in *Qosservershowinput, opts ...grpc.CallOption) (*Qosservershowrtn, error)
	//label 相关qos配置(qos模式)
	SetQosLableModeCfg(ctx context.Context, in *Labelqosmode, opts ...grpc.CallOption) (*Qoscfgrtninfo, error)
	DelQosLableModeCfg(ctx context.Context, in *Labelqosmode, opts ...grpc.CallOption) (*Qoscfgrtninfo, error)
	ShowQosLableModeCfg(ctx context.Context, in *Qosservershowinput, opts ...grpc.CallOption) (*Qosservershowrtn, error)
	//device phb 行为相关配置
	SetQosPhbInfoCfg(ctx context.Context, in *Qosphbcfg, opts ...grpc.CallOption) (*Qoscfgrtninfo, error)
	DelQosPhbInfoCfg(ctx context.Context, in *Qosphbcfg, opts ...grpc.CallOption) (*Qoscfgrtninfo, error)
	ShowQosPhbInfoCfg(ctx context.Context, in *Qosservershowinput, opts ...grpc.CallOption) (*Qosservershowrtn, error)
	//qos流映射配置
	SetQosMapCfg(ctx context.Context, in *Qosdiffservmap, opts ...grpc.CallOption) (*Qoscfgrtninfo, error)
	DelQosMapCfg(ctx context.Context, in *Qosdiffservmap, opts ...grpc.CallOption) (*Qoscfgrtninfo, error)
	ShowQosMapCfg(ctx context.Context, in *Qosservershowinput, opts ...grpc.CallOption) (*Qosservershowrtn, error)
	//qos car 全局配置
	SetQosCarGloCfg(ctx context.Context, in *Qoscarglobalcfg, opts ...grpc.CallOption) (*Qoscfgrtninfo, error)
	DelQosCarGloCfg(ctx context.Context, in *Qoscarglobalcfg, opts ...grpc.CallOption) (*Qoscfgrtninfo, error)
	ShowQosCarGloCfg(ctx context.Context, in *Qosservershowinput, opts ...grpc.CallOption) (*Qosservershowrtn, error)
	//普通qos在接口上的配置,包含队列调度,car限速,整形等
	SetQosCommIfCfg(ctx context.Context, in *Qoscommifcfg, opts ...grpc.CallOption) (*Qoscfgrtninfo, error)
	DelQosCommIfCfg(ctx context.Context, in *Qoscommifcfg, opts ...grpc.CallOption) (*Qoscfgrtninfo, error)
	ShowQosCommIfCfg(ctx context.Context, in *Qosservershowinput, opts ...grpc.CallOption) (*Qosservershowrtn, error)
}

type cmlqosserviceClient struct {
	cc grpc.ClientConnInterface
}

func NewCmlqosserviceClient(cc grpc.ClientConnInterface) CmlqosserviceClient {
	return &cmlqosserviceClient{cc}
}

func (c *cmlqosserviceClient) SetDiffservifCfg(ctx context.Context, in *Qosdiffservapply, opts ...grpc.CallOption) (*Qoscfgrtninfo, error) {
	out := new(Qoscfgrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmlqosservice/SetDiffservifCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmlqosserviceClient) DelDiffservifCfg(ctx context.Context, in *Qosdiffservapply, opts ...grpc.CallOption) (*Qoscfgrtninfo, error) {
	out := new(Qoscfgrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmlqosservice/DelDiffservifCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmlqosserviceClient) ShowDiffservifCfg(ctx context.Context, in *Qosservershowinput, opts ...grpc.CallOption) (*Qosservershowrtn, error) {
	out := new(Qosservershowrtn)
	err := c.cc.Invoke(ctx, "/cml.Cmlqosservice/ShowDiffservifCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmlqosserviceClient) SetQosLableModeCfg(ctx context.Context, in *Labelqosmode, opts ...grpc.CallOption) (*Qoscfgrtninfo, error) {
	out := new(Qoscfgrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmlqosservice/SetQosLableModeCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmlqosserviceClient) DelQosLableModeCfg(ctx context.Context, in *Labelqosmode, opts ...grpc.CallOption) (*Qoscfgrtninfo, error) {
	out := new(Qoscfgrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmlqosservice/DelQosLableModeCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmlqosserviceClient) ShowQosLableModeCfg(ctx context.Context, in *Qosservershowinput, opts ...grpc.CallOption) (*Qosservershowrtn, error) {
	out := new(Qosservershowrtn)
	err := c.cc.Invoke(ctx, "/cml.Cmlqosservice/ShowQosLableModeCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmlqosserviceClient) SetQosPhbInfoCfg(ctx context.Context, in *Qosphbcfg, opts ...grpc.CallOption) (*Qoscfgrtninfo, error) {
	out := new(Qoscfgrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmlqosservice/SetQosPhbInfoCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmlqosserviceClient) DelQosPhbInfoCfg(ctx context.Context, in *Qosphbcfg, opts ...grpc.CallOption) (*Qoscfgrtninfo, error) {
	out := new(Qoscfgrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmlqosservice/DelQosPhbInfoCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmlqosserviceClient) ShowQosPhbInfoCfg(ctx context.Context, in *Qosservershowinput, opts ...grpc.CallOption) (*Qosservershowrtn, error) {
	out := new(Qosservershowrtn)
	err := c.cc.Invoke(ctx, "/cml.Cmlqosservice/ShowQosPhbInfoCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmlqosserviceClient) SetQosMapCfg(ctx context.Context, in *Qosdiffservmap, opts ...grpc.CallOption) (*Qoscfgrtninfo, error) {
	out := new(Qoscfgrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmlqosservice/SetQosMapCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmlqosserviceClient) DelQosMapCfg(ctx context.Context, in *Qosdiffservmap, opts ...grpc.CallOption) (*Qoscfgrtninfo, error) {
	out := new(Qoscfgrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmlqosservice/DelQosMapCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmlqosserviceClient) ShowQosMapCfg(ctx context.Context, in *Qosservershowinput, opts ...grpc.CallOption) (*Qosservershowrtn, error) {
	out := new(Qosservershowrtn)
	err := c.cc.Invoke(ctx, "/cml.Cmlqosservice/ShowQosMapCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmlqosserviceClient) SetQosCarGloCfg(ctx context.Context, in *Qoscarglobalcfg, opts ...grpc.CallOption) (*Qoscfgrtninfo, error) {
	out := new(Qoscfgrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmlqosservice/SetQosCarGloCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmlqosserviceClient) DelQosCarGloCfg(ctx context.Context, in *Qoscarglobalcfg, opts ...grpc.CallOption) (*Qoscfgrtninfo, error) {
	out := new(Qoscfgrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmlqosservice/DelQosCarGloCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmlqosserviceClient) ShowQosCarGloCfg(ctx context.Context, in *Qosservershowinput, opts ...grpc.CallOption) (*Qosservershowrtn, error) {
	out := new(Qosservershowrtn)
	err := c.cc.Invoke(ctx, "/cml.Cmlqosservice/ShowQosCarGloCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmlqosserviceClient) SetQosCommIfCfg(ctx context.Context, in *Qoscommifcfg, opts ...grpc.CallOption) (*Qoscfgrtninfo, error) {
	out := new(Qoscfgrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmlqosservice/SetQosCommIfCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmlqosserviceClient) DelQosCommIfCfg(ctx context.Context, in *Qoscommifcfg, opts ...grpc.CallOption) (*Qoscfgrtninfo, error) {
	out := new(Qoscfgrtninfo)
	err := c.cc.Invoke(ctx, "/cml.Cmlqosservice/DelQosCommIfCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmlqosserviceClient) ShowQosCommIfCfg(ctx context.Context, in *Qosservershowinput, opts ...grpc.CallOption) (*Qosservershowrtn, error) {
	out := new(Qosservershowrtn)
	err := c.cc.Invoke(ctx, "/cml.Cmlqosservice/ShowQosCommIfCfg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CmlqosserviceServer is the server API for Cmlqosservice service.
type CmlqosserviceServer interface {
	//diffserv 映射在接口上的配置
	SetDiffservifCfg(context.Context, *Qosdiffservapply) (*Qoscfgrtninfo, error)
	DelDiffservifCfg(context.Context, *Qosdiffservapply) (*Qoscfgrtninfo, error)
	ShowDiffservifCfg(context.Context, *Qosservershowinput) (*Qosservershowrtn, error)
	//label 相关qos配置(qos模式)
	SetQosLableModeCfg(context.Context, *Labelqosmode) (*Qoscfgrtninfo, error)
	DelQosLableModeCfg(context.Context, *Labelqosmode) (*Qoscfgrtninfo, error)
	ShowQosLableModeCfg(context.Context, *Qosservershowinput) (*Qosservershowrtn, error)
	//device phb 行为相关配置
	SetQosPhbInfoCfg(context.Context, *Qosphbcfg) (*Qoscfgrtninfo, error)
	DelQosPhbInfoCfg(context.Context, *Qosphbcfg) (*Qoscfgrtninfo, error)
	ShowQosPhbInfoCfg(context.Context, *Qosservershowinput) (*Qosservershowrtn, error)
	//qos流映射配置
	SetQosMapCfg(context.Context, *Qosdiffservmap) (*Qoscfgrtninfo, error)
	DelQosMapCfg(context.Context, *Qosdiffservmap) (*Qoscfgrtninfo, error)
	ShowQosMapCfg(context.Context, *Qosservershowinput) (*Qosservershowrtn, error)
	//qos car 全局配置
	SetQosCarGloCfg(context.Context, *Qoscarglobalcfg) (*Qoscfgrtninfo, error)
	DelQosCarGloCfg(context.Context, *Qoscarglobalcfg) (*Qoscfgrtninfo, error)
	ShowQosCarGloCfg(context.Context, *Qosservershowinput) (*Qosservershowrtn, error)
	//普通qos在接口上的配置,包含队列调度,car限速,整形等
	SetQosCommIfCfg(context.Context, *Qoscommifcfg) (*Qoscfgrtninfo, error)
	DelQosCommIfCfg(context.Context, *Qoscommifcfg) (*Qoscfgrtninfo, error)
	ShowQosCommIfCfg(context.Context, *Qosservershowinput) (*Qosservershowrtn, error)
}

// UnimplementedCmlqosserviceServer can be embedded to have forward compatible implementations.
type UnimplementedCmlqosserviceServer struct {
}

func (*UnimplementedCmlqosserviceServer) SetDiffservifCfg(ctx context.Context, req *Qosdiffservapply) (*Qoscfgrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetDiffservifCfg not implemented")
}
func (*UnimplementedCmlqosserviceServer) DelDiffservifCfg(ctx context.Context, req *Qosdiffservapply) (*Qoscfgrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelDiffservifCfg not implemented")
}
func (*UnimplementedCmlqosserviceServer) ShowDiffservifCfg(ctx context.Context, req *Qosservershowinput) (*Qosservershowrtn, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowDiffservifCfg not implemented")
}
func (*UnimplementedCmlqosserviceServer) SetQosLableModeCfg(ctx context.Context, req *Labelqosmode) (*Qoscfgrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetQosLableModeCfg not implemented")
}
func (*UnimplementedCmlqosserviceServer) DelQosLableModeCfg(ctx context.Context, req *Labelqosmode) (*Qoscfgrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelQosLableModeCfg not implemented")
}
func (*UnimplementedCmlqosserviceServer) ShowQosLableModeCfg(ctx context.Context, req *Qosservershowinput) (*Qosservershowrtn, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowQosLableModeCfg not implemented")
}
func (*UnimplementedCmlqosserviceServer) SetQosPhbInfoCfg(ctx context.Context, req *Qosphbcfg) (*Qoscfgrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetQosPhbInfoCfg not implemented")
}
func (*UnimplementedCmlqosserviceServer) DelQosPhbInfoCfg(ctx context.Context, req *Qosphbcfg) (*Qoscfgrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelQosPhbInfoCfg not implemented")
}
func (*UnimplementedCmlqosserviceServer) ShowQosPhbInfoCfg(ctx context.Context, req *Qosservershowinput) (*Qosservershowrtn, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowQosPhbInfoCfg not implemented")
}
func (*UnimplementedCmlqosserviceServer) SetQosMapCfg(ctx context.Context, req *Qosdiffservmap) (*Qoscfgrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetQosMapCfg not implemented")
}
func (*UnimplementedCmlqosserviceServer) DelQosMapCfg(ctx context.Context, req *Qosdiffservmap) (*Qoscfgrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelQosMapCfg not implemented")
}
func (*UnimplementedCmlqosserviceServer) ShowQosMapCfg(ctx context.Context, req *Qosservershowinput) (*Qosservershowrtn, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowQosMapCfg not implemented")
}
func (*UnimplementedCmlqosserviceServer) SetQosCarGloCfg(ctx context.Context, req *Qoscarglobalcfg) (*Qoscfgrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetQosCarGloCfg not implemented")
}
func (*UnimplementedCmlqosserviceServer) DelQosCarGloCfg(ctx context.Context, req *Qoscarglobalcfg) (*Qoscfgrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelQosCarGloCfg not implemented")
}
func (*UnimplementedCmlqosserviceServer) ShowQosCarGloCfg(ctx context.Context, req *Qosservershowinput) (*Qosservershowrtn, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowQosCarGloCfg not implemented")
}
func (*UnimplementedCmlqosserviceServer) SetQosCommIfCfg(ctx context.Context, req *Qoscommifcfg) (*Qoscfgrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetQosCommIfCfg not implemented")
}
func (*UnimplementedCmlqosserviceServer) DelQosCommIfCfg(ctx context.Context, req *Qoscommifcfg) (*Qoscfgrtninfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelQosCommIfCfg not implemented")
}
func (*UnimplementedCmlqosserviceServer) ShowQosCommIfCfg(ctx context.Context, req *Qosservershowinput) (*Qosservershowrtn, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowQosCommIfCfg not implemented")
}

func RegisterCmlqosserviceServer(s *grpc.Server, srv CmlqosserviceServer) {
	s.RegisterService(&_Cmlqosservice_serviceDesc, srv)
}

func _Cmlqosservice_SetDiffservifCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Qosdiffservapply)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmlqosserviceServer).SetDiffservifCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmlqosservice/SetDiffservifCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmlqosserviceServer).SetDiffservifCfg(ctx, req.(*Qosdiffservapply))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmlqosservice_DelDiffservifCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Qosdiffservapply)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmlqosserviceServer).DelDiffservifCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmlqosservice/DelDiffservifCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmlqosserviceServer).DelDiffservifCfg(ctx, req.(*Qosdiffservapply))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmlqosservice_ShowDiffservifCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Qosservershowinput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmlqosserviceServer).ShowDiffservifCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmlqosservice/ShowDiffservifCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmlqosserviceServer).ShowDiffservifCfg(ctx, req.(*Qosservershowinput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmlqosservice_SetQosLableModeCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Labelqosmode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmlqosserviceServer).SetQosLableModeCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmlqosservice/SetQosLableModeCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmlqosserviceServer).SetQosLableModeCfg(ctx, req.(*Labelqosmode))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmlqosservice_DelQosLableModeCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Labelqosmode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmlqosserviceServer).DelQosLableModeCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmlqosservice/DelQosLableModeCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmlqosserviceServer).DelQosLableModeCfg(ctx, req.(*Labelqosmode))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmlqosservice_ShowQosLableModeCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Qosservershowinput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmlqosserviceServer).ShowQosLableModeCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmlqosservice/ShowQosLableModeCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmlqosserviceServer).ShowQosLableModeCfg(ctx, req.(*Qosservershowinput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmlqosservice_SetQosPhbInfoCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Qosphbcfg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmlqosserviceServer).SetQosPhbInfoCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmlqosservice/SetQosPhbInfoCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmlqosserviceServer).SetQosPhbInfoCfg(ctx, req.(*Qosphbcfg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmlqosservice_DelQosPhbInfoCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Qosphbcfg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmlqosserviceServer).DelQosPhbInfoCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmlqosservice/DelQosPhbInfoCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmlqosserviceServer).DelQosPhbInfoCfg(ctx, req.(*Qosphbcfg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmlqosservice_ShowQosPhbInfoCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Qosservershowinput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmlqosserviceServer).ShowQosPhbInfoCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmlqosservice/ShowQosPhbInfoCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmlqosserviceServer).ShowQosPhbInfoCfg(ctx, req.(*Qosservershowinput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmlqosservice_SetQosMapCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Qosdiffservmap)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmlqosserviceServer).SetQosMapCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmlqosservice/SetQosMapCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmlqosserviceServer).SetQosMapCfg(ctx, req.(*Qosdiffservmap))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmlqosservice_DelQosMapCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Qosdiffservmap)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmlqosserviceServer).DelQosMapCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmlqosservice/DelQosMapCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmlqosserviceServer).DelQosMapCfg(ctx, req.(*Qosdiffservmap))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmlqosservice_ShowQosMapCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Qosservershowinput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmlqosserviceServer).ShowQosMapCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmlqosservice/ShowQosMapCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmlqosserviceServer).ShowQosMapCfg(ctx, req.(*Qosservershowinput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmlqosservice_SetQosCarGloCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Qoscarglobalcfg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmlqosserviceServer).SetQosCarGloCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmlqosservice/SetQosCarGloCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmlqosserviceServer).SetQosCarGloCfg(ctx, req.(*Qoscarglobalcfg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmlqosservice_DelQosCarGloCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Qoscarglobalcfg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmlqosserviceServer).DelQosCarGloCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmlqosservice/DelQosCarGloCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmlqosserviceServer).DelQosCarGloCfg(ctx, req.(*Qoscarglobalcfg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmlqosservice_ShowQosCarGloCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Qosservershowinput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmlqosserviceServer).ShowQosCarGloCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmlqosservice/ShowQosCarGloCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmlqosserviceServer).ShowQosCarGloCfg(ctx, req.(*Qosservershowinput))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmlqosservice_SetQosCommIfCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Qoscommifcfg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmlqosserviceServer).SetQosCommIfCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmlqosservice/SetQosCommIfCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmlqosserviceServer).SetQosCommIfCfg(ctx, req.(*Qoscommifcfg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmlqosservice_DelQosCommIfCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Qoscommifcfg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmlqosserviceServer).DelQosCommIfCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmlqosservice/DelQosCommIfCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmlqosserviceServer).DelQosCommIfCfg(ctx, req.(*Qoscommifcfg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cmlqosservice_ShowQosCommIfCfg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Qosservershowinput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmlqosserviceServer).ShowQosCommIfCfg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cml.Cmlqosservice/ShowQosCommIfCfg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmlqosserviceServer).ShowQosCommIfCfg(ctx, req.(*Qosservershowinput))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cmlqosservice_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cml.Cmlqosservice",
	HandlerType: (*CmlqosserviceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetDiffservifCfg",
			Handler:    _Cmlqosservice_SetDiffservifCfg_Handler,
		},
		{
			MethodName: "DelDiffservifCfg",
			Handler:    _Cmlqosservice_DelDiffservifCfg_Handler,
		},
		{
			MethodName: "ShowDiffservifCfg",
			Handler:    _Cmlqosservice_ShowDiffservifCfg_Handler,
		},
		{
			MethodName: "SetQosLableModeCfg",
			Handler:    _Cmlqosservice_SetQosLableModeCfg_Handler,
		},
		{
			MethodName: "DelQosLableModeCfg",
			Handler:    _Cmlqosservice_DelQosLableModeCfg_Handler,
		},
		{
			MethodName: "ShowQosLableModeCfg",
			Handler:    _Cmlqosservice_ShowQosLableModeCfg_Handler,
		},
		{
			MethodName: "SetQosPhbInfoCfg",
			Handler:    _Cmlqosservice_SetQosPhbInfoCfg_Handler,
		},
		{
			MethodName: "DelQosPhbInfoCfg",
			Handler:    _Cmlqosservice_DelQosPhbInfoCfg_Handler,
		},
		{
			MethodName: "ShowQosPhbInfoCfg",
			Handler:    _Cmlqosservice_ShowQosPhbInfoCfg_Handler,
		},
		{
			MethodName: "SetQosMapCfg",
			Handler:    _Cmlqosservice_SetQosMapCfg_Handler,
		},
		{
			MethodName: "DelQosMapCfg",
			Handler:    _Cmlqosservice_DelQosMapCfg_Handler,
		},
		{
			MethodName: "ShowQosMapCfg",
			Handler:    _Cmlqosservice_ShowQosMapCfg_Handler,
		},
		{
			MethodName: "SetQosCarGloCfg",
			Handler:    _Cmlqosservice_SetQosCarGloCfg_Handler,
		},
		{
			MethodName: "DelQosCarGloCfg",
			Handler:    _Cmlqosservice_DelQosCarGloCfg_Handler,
		},
		{
			MethodName: "ShowQosCarGloCfg",
			Handler:    _Cmlqosservice_ShowQosCarGloCfg_Handler,
		},
		{
			MethodName: "SetQosCommIfCfg",
			Handler:    _Cmlqosservice_SetQosCommIfCfg_Handler,
		},
		{
			MethodName: "DelQosCommIfCfg",
			Handler:    _Cmlqosservice_DelQosCommIfCfg_Handler,
		},
		{
			MethodName: "ShowQosCommIfCfg",
			Handler:    _Cmlqosservice_ShowQosCommIfCfg_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "qos.proto",
}
